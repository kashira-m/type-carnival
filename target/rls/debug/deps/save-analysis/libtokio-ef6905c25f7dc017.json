{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21","program":"/home/montu/.rustup/toolchains/nightly-2020-05-15-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=ef6905c25f7dc017","-C","extra-filename=-ef6905c25f7dc017","--out-dir","/home/montu/workspace/type-carnival/target/rls/debug/deps","-L","dependency=/home/montu/workspace/type-carnival/target/rls/debug/deps","--extern","bytes=/home/montu/workspace/type-carnival/target/rls/debug/deps/libbytes-c35d301d624e5310.rmeta","--extern","fnv=/home/montu/workspace/type-carnival/target/rls/debug/deps/libfnv-ec5ff5c22e509e5d.rmeta","--extern","futures_core=/home/montu/workspace/type-carnival/target/rls/debug/deps/libfutures_core-c0ecb6762592ec3f.rmeta","--extern","iovec=/home/montu/workspace/type-carnival/target/rls/debug/deps/libiovec-065194abfc816234.rmeta","--extern","lazy_static=/home/montu/workspace/type-carnival/target/rls/debug/deps/liblazy_static-c7301fb958dd2f38.rmeta","--extern","libc=/home/montu/workspace/type-carnival/target/rls/debug/deps/liblibc-f9eb3aaab8e5ec2c.rmeta","--extern","memchr=/home/montu/workspace/type-carnival/target/rls/debug/deps/libmemchr-1d8daa264ecd61db.rmeta","--extern","mio=/home/montu/workspace/type-carnival/target/rls/debug/deps/libmio-c777e9b52cbae919.rmeta","--extern","mio_uds=/home/montu/workspace/type-carnival/target/rls/debug/deps/libmio_uds-a30ddaa9616b0f3b.rmeta","--extern","num_cpus=/home/montu/workspace/type-carnival/target/rls/debug/deps/libnum_cpus-432d2eb8e9a42286.rmeta","--extern","pin_project_lite=/home/montu/workspace/type-carnival/target/rls/debug/deps/libpin_project_lite-6cc1e5a3109498b4.rmeta","--extern","signal_hook_registry=/home/montu/workspace/type-carnival/target/rls/debug/deps/libsignal_hook_registry-71f23cd9547cfda8.rmeta","--extern","slab=/home/montu/workspace/type-carnival/target/rls/debug/deps/libslab-4402f1e5a3df95db.rmeta","--extern","tokio_macros=/home/montu/workspace/type-carnival/target/rls/debug/deps/libtokio_macros-37a9bea5970686e8.so","--cap-lints","allow","--error-format=json","--sysroot","/home/montu/.rustup/toolchains/nightly-2020-05-15-x86_64-unknown-linux-gnu"],"output":"/home/montu/workspace/type-carnival/target/rls/debug/deps/libtokio-ef6905c25f7dc017.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[15923098205855914478,9442425764548751263]},"crate_root":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src","external_crates":[{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1725593320389574029,10812474936558420810]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[7623152156312283121,2838623298767507782]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1731395575798169520,1884547218845398972]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7318645639700950485,15238163179688231211]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1635624093347057069,10094781591962670449]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9316326694599880631,7218842784890799951]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10342387391199557987,16273052581011940336]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1921112458813199695,10607800479396413487]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13779647097227580872,15024147572672357597]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3214087377516229592,14778411589802066958]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16045493643044854710,12490446253221992255]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[10934888633440127889,2136689594154832542]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6550039116559816093,3091048091181319940]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16674634232773274505,333982420920905254]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[9295817649929651743,9187003482551345359]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[14727903227078358377,8666240152456967342]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","num":17,"id":{"name":"lazy_static","disambiguator":[1650610645946477266,18135511597592592424]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[5983727375949985408,17218909150659323573]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":19,"id":{"name":"mio","disambiguator":[11372854803192092745,6904219818401053374]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":20,"id":{"name":"net2","disambiguator":[6596620782848403476,12200471145958713855]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","num":21,"id":{"name":"libc","disambiguator":[13958246273454199179,9746713338053885047]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":22,"id":{"name":"cfg_if","disambiguator":[10969609579768057480,17945097390269213858]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","num":23,"id":{"name":"iovec","disambiguator":[9236086452216228278,2002099260058883885]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","num":24,"id":{"name":"slab","disambiguator":[11896642728013392992,3441679157391276234]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":25,"id":{"name":"log","disambiguator":[4382852767019401665,13599890512988443229]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":26,"id":{"name":"mio_uds","disambiguator":[17726995535245889096,8138196824172461082]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","num":27,"id":{"name":"fnv","disambiguator":[14652807357011375395,6481882719613314607]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":28,"id":{"name":"tokio_macros","disambiguator":[9375219615296766088,9371387111152253686]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","num":29,"id":{"name":"memchr","disambiguator":[4835885833447937845,4875534889223322523]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/mod.rs","num":30,"id":{"name":"num_cpus","disambiguator":[15712683309465739619,2032519803684107702]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":31,"id":{"name":"signal_hook_registry","disambiguator":[12566899611982920724,12436215975047518686]}},{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":32,"id":{"name":"arc_swap","disambiguator":[9332510340066546889,17085024064173403805]}}],"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":0,"byte_end":15787,"line_start":1,"line_end":435,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30505,"byte_end":30515,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30517,"byte_end":30524,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30552,"byte_end":30564,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":2,"index":8178},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30590,"byte_end":30596,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":2,"index":29841},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30616,"byte_end":30619,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":2,"index":32260},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30640,"byte_end":30644,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234043,"byte_end":8234055,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234100,"byte_end":8234110,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234163,"byte_end":8234177,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234210,"byte_end":8234214,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234257,"byte_end":8234266,"line_start":40,"line_end":40,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234307,"byte_end":8234315,"line_start":43,"line_end":43,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1281},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234364,"byte_end":8234375,"line_start":46,"line_end":46,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/mod.rs","byte_start":8280625,"byte_end":8280632,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1068}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234421,"byte_end":8234425,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234467,"byte_end":8234475,"line_start":54,"line_end":54,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234477,"byte_end":8234485,"line_start":54,"line_end":54,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234487,"byte_end":8234494,"line_start":54,"line_end":54,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234538,"byte_end":8234547,"line_start":57,"line_end":57,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234600,"byte_end":8234614,"line_start":60,"line_end":60,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234659,"byte_end":8234669,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234722,"byte_end":8234736,"line_start":66,"line_end":66,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234783,"byte_end":8234794,"line_start":69,"line_end":69,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234831,"byte_end":8234837,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234892,"byte_end":8234907,"line_start":75,"line_end":75,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234964,"byte_end":8234980,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8235015,"byte_end":8235020,"line_start":81,"line_end":81,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8235053,"byte_end":8235057,"line_start":84,"line_end":84,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":887}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30748,"byte_end":30758,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30760,"byte_end":30769,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30803,"byte_end":30810,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43448,"byte_end":43460,"line_start":162,"line_end":162,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43505,"byte_end":43514,"line_start":165,"line_end":165,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43559,"byte_end":43568,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43615,"byte_end":43625,"line_start":171,"line_end":171,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1681},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43721,"byte_end":43732,"line_start":177,"line_end":177,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43783,"byte_end":43795,"line_start":180,"line_end":180,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1736},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43851,"byte_end":43857,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1737},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43859,"byte_end":43865,"line_start":185,"line_end":185,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1741},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43904,"byte_end":43909,"line_start":188,"line_end":188,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43911,"byte_end":43916,"line_start":188,"line_end":188,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1746},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43957,"byte_end":43963,"line_start":191,"line_end":191,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1747},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43965,"byte_end":43971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44027,"byte_end":44032,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1865},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44034,"byte_end":44042,"line_start":196,"line_end":196,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44044,"byte_end":44053,"line_start":196,"line_end":196,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44106,"byte_end":44110,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2616},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44166,"byte_end":44170,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2639},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44172,"byte_end":44177,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2802},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44179,"byte_end":44185,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2817},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44187,"byte_end":44191,"line_start":203,"line_end":203,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44193,"byte_end":44208,"line_start":203,"line_end":203,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2550},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44210,"byte_end":44222,"line_start":203,"line_end":203,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1944},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44224,"byte_end":44236,"line_start":203,"line_end":203,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44238,"byte_end":44251,"line_start":203,"line_end":203,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":11247},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44261,"byte_end":44270,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":11233},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44272,"byte_end":44281,"line_start":204,"line_end":204,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":11170},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44283,"byte_end":44292,"line_start":204,"line_end":204,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2621},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44294,"byte_end":44298,"line_start":204,"line_end":204,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44300,"byte_end":44305,"line_start":204,"line_end":204,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":11098},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44307,"byte_end":44312,"line_start":204,"line_end":204,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2803},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44314,"byte_end":44320,"line_start":204,"line_end":204,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2815},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44322,"byte_end":44326,"line_start":204,"line_end":204,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":10624},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44328,"byte_end":44333,"line_start":204,"line_end":204,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":10533},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44335,"byte_end":44339,"line_start":204,"line_end":204,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2833},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44390,"byte_end":44403,"line_start":208,"line_end":208,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":10578},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44405,"byte_end":44417,"line_start":208,"line_end":208,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":2515},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44572,"byte_end":44577,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":6572},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44579,"byte_end":44588,"line_start":213,"line_end":213,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":2513},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44590,"byte_end":44596,"line_start":213,"line_end":213,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70822,"byte_end":70835,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3027},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70895,"byte_end":70906,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3298},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502594,"byte_end":8502602,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3304},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502632,"byte_end":8502640,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3311},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502642,"byte_end":8502651,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3318},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502694,"byte_end":8502707,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3322},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502709,"byte_end":8502723,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3327},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502725,"byte_end":8502737,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3032}},{"kind":"Use","ref_id":{"krate":0,"index":3296},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70966,"byte_end":70977,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3333},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71004,"byte_end":71013,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3469},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8560843,"byte_end":8560851,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3335}},{"kind":"Use","ref_id":{"krate":0,"index":3474},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8560853,"byte_end":8560865,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3335}},{"kind":"Use","ref_id":{"krate":0,"index":3464},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8560867,"byte_end":8560875,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3335}},{"kind":"Use","ref_id":{"krate":0,"index":3462},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71071,"byte_end":71080,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3725},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8581871,"byte_end":8581879,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3480}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8581974,"byte_end":8581982,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3480}},{"kind":"Use","ref_id":{"krate":0,"index":3740},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8581984,"byte_end":8581993,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3480}},{"kind":"Use","ref_id":{"krate":0,"index":3749},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8582082,"byte_end":8582087,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3480}},{"kind":"Use","ref_id":{"krate":0,"index":3723},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71142,"byte_end":71154,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3731},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71184,"byte_end":71196,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3747},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71224,"byte_end":71234,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103288,"byte_end":103292,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103294,"byte_end":103306,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103308,"byte_end":103317,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103319,"byte_end":103329,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103394,"byte_end":103409,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103413,"byte_end":103414,"line_start":20,"line_end":20,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":2550},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103416,"byte_end":103428,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103432,"byte_end":103433,"line_start":20,"line_end":20,"column_start":63,"column_end":64},"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":1944},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103435,"byte_end":103447,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103451,"byte_end":103452,"line_start":20,"line_end":20,"column_start":82,"column_end":83},"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103454,"byte_end":103467,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103471,"byte_end":103472,"line_start":20,"line_end":20,"column_start":102,"column_end":103},"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110998,"byte_end":111005,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":5034},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111090,"byte_end":111096,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111098,"byte_end":111113,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":5515},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820741,"byte_end":8820747,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5510}},{"kind":"Use","ref_id":{"krate":0,"index":5769},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857676,"byte_end":8857686,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":5861},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857716,"byte_end":8857721,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6301},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857723,"byte_end":8857728,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":5962},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857894,"byte_end":8857898,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6308},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857900,"byte_end":8857904,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6052},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858014,"byte_end":8858018,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6322},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858020,"byte_end":8858024,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6075},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858059,"byte_end":8858066,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6328},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858068,"byte_end":8858075,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":6335},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858115,"byte_end":8858124,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858416,"byte_end":8858422,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":5691}},{"kind":"Use","ref_id":{"krate":0,"index":7720},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975891,"byte_end":8975898,"line_start":429,"line_end":429,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":7732},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975900,"byte_end":8975917,"line_start":429,"line_end":429,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":6682},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022532,"byte_end":9022539,"line_start":41,"line_end":41,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":6676},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022541,"byte_end":9022549,"line_start":41,"line_end":41,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":6667},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022551,"byte_end":9022557,"line_start":41,"line_end":41,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":6953},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022635,"byte_end":9022652,"line_start":48,"line_end":48,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":6947},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022654,"byte_end":9022671,"line_start":48,"line_end":48,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":6938},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022673,"byte_end":9022688,"line_start":48,"line_end":48,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6581}},{"kind":"Use","ref_id":{"krate":0,"index":7857},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976142,"byte_end":8976147,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":7016},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976149,"byte_end":8976159,"line_start":441,"line_end":441,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":7864},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976161,"byte_end":8976173,"line_start":441,"line_end":441,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":7020},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976175,"byte_end":8976190,"line_start":441,"line_end":441,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":7869},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976230,"byte_end":8976236,"line_start":444,"line_end":444,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8002},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976373,"byte_end":8976382,"line_start":451,"line_end":451,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8006},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976384,"byte_end":8976399,"line_start":451,"line_end":451,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8013},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976401,"byte_end":8976421,"line_start":451,"line_end":451,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8023},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976462,"byte_end":8976468,"line_start":454,"line_end":454,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8030},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976470,"byte_end":8976485,"line_start":454,"line_end":454,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8039},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976487,"byte_end":8976503,"line_start":454,"line_end":454,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6380}},{"kind":"Use","ref_id":{"krate":0,"index":8113},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244435,"byte_end":9244449,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8110},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244501,"byte_end":9244515,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":4763},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244576,"byte_end":9244585,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":4765},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244587,"byte_end":9244597,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8132},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244635,"byte_end":9244640,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8134},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244685,"byte_end":9244694,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8294},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244749,"byte_end":9244760,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8285},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244762,"byte_end":9244770,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8237},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244818,"byte_end":9244826,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8105}},{"kind":"Use","ref_id":{"krate":0,"index":8132},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14522,"byte_end":14527,"line_start":388,"line_end":388,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8794},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282373,"byte_end":9282383,"line_start":69,"line_end":69,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8400},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282413,"byte_end":9282422,"line_start":72,"line_end":72,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8399},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282424,"byte_end":9282435,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8836},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282437,"byte_end":9282442,"line_start":72,"line_end":72,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8893},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282496,"byte_end":9282501,"line_start":77,"line_end":77,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8905},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282540,"byte_end":9282547,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8652},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282583,"byte_end":9282591,"line_start":83,"line_end":83,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8653},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282593,"byte_end":9282604,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8928},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282606,"byte_end":9282614,"line_start":83,"line_end":83,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8679},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282664,"byte_end":9282671,"line_start":87,"line_end":87,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8681},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282673,"byte_end":9282683,"line_start":87,"line_end":87,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8940},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282685,"byte_end":9282692,"line_start":87,"line_end":87,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8933},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282694,"byte_end":9282701,"line_start":87,"line_end":87,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":8962},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282760,"byte_end":9282768,"line_start":91,"line_end":91,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":9352},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282770,"byte_end":9282778,"line_start":91,"line_end":91,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":2,"index":32124},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282887,"byte_end":9282895,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8309}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/mod.rs","byte_start":173646,"byte_end":173658,"line_start":24,"line_end":24,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":757}},{"kind":"Use","ref_id":{"krate":28,"index":45},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14801,"byte_end":14832,"line_start":402,"line_end":402,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":15168,"byte_end":15181,"line_start":411,"line_end":411,"column_start":35,"column_end":48},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":15185,"byte_end":15189,"line_start":411,"line_end":411,"column_start":52,"column_end":56},"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":15288,"byte_end":15301,"line_start":414,"line_end":414,"column_start":35,"column_end":48},"alias_span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":15305,"byte_end":15309,"line_start":414,"line_end":414,"column_start":52,"column_end":56},"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":0,"byte_end":15787,"line_start":1,"line_end":435,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":887},{"krate":0,"index":81},{"krate":0,"index":175},{"krate":0,"index":306},{"krate":0,"index":366},{"krate":0,"index":502},{"krate":0,"index":549},{"krate":0,"index":3872},{"krate":0,"index":555},{"krate":0,"index":738},{"krate":0,"index":5510},{"krate":0,"index":5691},{"krate":0,"index":6380},{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8309},{"krate":0,"index":757},{"krate":0,"index":9324},{"krate":0,"index":9325},{"krate":0,"index":9326}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":477,"byte_end":549,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":550,"byte_end":553,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":554,"byte_end":634,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":635,"byte_end":707,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":708,"byte_end":744,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":745,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":749,"byte_end":816,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":817,"byte_end":897,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":898,"byte_end":921,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":922,"byte_end":1009,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1010,"byte_end":1083,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1084,"byte_end":1162,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1163,"byte_end":1243,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1244,"byte_end":1294,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1299,"byte_end":1355,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1360,"byte_end":1392,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1393,"byte_end":1416,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1417,"byte_end":1440,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1441,"byte_end":1467,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1468,"byte_end":1489,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1490,"byte_end":1509,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1510,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1540,"byte_end":1567,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1568,"byte_end":1587,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1588,"byte_end":1617,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1618,"byte_end":1664,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1669,"byte_end":1690,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1691,"byte_end":1694,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1695,"byte_end":1774,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1775,"byte_end":1848,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1849,"byte_end":1928,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1929,"byte_end":1944,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1949,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2022,"byte_end":2059,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2064,"byte_end":2075,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2076,"byte_end":2128,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2129,"byte_end":2136,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2137,"byte_end":2140,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2141,"byte_end":2161,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2162,"byte_end":2165,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2166,"byte_end":2247,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2248,"byte_end":2326,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2327,"byte_end":2407,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2408,"byte_end":2485,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2486,"byte_end":2569,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2570,"byte_end":2647,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2648,"byte_end":2735,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2736,"byte_end":2817,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2818,"byte_end":2827,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2828,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2832,"byte_end":2897,"line_start":75,"line_end":75,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2898,"byte_end":2980,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2981,"byte_end":3063,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3064,"byte_end":3113,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3114,"byte_end":3167,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3168,"byte_end":3219,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3220,"byte_end":3280,"line_start":81,"line_end":81,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3281,"byte_end":3371,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3372,"byte_end":3421,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3422,"byte_end":3471,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3472,"byte_end":3522,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3523,"byte_end":3600,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3601,"byte_end":3624,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3625,"byte_end":3673,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3674,"byte_end":3743,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3744,"byte_end":3790,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3791,"byte_end":3872,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3873,"byte_end":3923,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3924,"byte_end":3962,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3963,"byte_end":4018,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4019,"byte_end":4097,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4098,"byte_end":4162,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4167,"byte_end":4249,"line_start":98,"line_end":98,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4250,"byte_end":4272,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4277,"byte_end":4302,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4303,"byte_end":4306,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4307,"byte_end":4375,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4376,"byte_end":4439,"line_start":104,"line_end":104,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4440,"byte_end":4490,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4491,"byte_end":4494,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4495,"byte_end":4574,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4575,"byte_end":4652,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4653,"byte_end":4686,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4687,"byte_end":4690,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4691,"byte_end":4788,"line_start":111,"line_end":111,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4789,"byte_end":4792,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4793,"byte_end":4823,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4824,"byte_end":4827,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4828,"byte_end":4909,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4910,"byte_end":4995,"line_start":116,"line_end":116,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4996,"byte_end":5080,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5081,"byte_end":5111,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5112,"byte_end":5115,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5116,"byte_end":5132,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5137,"byte_end":5203,"line_start":122,"line_end":122,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5204,"byte_end":5207,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5208,"byte_end":5219,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5220,"byte_end":5272,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5273,"byte_end":5280,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5281,"byte_end":5284,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5285,"byte_end":5312,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5313,"byte_end":5316,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5317,"byte_end":5396,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5397,"byte_end":5479,"line_start":131,"line_end":131,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5480,"byte_end":5561,"line_start":132,"line_end":132,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5562,"byte_end":5597,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5602,"byte_end":5618,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5619,"byte_end":5622,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5623,"byte_end":5705,"line_start":137,"line_end":137,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5706,"byte_end":5756,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5757,"byte_end":5760,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5761,"byte_end":5772,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5773,"byte_end":5835,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5836,"byte_end":5843,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5844,"byte_end":5847,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5848,"byte_end":5873,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5874,"byte_end":5877,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5878,"byte_end":5954,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5955,"byte_end":6038,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6039,"byte_end":6082,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6087,"byte_end":6166,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6167,"byte_end":6250,"line_start":151,"line_end":151,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6251,"byte_end":6329,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6330,"byte_end":6349,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6350,"byte_end":6353,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6354,"byte_end":6432,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6433,"byte_end":6448,"line_start":156,"line_end":156,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6449,"byte_end":6452,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6453,"byte_end":6496,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6497,"byte_end":6529,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6530,"byte_end":6565,"line_start":160,"line_end":160,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6566,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6610,"byte_end":6663,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6664,"byte_end":6667,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6668,"byte_end":6746,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6747,"byte_end":6803,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6804,"byte_end":6807,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6808,"byte_end":6881,"line_start":167,"line_end":167,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6882,"byte_end":6902,"line_start":168,"line_end":168,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6903,"byte_end":6978,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6979,"byte_end":6991,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6992,"byte_end":7072,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7073,"byte_end":7103,"line_start":172,"line_end":172,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7104,"byte_end":7107,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7108,"byte_end":7184,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7185,"byte_end":7197,"line_start":175,"line_end":175,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7198,"byte_end":7201,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7202,"byte_end":7234,"line_start":177,"line_end":177,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7235,"byte_end":7268,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7269,"byte_end":7306,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7307,"byte_end":7344,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7345,"byte_end":7376,"line_start":181,"line_end":181,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7377,"byte_end":7410,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7411,"byte_end":7414,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7415,"byte_end":7486,"line_start":184,"line_end":184,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7487,"byte_end":7567,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7568,"byte_end":7656,"line_start":186,"line_end":186,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7657,"byte_end":7681,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7682,"byte_end":7685,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7686,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7766,"byte_end":7798,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7799,"byte_end":7836,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7837,"byte_end":7876,"line_start":193,"line_end":193,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7877,"byte_end":7914,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7915,"byte_end":7918,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7919,"byte_end":7997,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7998,"byte_end":8082,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8083,"byte_end":8155,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8156,"byte_end":8233,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8234,"byte_end":8256,"line_start":200,"line_end":200,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8257,"byte_end":8260,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8261,"byte_end":8340,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8341,"byte_end":8419,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8420,"byte_end":8488,"line_start":204,"line_end":204,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8489,"byte_end":8567,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8568,"byte_end":8638,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8639,"byte_end":8642,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8643,"byte_end":8669,"line_start":208,"line_end":208,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8670,"byte_end":8708,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8709,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8791,"byte_end":8840,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8841,"byte_end":8897,"line_start":213,"line_end":213,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8898,"byte_end":8953,"line_start":214,"line_end":214,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8954,"byte_end":8957,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8958,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8999,"byte_end":9002,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9003,"byte_end":9082,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9083,"byte_end":9160,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9161,"byte_end":9241,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9242,"byte_end":9316,"line_start":221,"line_end":221,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9317,"byte_end":9396,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9397,"byte_end":9474,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9475,"byte_end":9548,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9549,"byte_end":9629,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9630,"byte_end":9708,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9709,"byte_end":9787,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9788,"byte_end":9860,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9861,"byte_end":9895,"line_start":229,"line_end":229,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9896,"byte_end":9899,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! Two spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9900,"byte_end":9978,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9979,"byte_end":9982,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9983,"byte_end":10023,"line_start":233,"line_end":233,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10024,"byte_end":10077,"line_start":234,"line_end":234,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10078,"byte_end":10081,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10082,"byte_end":10089,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10090,"byte_end":10108,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10109,"byte_end":10130,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10131,"byte_end":10175,"line_start":239,"line_end":239,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10176,"byte_end":10179,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10180,"byte_end":10240,"line_start":241,"line_end":241,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10241,"byte_end":10293,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10294,"byte_end":10329,"line_start":243,"line_end":243,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10330,"byte_end":10341,"line_start":244,"line_end":244,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10342,"byte_end":10345,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10346,"byte_end":10401,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10402,"byte_end":10477,"line_start":247,"line_end":247,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10478,"byte_end":10495,"line_start":248,"line_end":248,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10496,"byte_end":10533,"line_start":249,"line_end":249,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10534,"byte_end":10539,"line_start":250,"line_end":250,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10540,"byte_end":10547,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10548,"byte_end":10551,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10552,"byte_end":10630,"line_start":253,"line_end":253,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10631,"byte_end":10707,"line_start":254,"line_end":254,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10708,"byte_end":10784,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10785,"byte_end":10809,"line_start":256,"line_end":256,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10810,"byte_end":10813,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10814,"byte_end":10848,"line_start":258,"line_end":258,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10849,"byte_end":10886,"line_start":259,"line_end":259,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10887,"byte_end":10890,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10891,"byte_end":10913,"line_start":261,"line_end":261,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10914,"byte_end":10917,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10918,"byte_end":10997,"line_start":263,"line_end":263,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10998,"byte_end":11045,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11046,"byte_end":11049,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11050,"byte_end":11129,"line_start":266,"line_end":266,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11130,"byte_end":11210,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11211,"byte_end":11291,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11292,"byte_end":11363,"line_start":269,"line_end":269,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11364,"byte_end":11444,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11445,"byte_end":11520,"line_start":271,"line_end":271,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11521,"byte_end":11524,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11525,"byte_end":11605,"line_start":273,"line_end":273,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11606,"byte_end":11666,"line_start":274,"line_end":274,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11667,"byte_end":11670,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11671,"byte_end":11750,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11751,"byte_end":11820,"line_start":277,"line_end":277,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11821,"byte_end":11898,"line_start":278,"line_end":278,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11899,"byte_end":11955,"line_start":279,"line_end":279,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11956,"byte_end":12036,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12037,"byte_end":12082,"line_start":281,"line_end":281,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12083,"byte_end":12162,"line_start":282,"line_end":282,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12163,"byte_end":12197,"line_start":283,"line_end":283,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12198,"byte_end":12201,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12202,"byte_end":12230,"line_start":285,"line_end":285,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12231,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12271,"byte_end":12312,"line_start":287,"line_end":287,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12313,"byte_end":12358,"line_start":288,"line_end":288,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12359,"byte_end":12383,"line_start":289,"line_end":289,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12384,"byte_end":12414,"line_start":290,"line_end":290,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12415,"byte_end":12441,"line_start":291,"line_end":291,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12442,"byte_end":12468,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12469,"byte_end":12496,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12497,"byte_end":12525,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12526,"byte_end":12550,"line_start":295,"line_end":295,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12551,"byte_end":12587,"line_start":296,"line_end":296,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12588,"byte_end":12626,"line_start":297,"line_end":297,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12627,"byte_end":12630,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12631,"byte_end":12645,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12646,"byte_end":12649,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12650,"byte_end":12679,"line_start":301,"line_end":301,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12680,"byte_end":12683,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12684,"byte_end":12697,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12698,"byte_end":12730,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12731,"byte_end":12757,"line_start":305,"line_end":305,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12758,"byte_end":12761,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12762,"byte_end":12780,"line_start":307,"line_end":307,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12781,"byte_end":12844,"line_start":308,"line_end":308,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12845,"byte_end":12915,"line_start":309,"line_end":309,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12916,"byte_end":12919,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12920,"byte_end":12934,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12935,"byte_end":12994,"line_start":312,"line_end":312,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12999,"byte_end":13036,"line_start":314,"line_end":314,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13037,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13078,"byte_end":13081,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13082,"byte_end":13162,"line_start":317,"line_end":317,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13163,"byte_end":13185,"line_start":318,"line_end":318,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13186,"byte_end":13249,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13250,"byte_end":13290,"line_start":320,"line_end":320,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13291,"byte_end":13341,"line_start":321,"line_end":321,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13342,"byte_end":13377,"line_start":322,"line_end":322,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13378,"byte_end":13413,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13414,"byte_end":13497,"line_start":324,"line_end":324,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13498,"byte_end":13533,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13534,"byte_end":13559,"line_start":326,"line_end":326,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13560,"byte_end":13582,"line_start":327,"line_end":327,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13583,"byte_end":13586,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13587,"byte_end":13629,"line_start":329,"line_end":329,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13630,"byte_end":13702,"line_start":330,"line_end":330,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13703,"byte_end":13781,"line_start":331,"line_end":331,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13782,"byte_end":13813,"line_start":332,"line_end":332,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13814,"byte_end":13835,"line_start":333,"line_end":333,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13836,"byte_end":13853,"line_start":334,"line_end":334,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13854,"byte_end":13869,"line_start":335,"line_end":335,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13870,"byte_end":13879,"line_start":336,"line_end":336,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13880,"byte_end":13885,"line_start":337,"line_end":337,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13886,"byte_end":13893,"line_start":338,"line_end":338,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":77}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14082,"byte_end":14094,"line_start":344,"line_end":344,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":887},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1080},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1256}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":18898,"byte_end":18920,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232732,"byte_end":8232750,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232752,"byte_end":8232805,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232806,"byte_end":8232809,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232810,"byte_end":8232888,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232889,"byte_end":8232953,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8232954,"byte_end":8233032,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233033,"byte_end":8233036,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233037,"byte_end":8233108,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"! servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233109,"byte_end":8233183,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233184,"byte_end":8233258,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233259,"byte_end":8233328,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233329,"byte_end":8233404,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233405,"byte_end":8233469,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233470,"byte_end":8233473,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233474,"byte_end":8233486,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233487,"byte_end":8233490,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233491,"byte_end":8233565,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233566,"byte_end":8233641,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233642,"byte_end":8233718,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"! return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233719,"byte_end":8233796,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233797,"byte_end":8233875,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! to a *backup* thread immediately.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233876,"byte_end":8233913,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233914,"byte_end":8233917,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8233918,"byte_end":8233995,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237218,"byte_end":8237230,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"fn (path: impl AsRef<Path>) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235712,"byte_end":8235784,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235785,"byte_end":8235839,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235840,"byte_end":8235843,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235844,"byte_end":8235906,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235907,"byte_end":8235910,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235911,"byte_end":8235943,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235944,"byte_end":8235947,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235948,"byte_end":8235980,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235981,"byte_end":8235984,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8235985,"byte_end":8236059,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236060,"byte_end":8236137,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236138,"byte_end":8236194,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236195,"byte_end":8236198,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236199,"byte_end":8236273,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236274,"byte_end":8236351,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236352,"byte_end":8236429,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236430,"byte_end":8236508,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236509,"byte_end":8236564,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236565,"byte_end":8236568,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236569,"byte_end":8236654,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236655,"byte_end":8236754,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236755,"byte_end":8236758,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236759,"byte_end":8236771,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236772,"byte_end":8236775,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236776,"byte_end":8236854,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236855,"byte_end":8236887,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236888,"byte_end":8236891,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236892,"byte_end":8236920,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236921,"byte_end":8236976,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236977,"byte_end":8236980,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236981,"byte_end":8236995,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8236996,"byte_end":8236999,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237000,"byte_end":8237013,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237014,"byte_end":8237032,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237033,"byte_end":8237049,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237050,"byte_end":8237053,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237054,"byte_end":8237072,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237073,"byte_end":8237112,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237113,"byte_end":8237175,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237176,"byte_end":8237190,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237191,"byte_end":8237196,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/canonicalize.rs","byte_start":8237197,"byte_end":8237204,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":904},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238787,"byte_end":8238797,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237441,"byte_end":8237496,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237497,"byte_end":8237500,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237501,"byte_end":8237561,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237562,"byte_end":8237565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237566,"byte_end":8237596,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237597,"byte_end":8237600,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237601,"byte_end":8237633,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237634,"byte_end":8237637,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237638,"byte_end":8237709,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237710,"byte_end":8237760,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237761,"byte_end":8237817,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237818,"byte_end":8237821,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237822,"byte_end":8237907,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237908,"byte_end":8237911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237912,"byte_end":8237989,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8237990,"byte_end":8238067,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238068,"byte_end":8238119,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238120,"byte_end":8238123,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238124,"byte_end":8238136,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238137,"byte_end":8238140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238141,"byte_end":8238219,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238220,"byte_end":8238252,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238253,"byte_end":8238256,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238257,"byte_end":8238316,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238317,"byte_end":8238395,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238396,"byte_end":8238466,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238467,"byte_end":8238483,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238484,"byte_end":8238512,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238513,"byte_end":8238516,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238517,"byte_end":8238564,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238565,"byte_end":8238568,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238569,"byte_end":8238583,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238584,"byte_end":8238587,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238588,"byte_end":8238601,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238602,"byte_end":8238620,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238621,"byte_end":8238637,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238638,"byte_end":8238641,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238642,"byte_end":8238660,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238661,"byte_end":8238700,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238701,"byte_end":8238744,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238745,"byte_end":8238759,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238760,"byte_end":8238765,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir.rs","byte_start":8238766,"byte_end":8238773,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240550,"byte_end":8240564,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239001,"byte_end":8239077,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239078,"byte_end":8239094,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239095,"byte_end":8239098,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239099,"byte_end":8239163,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239164,"byte_end":8239167,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239168,"byte_end":8239202,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239203,"byte_end":8239206,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239207,"byte_end":8239239,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239240,"byte_end":8239243,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239244,"byte_end":8239315,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239316,"byte_end":8239366,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239367,"byte_end":8239423,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239424,"byte_end":8239427,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239428,"byte_end":8239513,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239514,"byte_end":8239517,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239518,"byte_end":8239530,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239531,"byte_end":8239534,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239535,"byte_end":8239613,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239614,"byte_end":8239646,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239647,"byte_end":8239650,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239651,"byte_end":8239728,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239729,"byte_end":8239805,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239806,"byte_end":8239885,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239886,"byte_end":8239921,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239922,"byte_end":8239925,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8239926,"byte_end":8239999,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240000,"byte_end":8240086,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240087,"byte_end":8240168,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240169,"byte_end":8240246,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240247,"byte_end":8240287,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240288,"byte_end":8240291,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240292,"byte_end":8240335,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240336,"byte_end":8240339,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240340,"byte_end":8240354,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240355,"byte_end":8240358,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240359,"byte_end":8240372,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240373,"byte_end":8240391,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240392,"byte_end":8240395,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240396,"byte_end":8240414,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240415,"byte_end":8240459,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240460,"byte_end":8240507,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240508,"byte_end":8240522,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240523,"byte_end":8240528,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/create_dir_all.rs","byte_start":8240529,"byte_end":8240536,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":945},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243283,"byte_end":8243287,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241150,"byte_end":8241200,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241201,"byte_end":8241204,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241205,"byte_end":8241283,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241284,"byte_end":8241302,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241303,"byte_end":8241306,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241307,"byte_end":8241387,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241388,"byte_end":8241467,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241468,"byte_end":8241513,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241514,"byte_end":8241517,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241518,"byte_end":8241594,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241595,"byte_end":8241674,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241675,"byte_end":8241750,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241751,"byte_end":8241827,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241828,"byte_end":8241905,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241906,"byte_end":8241983,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8241984,"byte_end":8242005,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242006,"byte_end":8242009,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242010,"byte_end":8242083,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242084,"byte_end":8242164,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242165,"byte_end":8242211,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242212,"byte_end":8242215,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242216,"byte_end":8242247,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242248,"byte_end":8242293,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242294,"byte_end":8242343,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242344,"byte_end":8242390,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242391,"byte_end":8242442,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242443,"byte_end":8242496,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242497,"byte_end":8242530,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242531,"byte_end":8242534,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242535,"byte_end":8242549,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242550,"byte_end":8242553,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242554,"byte_end":8242613,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242614,"byte_end":8242617,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242618,"byte_end":8242631,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242632,"byte_end":8242656,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242657,"byte_end":8242702,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242703,"byte_end":8242706,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242707,"byte_end":8242752,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242753,"byte_end":8242803,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242804,"byte_end":8242848,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242849,"byte_end":8242861,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242862,"byte_end":8242869,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242870,"byte_end":8242877,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242878,"byte_end":8242881,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242882,"byte_end":8242927,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242928,"byte_end":8242931,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242932,"byte_end":8242945,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242946,"byte_end":8242970,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8242971,"byte_end":8243018,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243019,"byte_end":8243022,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243023,"byte_end":8243068,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243069,"byte_end":8243117,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243118,"byte_end":8243121,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243122,"byte_end":8243152,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243153,"byte_end":8243196,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243197,"byte_end":8243200,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243201,"byte_end":8243242,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243243,"byte_end":8243255,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243256,"byte_end":8243263,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243264,"byte_end":8243271,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244833,"byte_end":8244837,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243802,"byte_end":8243848,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243853,"byte_end":8243856,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243861,"byte_end":8243902,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243907,"byte_end":8243910,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243915,"byte_end":8243954,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243959,"byte_end":8243962,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243967,"byte_end":8243979,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243984,"byte_end":8243987,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243992,"byte_end":8244066,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244071,"byte_end":8244142,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244147,"byte_end":8244191,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244196,"byte_end":8244199,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244204,"byte_end":8244218,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244223,"byte_end":8244226,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244231,"byte_end":8244244,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244249,"byte_end":8244273,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244278,"byte_end":8244304,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244309,"byte_end":8244312,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244317,"byte_end":8244362,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244367,"byte_end":8244415,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244420,"byte_end":8244423,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244428,"byte_end":8244458,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244463,"byte_end":8244506,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244511,"byte_end":8244514,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244519,"byte_end":8244560,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244565,"byte_end":8244577,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244582,"byte_end":8244589,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244594,"byte_end":8244601,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244606,"byte_end":8244609,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244614,"byte_end":8244686,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244691,"byte_end":8244694,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244699,"byte_end":8244759,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8244764,"byte_end":8244815,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246055,"byte_end":8246061,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245034,"byte_end":8245070,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245075,"byte_end":8245078,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245083,"byte_end":8245159,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245164,"byte_end":8245182,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245187,"byte_end":8245190,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245195,"byte_end":8245236,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245241,"byte_end":8245244,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245249,"byte_end":8245288,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245293,"byte_end":8245296,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245301,"byte_end":8245313,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245318,"byte_end":8245321,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245326,"byte_end":8245399,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245404,"byte_end":8245459,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245464,"byte_end":8245467,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245472,"byte_end":8245509,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245514,"byte_end":8245517,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245522,"byte_end":8245536,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245541,"byte_end":8245544,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245549,"byte_end":8245562,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245567,"byte_end":8245591,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245596,"byte_end":8245622,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245627,"byte_end":8245630,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245635,"byte_end":8245680,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245685,"byte_end":8245735,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245740,"byte_end":8245784,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245789,"byte_end":8245801,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245806,"byte_end":8245813,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245818,"byte_end":8245825,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245830,"byte_end":8245833,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245838,"byte_end":8245909,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245914,"byte_end":8245917,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245922,"byte_end":8245979,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8245984,"byte_end":8246037,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246698,"byte_end":8246706,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"fn (std: sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246274,"byte_end":8246343,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246348,"byte_end":8246351,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246356,"byte_end":8246380,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246385,"byte_end":8246401,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246406,"byte_end":8246409,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246414,"byte_end":8246428,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246433,"byte_end":8246436,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246441,"byte_end":8246454,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246459,"byte_end":8246534,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246539,"byte_end":8246554,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246559,"byte_end":8246618,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246623,"byte_end":8246674,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246679,"byte_end":8246686,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247618,"byte_end":8247622,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"fn (&mut self, mut pos: SeekFrom) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246896,"byte_end":8246942,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246947,"byte_end":8246950,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246955,"byte_end":8246969,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246974,"byte_end":8246977,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8246982,"byte_end":8246995,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247000,"byte_end":8247024,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247029,"byte_end":8247055,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247060,"byte_end":8247063,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247068,"byte_end":8247094,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247099,"byte_end":8247102,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247107,"byte_end":8247152,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247157,"byte_end":8247205,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247210,"byte_end":8247251,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247256,"byte_end":8247259,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247264,"byte_end":8247301,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247306,"byte_end":8247348,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247353,"byte_end":8247365,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247370,"byte_end":8247377,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247382,"byte_end":8247389,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247394,"byte_end":8247397,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247402,"byte_end":8247473,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247478,"byte_end":8247481,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247486,"byte_end":8247544,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8247549,"byte_end":8247600,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249363,"byte_end":8249371,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248607,"byte_end":8248661,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248666,"byte_end":8248669,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248674,"byte_end":8248748,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248753,"byte_end":8248785,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248790,"byte_end":8248793,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248798,"byte_end":8248812,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248817,"byte_end":8248820,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248825,"byte_end":8248838,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248843,"byte_end":8248867,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248872,"byte_end":8248898,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248903,"byte_end":8248906,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248911,"byte_end":8248956,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8248961,"byte_end":8249011,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249016,"byte_end":8249060,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249065,"byte_end":8249092,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249097,"byte_end":8249109,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249114,"byte_end":8249121,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249126,"byte_end":8249133,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249138,"byte_end":8249141,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249146,"byte_end":8249217,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249222,"byte_end":8249225,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249230,"byte_end":8249287,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249292,"byte_end":8249345,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250512,"byte_end":8250521,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249538,"byte_end":8249604,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249609,"byte_end":8249657,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249662,"byte_end":8249665,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249670,"byte_end":8249745,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249750,"byte_end":8249822,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249827,"byte_end":8249842,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249847,"byte_end":8249850,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249855,"byte_end":8249933,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249938,"byte_end":8249941,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249946,"byte_end":8249960,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249965,"byte_end":8249968,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249973,"byte_end":8249986,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8249991,"byte_end":8250015,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250020,"byte_end":8250046,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250051,"byte_end":8250054,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250059,"byte_end":8250104,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250109,"byte_end":8250159,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250164,"byte_end":8250208,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250213,"byte_end":8250241,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250246,"byte_end":8250258,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250263,"byte_end":8250270,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250275,"byte_end":8250282,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250287,"byte_end":8250290,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250295,"byte_end":8250366,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250371,"byte_end":8250374,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250379,"byte_end":8250436,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250441,"byte_end":8250494,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251746,"byte_end":8251753,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&mut self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250689,"byte_end":8250781,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250786,"byte_end":8250789,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250794,"byte_end":8250869,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250874,"byte_end":8250946,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8250951,"byte_end":8251027,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251032,"byte_end":8251044,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251049,"byte_end":8251052,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251057,"byte_end":8251069,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251074,"byte_end":8251077,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251082,"byte_end":8251150,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251155,"byte_end":8251167,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251172,"byte_end":8251175,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251180,"byte_end":8251194,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251199,"byte_end":8251202,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251207,"byte_end":8251220,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251225,"byte_end":8251249,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251254,"byte_end":8251280,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251285,"byte_end":8251288,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251293,"byte_end":8251338,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251343,"byte_end":8251393,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251398,"byte_end":8251442,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251447,"byte_end":8251475,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251480,"byte_end":8251492,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251497,"byte_end":8251504,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251509,"byte_end":8251516,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251521,"byte_end":8251524,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251529,"byte_end":8251600,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251605,"byte_end":8251608,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251613,"byte_end":8251670,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8251675,"byte_end":8251728,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253239,"byte_end":8253247,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252853,"byte_end":8252900,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252905,"byte_end":8252908,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252913,"byte_end":8252927,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252932,"byte_end":8252935,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252940,"byte_end":8252953,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252958,"byte_end":8252982,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252987,"byte_end":8252990,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8252995,"byte_end":8253040,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253045,"byte_end":8253089,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253094,"byte_end":8253136,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253141,"byte_end":8253144,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253149,"byte_end":8253180,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253185,"byte_end":8253197,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253202,"byte_end":8253209,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253214,"byte_end":8253221,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253871,"byte_end":8253880,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"fn (&self) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253375,"byte_end":8253451,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253456,"byte_end":8253534,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253539,"byte_end":8253573,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253578,"byte_end":8253581,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253586,"byte_end":8253600,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253605,"byte_end":8253608,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253613,"byte_end":8253626,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253631,"byte_end":8253655,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253660,"byte_end":8253663,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253668,"byte_end":8253713,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253718,"byte_end":8253762,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253767,"byte_end":8253812,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253817,"byte_end":8253829,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253834,"byte_end":8253841,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8253846,"byte_end":8253853,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254610,"byte_end":8254618,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"fn (mut self) -> sys::File","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254059,"byte_end":8254130,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254135,"byte_end":8254191,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254196,"byte_end":8254199,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254204,"byte_end":8254267,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254272,"byte_end":8254275,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254280,"byte_end":8254304,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254309,"byte_end":8254312,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254317,"byte_end":8254331,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254336,"byte_end":8254339,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254344,"byte_end":8254357,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254362,"byte_end":8254386,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254391,"byte_end":8254394,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254399,"byte_end":8254444,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254449,"byte_end":8254499,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254504,"byte_end":8254551,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254556,"byte_end":8254568,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254573,"byte_end":8254580,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254585,"byte_end":8254592,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255316,"byte_end":8255328,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"fn (mut self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254762,"byte_end":8254836,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254841,"byte_end":8254844,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254849,"byte_end":8254873,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254878,"byte_end":8254881,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254886,"byte_end":8254898,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254903,"byte_end":8254906,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254911,"byte_end":8254977,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8254982,"byte_end":8255009,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255014,"byte_end":8255017,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255022,"byte_end":8255036,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255041,"byte_end":8255044,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255049,"byte_end":8255062,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255067,"byte_end":8255091,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255096,"byte_end":8255099,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255104,"byte_end":8255149,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255154,"byte_end":8255204,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255209,"byte_end":8255263,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255268,"byte_end":8255280,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255285,"byte_end":8255292,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255297,"byte_end":8255304,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256606,"byte_end":8256621,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255581,"byte_end":8255632,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255637,"byte_end":8255640,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255645,"byte_end":8255677,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255682,"byte_end":8255685,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255690,"byte_end":8255766,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255771,"byte_end":8255844,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255849,"byte_end":8255889,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255894,"byte_end":8255897,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255902,"byte_end":8255987,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8255992,"byte_end":8255995,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256000,"byte_end":8256012,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256017,"byte_end":8256020,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256025,"byte_end":8256099,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256104,"byte_end":8256179,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256184,"byte_end":8256218,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256223,"byte_end":8256226,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256231,"byte_end":8256245,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256250,"byte_end":8256253,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256258,"byte_end":8256271,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256276,"byte_end":8256300,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256305,"byte_end":8256308,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256313,"byte_end":8256358,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256363,"byte_end":8256407,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256412,"byte_end":8256469,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256474,"byte_end":8256503,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256508,"byte_end":8256547,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256552,"byte_end":8256564,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256569,"byte_end":8256576,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8256581,"byte_end":8256588,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1025},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266393,"byte_end":8266402,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265346,"byte_end":8265392,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265393,"byte_end":8265396,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265397,"byte_end":8265456,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265457,"byte_end":8265460,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265461,"byte_end":8265490,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265491,"byte_end":8265494,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265495,"byte_end":8265574,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265575,"byte_end":8265651,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265652,"byte_end":8265655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265656,"byte_end":8265688,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265689,"byte_end":8265692,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265693,"byte_end":8265763,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265764,"byte_end":8265813,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265814,"byte_end":8265870,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265871,"byte_end":8265874,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265875,"byte_end":8265960,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265961,"byte_end":8265964,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265965,"byte_end":8265977,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265978,"byte_end":8265981,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8265982,"byte_end":8266060,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266061,"byte_end":8266093,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266094,"byte_end":8266097,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266098,"byte_end":8266150,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266151,"byte_end":8266154,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266155,"byte_end":8266169,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266170,"byte_end":8266173,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266174,"byte_end":8266187,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266188,"byte_end":8266206,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266207,"byte_end":8266210,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266211,"byte_end":8266229,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266230,"byte_end":8266274,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266275,"byte_end":8266350,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266351,"byte_end":8266365,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266366,"byte_end":8266371,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/hard_link.rs","byte_start":8266372,"byte_end":8266379,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1037},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267797,"byte_end":8267805,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266692,"byte_end":8266766,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266767,"byte_end":8266786,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266787,"byte_end":8266790,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266791,"byte_end":8266849,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266850,"byte_end":8266853,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266854,"byte_end":8266931,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266932,"byte_end":8266953,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266954,"byte_end":8266957,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266958,"byte_end":8266990,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266991,"byte_end":8266994,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8266995,"byte_end":8267073,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267074,"byte_end":8267152,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267153,"byte_end":8267178,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267179,"byte_end":8267182,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267183,"byte_end":8267211,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267212,"byte_end":8267297,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267298,"byte_end":8267301,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267302,"byte_end":8267314,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267315,"byte_end":8267318,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267319,"byte_end":8267397,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267398,"byte_end":8267430,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267431,"byte_end":8267434,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267435,"byte_end":8267505,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267506,"byte_end":8267534,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267535,"byte_end":8267538,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267539,"byte_end":8267553,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267554,"byte_end":8267557,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267558,"byte_end":8267576,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267577,"byte_end":8267595,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267596,"byte_end":8267599,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267600,"byte_end":8267618,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267619,"byte_end":8267663,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267664,"byte_end":8267726,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267727,"byte_end":8267754,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267755,"byte_end":8267769,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267770,"byte_end":8267775,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/metadata.rs","byte_start":8267776,"byte_end":8267783,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1281},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269901,"byte_end":8269912,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268016,"byte_end":8268090,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268091,"byte_end":8268094,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268095,"byte_end":8268173,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268174,"byte_end":8268248,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268249,"byte_end":8268326,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268327,"byte_end":8268339,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268340,"byte_end":8268343,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268344,"byte_end":8268420,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268421,"byte_end":8268500,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268501,"byte_end":8268569,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268570,"byte_end":8268648,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268649,"byte_end":8268656,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268657,"byte_end":8268660,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268661,"byte_end":8268737,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268738,"byte_end":8268760,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268761,"byte_end":8268764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268765,"byte_end":8268844,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268845,"byte_end":8268880,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268881,"byte_end":8268884,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268885,"byte_end":8268914,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268915,"byte_end":8268946,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268947,"byte_end":8268976,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268977,"byte_end":8268995,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8268996,"byte_end":8269026,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269027,"byte_end":8269061,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269062,"byte_end":8269112,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269113,"byte_end":8269116,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269117,"byte_end":8269131,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269132,"byte_end":8269135,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269136,"byte_end":8269163,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269164,"byte_end":8269167,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269168,"byte_end":8269181,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269182,"byte_end":8269213,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269214,"byte_end":8269230,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269231,"byte_end":8269234,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269235,"byte_end":8269253,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269254,"byte_end":8269293,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269294,"byte_end":8269331,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269332,"byte_end":8269355,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269356,"byte_end":8269384,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269385,"byte_end":8269405,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269406,"byte_end":8269409,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269410,"byte_end":8269424,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269425,"byte_end":8269430,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269431,"byte_end":8269438,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269439,"byte_end":8269442,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269443,"byte_end":8269520,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269521,"byte_end":8269539,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269540,"byte_end":8269543,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269544,"byte_end":8269557,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269558,"byte_end":8269589,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269590,"byte_end":8269606,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269607,"byte_end":8269610,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269611,"byte_end":8269629,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269630,"byte_end":8269669,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269670,"byte_end":8269707,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269708,"byte_end":8269731,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269732,"byte_end":8269756,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269757,"byte_end":8269782,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269783,"byte_end":8269811,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269812,"byte_end":8269832,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269833,"byte_end":8269836,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269837,"byte_end":8269851,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269852,"byte_end":8269857,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269858,"byte_end":8269865,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270433,"byte_end":8270436,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269960,"byte_end":8270023,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270028,"byte_end":8270031,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270036,"byte_end":8270081,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270086,"byte_end":8270089,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270094,"byte_end":8270160,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270165,"byte_end":8270168,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270173,"byte_end":8270209,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270214,"byte_end":8270217,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270222,"byte_end":8270236,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270241,"byte_end":8270244,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270249,"byte_end":8270262,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270267,"byte_end":8270298,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270303,"byte_end":8270306,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270311,"byte_end":8270352,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270357,"byte_end":8270409,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270414,"byte_end":8270421,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271165,"byte_end":8271169,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270516,"byte_end":8270552,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270557,"byte_end":8270560,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270565,"byte_end":8270630,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270635,"byte_end":8270661,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270666,"byte_end":8270669,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270674,"byte_end":8270741,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270746,"byte_end":8270749,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270754,"byte_end":8270791,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270796,"byte_end":8270799,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270804,"byte_end":8270818,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270823,"byte_end":8270826,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270831,"byte_end":8270844,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270849,"byte_end":8270880,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270885,"byte_end":8270901,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270906,"byte_end":8270909,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270914,"byte_end":8270932,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270937,"byte_end":8270976,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8270981,"byte_end":8271018,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271023,"byte_end":8271046,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271051,"byte_end":8271079,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271084,"byte_end":8271104,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271109,"byte_end":8271112,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271117,"byte_end":8271131,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271136,"byte_end":8271141,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271146,"byte_end":8271153,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271920,"byte_end":8271925,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271266,"byte_end":8271303,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271308,"byte_end":8271311,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271316,"byte_end":8271381,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271386,"byte_end":8271413,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271418,"byte_end":8271421,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271426,"byte_end":8271494,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271499,"byte_end":8271502,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271507,"byte_end":8271545,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271550,"byte_end":8271553,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271558,"byte_end":8271572,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271577,"byte_end":8271580,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271585,"byte_end":8271598,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271603,"byte_end":8271634,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271639,"byte_end":8271655,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271660,"byte_end":8271663,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271668,"byte_end":8271686,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271691,"byte_end":8271730,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271735,"byte_end":8271772,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271777,"byte_end":8271801,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271806,"byte_end":8271834,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271839,"byte_end":8271859,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271864,"byte_end":8271867,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271872,"byte_end":8271886,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271891,"byte_end":8271896,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8271901,"byte_end":8271908,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274155,"byte_end":8274161,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272025,"byte_end":8272065,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272070,"byte_end":8272073,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272078,"byte_end":8272153,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272158,"byte_end":8272214,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272219,"byte_end":8272286,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272291,"byte_end":8272311,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272316,"byte_end":8272319,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272324,"byte_end":8272401,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272406,"byte_end":8272482,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272487,"byte_end":8272496,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272501,"byte_end":8272504,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272509,"byte_end":8272583,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272588,"byte_end":8272659,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272664,"byte_end":8272740,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272745,"byte_end":8272809,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272814,"byte_end":8272871,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272876,"byte_end":8272879,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272884,"byte_end":8272959,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8272964,"byte_end":8273042,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273047,"byte_end":8273120,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273125,"byte_end":8273212,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273217,"byte_end":8273220,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273225,"byte_end":8273294,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273299,"byte_end":8273302,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273307,"byte_end":8273346,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273351,"byte_end":8273354,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273359,"byte_end":8273370,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273375,"byte_end":8273378,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273383,"byte_end":8273464,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273469,"byte_end":8273489,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273494,"byte_end":8273497,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273502,"byte_end":8273550,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273555,"byte_end":8273603,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273608,"byte_end":8273651,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273656,"byte_end":8273691,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273696,"byte_end":8273739,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273744,"byte_end":8273779,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273784,"byte_end":8273787,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273792,"byte_end":8273806,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273811,"byte_end":8273814,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273819,"byte_end":8273832,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273837,"byte_end":8273868,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273873,"byte_end":8273889,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273894,"byte_end":8273897,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273902,"byte_end":8273920,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273925,"byte_end":8273964,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8273969,"byte_end":8274006,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274011,"byte_end":8274036,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274041,"byte_end":8274069,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274074,"byte_end":8274094,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274099,"byte_end":8274102,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274107,"byte_end":8274121,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274126,"byte_end":8274131,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274136,"byte_end":8274143,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275078,"byte_end":8275086,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274264,"byte_end":8274315,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274320,"byte_end":8274323,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274328,"byte_end":8274402,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274407,"byte_end":8274453,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274458,"byte_end":8274461,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274466,"byte_end":8274533,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274538,"byte_end":8274541,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274546,"byte_end":8274617,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274622,"byte_end":8274625,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274630,"byte_end":8274671,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274676,"byte_end":8274679,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274684,"byte_end":8274698,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274703,"byte_end":8274706,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274711,"byte_end":8274724,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274729,"byte_end":8274760,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274765,"byte_end":8274781,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274786,"byte_end":8274789,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274794,"byte_end":8274812,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274817,"byte_end":8274856,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274861,"byte_end":8274898,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274903,"byte_end":8274927,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274932,"byte_end":8274959,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274964,"byte_end":8274992,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8274997,"byte_end":8275017,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275022,"byte_end":8275025,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275030,"byte_end":8275044,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275049,"byte_end":8275054,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275059,"byte_end":8275066,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276083,"byte_end":8276089,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275195,"byte_end":8275239,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275244,"byte_end":8275247,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275252,"byte_end":8275324,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275329,"byte_end":8275360,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275365,"byte_end":8275368,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275373,"byte_end":8275449,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275454,"byte_end":8275466,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275471,"byte_end":8275474,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275479,"byte_end":8275548,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275553,"byte_end":8275556,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275561,"byte_end":8275600,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275605,"byte_end":8275638,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275643,"byte_end":8275678,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275683,"byte_end":8275686,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275691,"byte_end":8275705,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275710,"byte_end":8275713,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275718,"byte_end":8275731,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275736,"byte_end":8275767,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275772,"byte_end":8275788,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275793,"byte_end":8275796,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275801,"byte_end":8275819,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275824,"byte_end":8275863,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275868,"byte_end":8275905,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275910,"byte_end":8275934,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275939,"byte_end":8275964,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8275969,"byte_end":8275997,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276002,"byte_end":8276022,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276027,"byte_end":8276030,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276035,"byte_end":8276049,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276054,"byte_end":8276059,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276064,"byte_end":8276071,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277488,"byte_end":8277498,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276192,"byte_end":8276240,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276245,"byte_end":8276248,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276253,"byte_end":8276326,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276331,"byte_end":8276403,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276408,"byte_end":8276411,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276416,"byte_end":8276490,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276495,"byte_end":8276567,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276572,"byte_end":8276638,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276643,"byte_end":8276646,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276651,"byte_end":8276723,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276728,"byte_end":8276740,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276745,"byte_end":8276748,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276753,"byte_end":8276829,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276834,"byte_end":8276847,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276852,"byte_end":8276855,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276860,"byte_end":8276933,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276938,"byte_end":8276941,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276946,"byte_end":8276989,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8276994,"byte_end":8277032,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277037,"byte_end":8277079,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277084,"byte_end":8277087,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277092,"byte_end":8277106,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277111,"byte_end":8277114,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277119,"byte_end":8277132,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277137,"byte_end":8277168,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277173,"byte_end":8277189,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277194,"byte_end":8277197,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277202,"byte_end":8277220,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277225,"byte_end":8277264,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277269,"byte_end":8277306,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277311,"byte_end":8277335,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277340,"byte_end":8277369,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277374,"byte_end":8277402,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277407,"byte_end":8277427,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277432,"byte_end":8277435,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277440,"byte_end":8277454,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277459,"byte_end":8277464,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277469,"byte_end":8277476,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279950,"byte_end":8279954,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"fn (&self, path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277613,"byte_end":8277677,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277682,"byte_end":8277685,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277690,"byte_end":8277757,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277762,"byte_end":8277765,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277770,"byte_end":8277807,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277812,"byte_end":8277815,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277820,"byte_end":8277832,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277837,"byte_end":8277840,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277845,"byte_end":8277911,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277916,"byte_end":8277991,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8277996,"byte_end":8278070,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278075,"byte_end":8278150,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278155,"byte_end":8278209,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278214,"byte_end":8278217,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278222,"byte_end":8278296,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278301,"byte_end":8278330,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278335,"byte_end":8278408,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278413,"byte_end":8278429,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278434,"byte_end":8278508,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278513,"byte_end":8278546,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278551,"byte_end":8278623,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278628,"byte_end":8278677,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278682,"byte_end":8278754,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278759,"byte_end":8278772,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278777,"byte_end":8278847,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278852,"byte_end":8278906,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278911,"byte_end":8278986,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8278991,"byte_end":8279027,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279032,"byte_end":8279101,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279106,"byte_end":8279179,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279184,"byte_end":8279251,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279256,"byte_end":8279307,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279312,"byte_end":8279315,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279320,"byte_end":8279334,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279339,"byte_end":8279342,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279347,"byte_end":8279360,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279365,"byte_end":8279396,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279401,"byte_end":8279417,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279422,"byte_end":8279425,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279430,"byte_end":8279448,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279453,"byte_end":8279492,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279497,"byte_end":8279558,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279563,"byte_end":8279577,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279582,"byte_end":8279587,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279592,"byte_end":8279599,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279604,"byte_end":8279607,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279612,"byte_end":8279649,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279654,"byte_end":8279710,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279715,"byte_end":8279769,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279774,"byte_end":8279820,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279825,"byte_end":8279865,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8279870,"byte_end":8279932,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1067},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1068}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"! OS-specific functionality.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/mod.rs","byte_start":8280425,"byte_end":8280455,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1068},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1079}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/mod.rs","byte_start":8280457,"byte_end":8280469,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"! Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/mod.rs","byte_start":8280519,"byte_end":8280587,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1073},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280949,"byte_end":8280956,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280696,"byte_end":8280746,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280747,"byte_end":8280750,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280751,"byte_end":8280821,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280822,"byte_end":8280825,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280826,"byte_end":8280893,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280894,"byte_end":8280897,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/unix/symlink.rs","byte_start":8280898,"byte_end":8280935,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1085},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282548,"byte_end":8282552,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn (path: impl AsRef<Path>) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281224,"byte_end":8281284,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281285,"byte_end":8281288,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281289,"byte_end":8281343,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281344,"byte_end":8281347,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281348,"byte_end":8281372,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281373,"byte_end":8281376,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281377,"byte_end":8281456,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281457,"byte_end":8281536,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281537,"byte_end":8281617,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281618,"byte_end":8281670,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281671,"byte_end":8281674,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281675,"byte_end":8281712,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281713,"byte_end":8281770,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281771,"byte_end":8281774,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281775,"byte_end":8281787,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281788,"byte_end":8281791,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281792,"byte_end":8281864,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281865,"byte_end":8281938,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281939,"byte_end":8281942,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281943,"byte_end":8281994,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281995,"byte_end":8281998,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8281999,"byte_end":8282071,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282072,"byte_end":8282124,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282125,"byte_end":8282128,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282129,"byte_end":8282192,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282193,"byte_end":8282196,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282197,"byte_end":8282211,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282212,"byte_end":8282215,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282216,"byte_end":8282229,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282230,"byte_end":8282248,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282249,"byte_end":8282278,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282279,"byte_end":8282282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282283,"byte_end":8282301,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282302,"byte_end":8282375,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282376,"byte_end":8282430,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282431,"byte_end":8282505,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282506,"byte_end":8282520,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282521,"byte_end":8282526,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read.rs","byte_start":8282527,"byte_end":8282534,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283138,"byte_end":8283146,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8282990,"byte_end":8283047,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283048,"byte_end":8283051,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283052,"byte_end":8283124,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283958,"byte_end":8283965,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283340,"byte_end":8283381,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283382,"byte_end":8283385,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283386,"byte_end":8283463,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283464,"byte_end":8283528,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283529,"byte_end":8283601,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283602,"byte_end":8283614,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283615,"byte_end":8283618,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283619,"byte_end":8283631,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283632,"byte_end":8283635,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283636,"byte_end":8283715,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283716,"byte_end":8283746,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283747,"byte_end":8283750,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283751,"byte_end":8283777,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283778,"byte_end":8283804,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283805,"byte_end":8283842,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283843,"byte_end":8283880,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8283898,"byte_end":8283946,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8284219,"byte_end":8284229,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"fn (&mut self) -> io::Result<Option<DirEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8284150,"byte_end":8284201,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8284401,"byte_end":8284416,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286172,"byte_end":8286180,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285721,"byte_end":8285768,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285769,"byte_end":8285772,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285773,"byte_end":8285804,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285805,"byte_end":8285808,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285809,"byte_end":8285886,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285887,"byte_end":8285905,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285906,"byte_end":8285909,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285910,"byte_end":8285988,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285989,"byte_end":8286068,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286069,"byte_end":8286143,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287012,"byte_end":8287016,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286227,"byte_end":8286292,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286297,"byte_end":8286300,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286305,"byte_end":8286376,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286381,"byte_end":8286417,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286422,"byte_end":8286425,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286430,"byte_end":8286444,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286449,"byte_end":8286452,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286457,"byte_end":8286470,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286475,"byte_end":8286493,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286498,"byte_end":8286501,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286506,"byte_end":8286551,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286556,"byte_end":8286603,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286608,"byte_end":8286611,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286616,"byte_end":8286673,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286678,"byte_end":8286717,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286722,"byte_end":8286727,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286732,"byte_end":8286744,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286749,"byte_end":8286756,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286761,"byte_end":8286768,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286773,"byte_end":8286776,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286781,"byte_end":8286809,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286814,"byte_end":8286817,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286822,"byte_end":8286833,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286838,"byte_end":8286858,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286863,"byte_end":8286879,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286884,"byte_end":8286906,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286911,"byte_end":8286918,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286923,"byte_end":8286926,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286931,"byte_end":8287000,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287536,"byte_end":8287545,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287070,"byte_end":8287142,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287147,"byte_end":8287174,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287179,"byte_end":8287182,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287187,"byte_end":8287201,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287206,"byte_end":8287209,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287214,"byte_end":8287221,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287226,"byte_end":8287244,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287249,"byte_end":8287252,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287257,"byte_end":8287302,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287307,"byte_end":8287354,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287359,"byte_end":8287362,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287367,"byte_end":8287424,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287429,"byte_end":8287473,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287478,"byte_end":8287483,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287488,"byte_end":8287500,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287505,"byte_end":8287512,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287517,"byte_end":8287524,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288642,"byte_end":8288650,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287605,"byte_end":8287669,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287674,"byte_end":8287677,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287682,"byte_end":8287752,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287757,"byte_end":8287769,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287774,"byte_end":8287777,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287782,"byte_end":8287814,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287819,"byte_end":8287822,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287827,"byte_end":8287895,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287900,"byte_end":8287969,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8287974,"byte_end":8288017,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288022,"byte_end":8288025,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288030,"byte_end":8288044,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288049,"byte_end":8288052,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288057,"byte_end":8288064,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288069,"byte_end":8288087,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288092,"byte_end":8288095,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288100,"byte_end":8288145,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288150,"byte_end":8288197,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288202,"byte_end":8288205,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288210,"byte_end":8288267,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288272,"byte_end":8288326,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288331,"byte_end":8288385,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288390,"byte_end":8288463,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288468,"byte_end":8288484,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288489,"byte_end":8288559,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288564,"byte_end":8288573,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288578,"byte_end":8288583,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288588,"byte_end":8288600,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288605,"byte_end":8288612,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288617,"byte_end":8288624,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289834,"byte_end":8289843,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288776,"byte_end":8288841,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288846,"byte_end":8288849,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288854,"byte_end":8288924,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288929,"byte_end":8288941,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288946,"byte_end":8288949,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288954,"byte_end":8288986,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288991,"byte_end":8288994,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8288999,"byte_end":8289069,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289074,"byte_end":8289150,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289155,"byte_end":8289222,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289227,"byte_end":8289230,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289235,"byte_end":8289249,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289254,"byte_end":8289257,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289262,"byte_end":8289269,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289274,"byte_end":8289292,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289297,"byte_end":8289300,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289305,"byte_end":8289350,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289355,"byte_end":8289402,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289407,"byte_end":8289410,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289415,"byte_end":8289472,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289477,"byte_end":8289533,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289538,"byte_end":8289590,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289595,"byte_end":8289655,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289660,"byte_end":8289676,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289681,"byte_end":8289751,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289756,"byte_end":8289765,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289770,"byte_end":8289775,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289780,"byte_end":8289792,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289797,"byte_end":8289804,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8289809,"byte_end":8289816,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1148},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290324,"byte_end":8290333,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn (path: impl AsRef<Path>) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290142,"byte_end":8290212,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290213,"byte_end":8290216,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290217,"byte_end":8290276,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290277,"byte_end":8290280,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_link.rs","byte_start":8290281,"byte_end":8290310,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290992,"byte_end":8291006,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn (path: impl AsRef<Path>) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290534,"byte_end":8290609,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290610,"byte_end":8290660,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290661,"byte_end":8290664,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290665,"byte_end":8290727,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290728,"byte_end":8290731,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290732,"byte_end":8290746,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290747,"byte_end":8290750,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290751,"byte_end":8290764,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290765,"byte_end":8290783,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290784,"byte_end":8290787,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290788,"byte_end":8290833,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290834,"byte_end":8290890,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290891,"byte_end":8290949,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290950,"byte_end":8290962,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290963,"byte_end":8290970,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_to_string.rs","byte_start":8290971,"byte_end":8290978,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir.rs","byte_start":8291354,"byte_end":8291364,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir.rs","byte_start":8291218,"byte_end":8291259,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir.rs","byte_start":8291260,"byte_end":8291263,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir.rs","byte_start":8291264,"byte_end":8291340,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291807,"byte_end":8291821,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291568,"byte_end":8291653,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291654,"byte_end":8291657,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291658,"byte_end":8291722,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291723,"byte_end":8291726,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_dir_all.rs","byte_start":8291727,"byte_end":8291793,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292358,"byte_end":8292369,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292029,"byte_end":8292068,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292069,"byte_end":8292072,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292073,"byte_end":8292151,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292152,"byte_end":8292228,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292229,"byte_end":8292242,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292243,"byte_end":8292246,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292247,"byte_end":8292308,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292309,"byte_end":8292312,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/remove_file.rs","byte_start":8292313,"byte_end":8292344,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292837,"byte_end":8292843,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn (from: impl AsRef<Path>, to: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292574,"byte_end":8292651,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292652,"byte_end":8292676,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292677,"byte_end":8292680,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292681,"byte_end":8292750,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292751,"byte_end":8292754,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/rename.rs","byte_start":8292755,"byte_end":8292823,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1211},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293348,"byte_end":8293363,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn (path: impl AsRef<Path>, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293133,"byte_end":8293192,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293193,"byte_end":8293196,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293197,"byte_end":8293262,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293263,"byte_end":8293266,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/set_permissions.rs","byte_start":8293267,"byte_end":8293334,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293821,"byte_end":8293837,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293615,"byte_end":8293663,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293664,"byte_end":8293667,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293668,"byte_end":8293734,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293735,"byte_end":8293738,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/symlink_metadata.rs","byte_start":8293739,"byte_end":8293807,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1233},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294407,"byte_end":8294412,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <C> (path: impl AsRef<Path>, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294041,"byte_end":8294116,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294117,"byte_end":8294150,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294151,"byte_end":8294154,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294155,"byte_end":8294208,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294209,"byte_end":8294212,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294213,"byte_end":8294227,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294228,"byte_end":8294231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294232,"byte_end":8294245,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294246,"byte_end":8294264,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294265,"byte_end":8294268,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294269,"byte_end":8294314,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294315,"byte_end":8294364,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294365,"byte_end":8294377,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294378,"byte_end":8294385,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/write.rs","byte_start":8294386,"byte_end":8294393,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1243},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295139,"byte_end":8295143,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"fn <P, Q> (from: P, to: Q) -> Result<u64, std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294694,"byte_end":8294836,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294837,"byte_end":8294889,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294890,"byte_end":8294893,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294894,"byte_end":8294946,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294947,"byte_end":8294950,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294951,"byte_end":8294965,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294966,"byte_end":8294969,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294970,"byte_end":8294983,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8294984,"byte_end":8295002,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295003,"byte_end":8295006,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295007,"byte_end":8295052,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295053,"byte_end":8295095,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295096,"byte_end":8295108,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295109,"byte_end":8295116,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/copy.rs","byte_start":8295117,"byte_end":8295124,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":174}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30647,"byte_end":30683,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30685,"byte_end":30709,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31174,"byte_end":31180,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31139,"byte_end":31169,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31234,"byte_end":31238,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31191,"byte_end":31229,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31400,"byte_end":31404,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31257,"byte_end":31323,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31328,"byte_end":31395,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1307},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31110,"byte_end":31119,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31046,"byte_end":31083,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":91},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31567,"byte_end":31577,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31522,"byte_end":31559,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31980,"byte_end":31990,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31696,"byte_end":31781,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31786,"byte_end":31857,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31862,"byte_end":31935,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31940,"byte_end":31968,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32368,"byte_end":32379,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32247,"byte_end":32314,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32319,"byte_end":32342,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32347,"byte_end":32356,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33591,"byte_end":33597,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":113}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33539,"byte_end":33579,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33727,"byte_end":33734,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33648,"byte_end":33719,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34505,"byte_end":34510,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34270,"byte_end":34317,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34318,"byte_end":34321,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34322,"byte_end":34399,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34468,"byte_end":34493,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":176},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":305},{"krate":0,"index":1473},{"krate":0,"index":1569},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1654},{"krate":0,"index":1690},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1733},{"krate":0,"index":1751},{"krate":0,"index":1820},{"krate":0,"index":1824},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":2963},{"krate":0,"index":1861},{"krate":0,"index":2966}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37265,"byte_end":37342,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37343,"byte_end":37346,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37347,"byte_end":37418,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37419,"byte_end":37499,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37500,"byte_end":37574,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37575,"byte_end":37578,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37579,"byte_end":37609,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37610,"byte_end":37613,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37614,"byte_end":37694,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37695,"byte_end":37772,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37773,"byte_end":37850,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37851,"byte_end":37931,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37932,"byte_end":38010,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38011,"byte_end":38076,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38077,"byte_end":38080,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that [`AsyncRead`] and [`AsyncWrite`] only contain","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38081,"byte_end":38157,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38158,"byte_end":38225,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38226,"byte_end":38305,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38306,"byte_end":38380,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement [`AsyncRead`] and [`AsyncWrite`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38381,"byte_end":38459,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! respectively.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38460,"byte_end":38477,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38478,"byte_end":38481,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with [`AsyncRead`] and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38482,"byte_end":38548,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"! [`AsyncWrite`]. Instead, they will use the async functions defined in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38549,"byte_end":38626,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"! extension traits. Library authors are expected to implement [`AsyncRead`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38627,"byte_end":38704,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"! and [`AsyncWrite`] in order to provide types that behave like byte streams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38705,"byte_end":38784,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38785,"byte_end":38788,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's [`AsyncRead`] and [`AsyncWrite`] traits","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38789,"byte_end":38869,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38870,"byte_end":38945,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38946,"byte_end":39026,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39027,"byte_end":39098,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39099,"byte_end":39168,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39169,"byte_end":39172,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39173,"byte_end":39245,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39246,"byte_end":39326,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39327,"byte_end":39380,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39381,"byte_end":39384,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39385,"byte_end":39398,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39399,"byte_end":39439,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39440,"byte_end":39464,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39465,"byte_end":39468,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39469,"byte_end":39487,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39488,"byte_end":39527,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39528,"byte_end":39577,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39578,"byte_end":39611,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39612,"byte_end":39615,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39616,"byte_end":39646,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39647,"byte_end":39690,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39691,"byte_end":39694,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39695,"byte_end":39745,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39746,"byte_end":39760,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39761,"byte_end":39766,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39767,"byte_end":39774,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39775,"byte_end":39778,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39779,"byte_end":39808,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39809,"byte_end":39849,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39850,"byte_end":39886,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: https://doc.rust-lang.org/std/io/index.html#read-and-write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39887,"byte_end":39964,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39965,"byte_end":39968,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39969,"byte_end":40004,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40005,"byte_end":40008,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40009,"byte_end":40090,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40091,"byte_end":40165,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40166,"byte_end":40244,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40245,"byte_end":40289,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40290,"byte_end":40293,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40294,"byte_end":40364,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40365,"byte_end":40443,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40444,"byte_end":40522,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40523,"byte_end":40600,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40601,"byte_end":40604,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40605,"byte_end":40680,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40681,"byte_end":40719,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40720,"byte_end":40723,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40724,"byte_end":40737,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40738,"byte_end":40792,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40793,"byte_end":40817,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40818,"byte_end":40821,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40822,"byte_end":40840,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40841,"byte_end":40880,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40881,"byte_end":40926,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40927,"byte_end":40970,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40971,"byte_end":41010,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41011,"byte_end":41014,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41015,"byte_end":41049,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41050,"byte_end":41095,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41096,"byte_end":41099,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41100,"byte_end":41131,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41132,"byte_end":41146,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41147,"byte_end":41152,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41153,"byte_end":41160,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41161,"byte_end":41164,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41165,"byte_end":41246,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write):","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41247,"byte_end":41297,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41298,"byte_end":41301,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41302,"byte_end":41315,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41316,"byte_end":41368,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41369,"byte_end":41393,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41394,"byte_end":41397,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41398,"byte_end":41416,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41417,"byte_end":41456,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41457,"byte_end":41504,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41505,"byte_end":41514,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41515,"byte_end":41562,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41563,"byte_end":41566,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"!         // write a byte to the buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41567,"byte_end":41608,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41609,"byte_end":41650,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41651,"byte_end":41654,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41655,"byte_end":41719,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41720,"byte_end":41723,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41724,"byte_end":41738,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41739,"byte_end":41744,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41745,"byte_end":41752,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41753,"byte_end":41756,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: https://doc.rust-lang.org/std/io/index.html#bufreader-and-bufwriter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41757,"byte_end":41838,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41839,"byte_end":41881,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41882,"byte_end":41927,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41928,"byte_end":41967,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41968,"byte_end":42007,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42008,"byte_end":42011,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42012,"byte_end":42056,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42057,"byte_end":42060,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement `AsyncRead` and `AsyncWrite` for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42061,"byte_end":42139,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42140,"byte_end":42219,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42220,"byte_end":42294,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42295,"byte_end":42368,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42369,"byte_end":42429,"line_start":129,"line_end":129,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42430,"byte_end":42433,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42434,"byte_end":42465,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42466,"byte_end":42469,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42470,"byte_end":42550,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42551,"byte_end":42627,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42628,"byte_end":42675,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42676,"byte_end":42679,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42680,"byte_end":42753,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42754,"byte_end":42830,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42831,"byte_end":42907,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42908,"byte_end":42911,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42912,"byte_end":42933,"line_start":141,"line_end":141,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42934,"byte_end":42957,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42958,"byte_end":42980,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42981,"byte_end":42984,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42985,"byte_end":43007,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43008,"byte_end":43011,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43012,"byte_end":43086,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43087,"byte_end":43122,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43123,"byte_end":43126,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43127,"byte_end":43161,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43162,"byte_end":43198,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43199,"byte_end":43226,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43227,"byte_end":43260,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43261,"byte_end":43288,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43289,"byte_end":43316,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43317,"byte_end":43346,"line_start":156,"line_end":156,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45517,"byte_end":45529,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45045,"byte_end":45076,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45077,"byte_end":45080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait inherits from [`std::io::BufRead`] and indicates that an I/O object is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45081,"byte_end":45166,"line_start":10,"line_end":10,"column_start":1,"column_end":86}},{"value":"/ **non-blocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45167,"byte_end":45243,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ bytes are unavailable instead of blocking the current thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45244,"byte_end":45309,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45310,"byte_end":45313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45314,"byte_end":45382,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45383,"byte_end":45407,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45408,"byte_end":45411,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45412,"byte_end":45454,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45455,"byte_end":45506,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46627,"byte_end":46640,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45547,"byte_end":45632,"line_start":20,"line_end":20,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45637,"byte_end":45678,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45683,"byte_end":45686,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45691,"byte_end":45738,"line_start":23,"line_end":23,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45743,"byte_end":45746,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45751,"byte_end":45810,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45815,"byte_end":45873,"line_start":26,"line_end":26,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45878,"byte_end":45959,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45964,"byte_end":45990,"line_start":28,"line_end":28,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45995,"byte_end":45998,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46003,"byte_end":46074,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46079,"byte_end":46141,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46146,"byte_end":46217,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46222,"byte_end":46303,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46308,"byte_end":46384,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46389,"byte_end":46440,"line_start":35,"line_end":35,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46445,"byte_end":46448,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46453,"byte_end":46524,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46529,"byte_end":46532,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46537,"byte_end":46576,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46581,"byte_end":46619,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47543,"byte_end":47550,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46718,"byte_end":46792,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46797,"byte_end":46864,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46869,"byte_end":46872,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46877,"byte_end":46948,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46953,"byte_end":47022,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47027,"byte_end":47101,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47106,"byte_end":47183,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47188,"byte_end":47258,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47263,"byte_end":47316,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47321,"byte_end":47324,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47329,"byte_end":47401,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47406,"byte_end":47428,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47433,"byte_end":47436,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47441,"byte_end":47480,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47485,"byte_end":47535,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50784,"byte_end":50793,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49203,"byte_end":49233,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49234,"byte_end":49237,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49238,"byte_end":49317,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49318,"byte_end":49392,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49393,"byte_end":49472,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49473,"byte_end":49550,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49551,"byte_end":49562,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49563,"byte_end":49566,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49567,"byte_end":49644,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49645,"byte_end":49663,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49664,"byte_end":49667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49668,"byte_end":49744,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49745,"byte_end":49821,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49822,"byte_end":49841,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49842,"byte_end":49845,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49846,"byte_end":49911,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49912,"byte_end":49992,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49993,"byte_end":50072,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50073,"byte_end":50146,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50147,"byte_end":50220,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50221,"byte_end":50242,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50243,"byte_end":50246,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50247,"byte_end":50331,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50332,"byte_end":50356,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50357,"byte_end":50360,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50361,"byte_end":50434,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50435,"byte_end":50514,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50515,"byte_end":50518,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50519,"byte_end":50584,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50585,"byte_end":50606,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50607,"byte_end":50610,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50611,"byte_end":50650,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50651,"byte_end":50687,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50688,"byte_end":50727,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50728,"byte_end":50773,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52432,"byte_end":52460,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"fn (&self, buf: &mut [MaybeUninit<u8>]) -> bool","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50800,"byte_end":50874,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50879,"byte_end":50928,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50933,"byte_end":50936,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50941,"byte_end":51014,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51019,"byte_end":51090,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51095,"byte_end":51169,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51174,"byte_end":51250,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51255,"byte_end":51293,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51298,"byte_end":51301,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51306,"byte_end":51382,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51387,"byte_end":51461,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51466,"byte_end":51543,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51548,"byte_end":51580,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51585,"byte_end":51588,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51593,"byte_end":51666,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51671,"byte_end":51739,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51744,"byte_end":51800,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51805,"byte_end":51840,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51845,"byte_end":51848,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51853,"byte_end":51929,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51934,"byte_end":52009,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52014,"byte_end":52091,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52096,"byte_end":52114,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52119,"byte_end":52122,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52127,"byte_end":52178,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52183,"byte_end":52186,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52191,"byte_end":52203,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52208,"byte_end":52211,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52216,"byte_end":52288,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52293,"byte_end":52324,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52329,"byte_end":52332,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52337,"byte_end":52368,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: #method.poll_read_buf","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52373,"byte_end":52417,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52968,"byte_end":52977,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52598,"byte_end":52651,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52656,"byte_end":52659,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52664,"byte_end":52722,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52727,"byte_end":52730,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52735,"byte_end":52794,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52799,"byte_end":52857,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52862,"byte_end":52929,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52934,"byte_end":52960,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53438,"byte_end":53451,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53102,"byte_end":53178,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53183,"byte_end":53212,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53217,"byte_end":53220,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53225,"byte_end":53300,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53305,"byte_end":53381,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53386,"byte_end":53430,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56606,"byte_end":56615,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56124,"byte_end":56154,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56155,"byte_end":56158,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56159,"byte_end":56233,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56234,"byte_end":56304,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56305,"byte_end":56374,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56375,"byte_end":56378,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56379,"byte_end":56444,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56445,"byte_end":56466,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56467,"byte_end":56470,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56471,"byte_end":56507,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56508,"byte_end":56549,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56550,"byte_end":56595,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56953,"byte_end":56963,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, position: SeekFrom) -> Poll<io::Result<()>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56622,"byte_end":56679,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56684,"byte_end":56687,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56692,"byte_end":56765,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56770,"byte_end":56796,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56801,"byte_end":56804,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56809,"byte_end":56884,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56889,"byte_end":56945,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57546,"byte_end":57559,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57089,"byte_end":57132,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57137,"byte_end":57140,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57145,"byte_end":57194,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57199,"byte_end":57269,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57274,"byte_end":57335,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57340,"byte_end":57343,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57348,"byte_end":57360,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57365,"byte_end":57368,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57373,"byte_end":57429,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57434,"byte_end":57437,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57442,"byte_end":57454,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57459,"byte_end":57462,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57467,"byte_end":57538,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61062,"byte_end":61072,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59199,"byte_end":59231,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59232,"byte_end":59235,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59236,"byte_end":59318,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59319,"byte_end":59394,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59395,"byte_end":59462,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59463,"byte_end":59466,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59467,"byte_end":59547,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59548,"byte_end":59566,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59567,"byte_end":59570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59571,"byte_end":59642,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59643,"byte_end":59657,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59658,"byte_end":59661,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59662,"byte_end":59730,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59731,"byte_end":59811,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59812,"byte_end":59891,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59892,"byte_end":59965,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59966,"byte_end":60039,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60040,"byte_end":60061,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60062,"byte_end":60065,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60066,"byte_end":60150,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60151,"byte_end":60175,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60176,"byte_end":60179,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60180,"byte_end":60262,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60263,"byte_end":60346,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60347,"byte_end":60350,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60351,"byte_end":60435,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60436,"byte_end":60520,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60521,"byte_end":60599,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60600,"byte_end":60679,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60680,"byte_end":60741,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60742,"byte_end":60745,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60746,"byte_end":60812,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60813,"byte_end":60835,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60836,"byte_end":60839,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60840,"byte_end":60878,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60879,"byte_end":60923,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60924,"byte_end":60963,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60964,"byte_end":61003,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61004,"byte_end":61051,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61456,"byte_end":61466,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61079,"byte_end":61133,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61138,"byte_end":61141,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61146,"byte_end":61207,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61212,"byte_end":61215,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61220,"byte_end":61282,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61287,"byte_end":61345,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61350,"byte_end":61417,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61422,"byte_end":61448,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62007,"byte_end":62017,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61594,"byte_end":61665,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61670,"byte_end":61692,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61697,"byte_end":61700,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61705,"byte_end":61751,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61756,"byte_end":61759,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61764,"byte_end":61828,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61833,"byte_end":61891,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61896,"byte_end":61964,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61969,"byte_end":61999,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65303,"byte_end":65316,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62099,"byte_end":62173,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62178,"byte_end":62226,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62231,"byte_end":62234,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62239,"byte_end":62310,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62315,"byte_end":62391,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62396,"byte_end":62472,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62477,"byte_end":62552,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62557,"byte_end":62628,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62633,"byte_end":62709,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62714,"byte_end":62742,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62747,"byte_end":62750,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62755,"byte_end":62816,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62821,"byte_end":62892,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62897,"byte_end":62969,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62974,"byte_end":63049,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63054,"byte_end":63127,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63132,"byte_end":63207,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63212,"byte_end":63284,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63289,"byte_end":63300,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63305,"byte_end":63308,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63313,"byte_end":63387,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63392,"byte_end":63464,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63469,"byte_end":63538,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63543,"byte_end":63611,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63616,"byte_end":63677,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63682,"byte_end":63685,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63690,"byte_end":63708,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63713,"byte_end":63716,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63721,"byte_end":63791,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63796,"byte_end":63799,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63804,"byte_end":63867,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63872,"byte_end":63941,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63946,"byte_end":64021,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64026,"byte_end":64099,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64104,"byte_end":64155,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64160,"byte_end":64163,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64168,"byte_end":64238,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64243,"byte_end":64318,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64323,"byte_end":64395,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64400,"byte_end":64470,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64475,"byte_end":64550,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64555,"byte_end":64558,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64563,"byte_end":64644,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64649,"byte_end":64724,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64729,"byte_end":64796,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64801,"byte_end":64804,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64809,"byte_end":64821,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64826,"byte_end":64829,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64834,"byte_end":64905,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64910,"byte_end":64976,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64981,"byte_end":65055,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65060,"byte_end":65124,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65129,"byte_end":65168,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65173,"byte_end":65176,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65181,"byte_end":65193,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65198,"byte_end":65201,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65206,"byte_end":65281,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65286,"byte_end":65295,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65604,"byte_end":65618,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65398,"byte_end":65472,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65477,"byte_end":65480,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65485,"byte_end":65559,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65564,"byte_end":65596,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1681},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8323257,"byte_end":8323268,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19229,"byte_end":19258,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325514,"byte_end":8325517,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325092,"byte_end":8325160,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325165,"byte_end":8325168,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325173,"byte_end":8325185,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325190,"byte_end":8325193,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325198,"byte_end":8325258,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325263,"byte_end":8325266,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325271,"byte_end":8325341,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325346,"byte_end":8325419,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325424,"byte_end":8325502,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326721,"byte_end":8326735,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"fn (io: E, ready: mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325617,"byte_end":8325711,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325716,"byte_end":8325810,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325815,"byte_end":8325910,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325915,"byte_end":8326009,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326014,"byte_end":8326042,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326047,"byte_end":8326050,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326055,"byte_end":8326092,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326097,"byte_end":8326100,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326105,"byte_end":8326116,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326121,"byte_end":8326138,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326143,"byte_end":8326174,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326179,"byte_end":8326224,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326229,"byte_end":8326283,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326288,"byte_end":8326340,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326345,"byte_end":8326355,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326360,"byte_end":8326367,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326372,"byte_end":8326375,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326380,"byte_end":8326392,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326397,"byte_end":8326400,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326405,"byte_end":8326465,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326470,"byte_end":8326473,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326478,"byte_end":8326548,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326553,"byte_end":8326626,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8326631,"byte_end":8326709,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327213,"byte_end":8327220,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327099,"byte_end":8327173,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327178,"byte_end":8327201,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327396,"byte_end":8327403,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327281,"byte_end":8327356,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327361,"byte_end":8327384,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327939,"byte_end":8327949,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327472,"byte_end":8327521,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327526,"byte_end":8327529,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327534,"byte_end":8327608,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327613,"byte_end":8327688,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327693,"byte_end":8327696,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327701,"byte_end":8327776,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327781,"byte_end":8327857,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8327862,"byte_end":8327927,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329101,"byte_end":8329116,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>, mask: mio::Ready) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328097,"byte_end":8328148,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328153,"byte_end":8328156,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328161,"byte_end":8328234,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328239,"byte_end":8328310,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328315,"byte_end":8328390,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328395,"byte_end":8328402,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328407,"byte_end":8328410,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328415,"byte_end":8328491,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328496,"byte_end":8328562,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328567,"byte_end":8328570,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328575,"byte_end":8328648,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328653,"byte_end":8328697,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328702,"byte_end":8328705,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: #method.clear_read_ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328710,"byte_end":8328760,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328765,"byte_end":8328768,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328773,"byte_end":8328785,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328790,"byte_end":8328793,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328798,"byte_end":8328826,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328831,"byte_end":8328834,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328839,"byte_end":8328871,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328876,"byte_end":8328920,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328925,"byte_end":8328928,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328933,"byte_end":8328946,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328951,"byte_end":8328954,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8328959,"byte_end":8329032,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329037,"byte_end":8329089,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330092,"byte_end":8330108,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, cx: &mut Context<'_>, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329493,"byte_end":8329569,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329574,"byte_end":8329638,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329643,"byte_end":8329646,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329651,"byte_end":8329713,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329718,"byte_end":8329789,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329794,"byte_end":8329797,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329802,"byte_end":8329877,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329882,"byte_end":8329914,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329919,"byte_end":8329922,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329927,"byte_end":8329939,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329944,"byte_end":8329947,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329952,"byte_end":8329980,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329985,"byte_end":8329988,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8329993,"byte_end":8330031,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330036,"byte_end":8330080,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331543,"byte_end":8331559,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330633,"byte_end":8330685,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330690,"byte_end":8330693,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330698,"byte_end":8330767,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330772,"byte_end":8330815,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330820,"byte_end":8330823,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330828,"byte_end":8330896,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330901,"byte_end":8330976,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330981,"byte_end":8330984,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8330989,"byte_end":8331063,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331068,"byte_end":8331113,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331118,"byte_end":8331121,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: #method.clear_write_ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331126,"byte_end":8331178,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331183,"byte_end":8331186,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331191,"byte_end":8331203,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331208,"byte_end":8331211,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331216,"byte_end":8331244,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331249,"byte_end":8331252,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331257,"byte_end":8331314,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331319,"byte_end":8331363,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331368,"byte_end":8331371,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331376,"byte_end":8331389,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331394,"byte_end":8331397,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331402,"byte_end":8331475,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331480,"byte_end":8331531,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332408,"byte_end":8332425,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331835,"byte_end":8331912,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331917,"byte_end":8331982,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331987,"byte_end":8331990,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8331995,"byte_end":8332071,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332076,"byte_end":8332121,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332126,"byte_end":8332129,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332134,"byte_end":8332209,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332214,"byte_end":8332288,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332293,"byte_end":8332296,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332301,"byte_end":8332313,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332318,"byte_end":8332321,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332326,"byte_end":8332396,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336654,"byte_end":8336666,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19229,"byte_end":19258,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337358,"byte_end":8337361,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"fn <T> (io: &T) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336786,"byte_end":8336842,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336847,"byte_end":8336850,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336855,"byte_end":8336867,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336872,"byte_end":8336875,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336880,"byte_end":8336932,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336937,"byte_end":8336996,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337001,"byte_end":8337004,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337009,"byte_end":8337012,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337017,"byte_end":8337029,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337034,"byte_end":8337037,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337042,"byte_end":8337102,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337107,"byte_end":8337110,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337115,"byte_end":8337185,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337190,"byte_end":8337263,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337268,"byte_end":8337346,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338764,"byte_end":8338778,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"fn <T> (io: &T, ready: mio::Ready) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337508,"byte_end":8337599,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337604,"byte_end":8337698,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337703,"byte_end":8337797,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337802,"byte_end":8337897,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337902,"byte_end":8337923,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337928,"byte_end":8337931,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337936,"byte_end":8337973,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337978,"byte_end":8337981,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8337986,"byte_end":8337997,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338002,"byte_end":8338019,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338024,"byte_end":8338055,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338060,"byte_end":8338105,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338110,"byte_end":8338164,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338169,"byte_end":8338221,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338226,"byte_end":8338236,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338241,"byte_end":8338248,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338253,"byte_end":8338256,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338261,"byte_end":8338273,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338278,"byte_end":8338281,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338286,"byte_end":8338338,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338343,"byte_end":8338402,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338407,"byte_end":8338410,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338415,"byte_end":8338418,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338423,"byte_end":8338435,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338440,"byte_end":8338443,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338448,"byte_end":8338508,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338513,"byte_end":8338516,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338521,"byte_end":8338591,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338596,"byte_end":8338669,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8338674,"byte_end":8338752,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340013,"byte_end":8340023,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"fn <T> (&mut self, io: &T) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339237,"byte_end":8339309,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339314,"byte_end":8339317,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339322,"byte_end":8339398,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339403,"byte_end":8339431,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339436,"byte_end":8339439,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339444,"byte_end":8339519,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339524,"byte_end":8339600,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339605,"byte_end":8339670,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339675,"byte_end":8339678,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339683,"byte_end":8339695,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339700,"byte_end":8339703,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339708,"byte_end":8339780,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339785,"byte_end":8339861,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339866,"byte_end":8339939,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339944,"byte_end":8339947,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8339952,"byte_end":8340001,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341766,"byte_end":8341781,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340326,"byte_end":8340391,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340396,"byte_end":8340399,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340404,"byte_end":8340478,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340483,"byte_end":8340556,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340561,"byte_end":8340611,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340616,"byte_end":8340619,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340624,"byte_end":8340697,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340702,"byte_end":8340777,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340782,"byte_end":8340818,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340823,"byte_end":8340826,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340831,"byte_end":8340882,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340887,"byte_end":8340890,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340895,"byte_end":8340913,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340918,"byte_end":8340921,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340926,"byte_end":8340971,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340976,"byte_end":8340979,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8340984,"byte_end":8341059,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341064,"byte_end":8341125,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341130,"byte_end":8341133,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341138,"byte_end":8341213,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341218,"byte_end":8341265,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341270,"byte_end":8341273,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341278,"byte_end":8341354,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341359,"byte_end":8341434,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341439,"byte_end":8341493,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341498,"byte_end":8341501,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341506,"byte_end":8341540,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341545,"byte_end":8341646,"line_start":173,"line_end":173,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341651,"byte_end":8341654,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341659,"byte_end":8341671,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341676,"byte_end":8341679,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8341684,"byte_end":8341754,"line_start":177,"line_end":177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342464,"byte_end":8342479,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342108,"byte_end":8342153,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342158,"byte_end":8342161,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342166,"byte_end":8342238,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342243,"byte_end":8342318,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342323,"byte_end":8342391,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342396,"byte_end":8342399,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: #method.poll_read_ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342404,"byte_end":8342452,"line_start":195,"line_end":195,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344025,"byte_end":8344041,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342581,"byte_end":8342647,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342652,"byte_end":8342655,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342660,"byte_end":8342735,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342740,"byte_end":8342814,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342819,"byte_end":8342869,"line_start":204,"line_end":204,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342874,"byte_end":8342877,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342882,"byte_end":8342955,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8342960,"byte_end":8343035,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343040,"byte_end":8343076,"line_start":208,"line_end":208,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343081,"byte_end":8343084,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343089,"byte_end":8343140,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343145,"byte_end":8343148,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343153,"byte_end":8343171,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343176,"byte_end":8343179,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343184,"byte_end":8343229,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343234,"byte_end":8343237,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343242,"byte_end":8343317,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343322,"byte_end":8343383,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343388,"byte_end":8343391,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343396,"byte_end":8343471,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343476,"byte_end":8343524,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343529,"byte_end":8343532,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343537,"byte_end":8343613,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343618,"byte_end":8343693,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343698,"byte_end":8343752,"line_start":224,"line_end":224,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343757,"byte_end":8343760,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343765,"byte_end":8343799,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343804,"byte_end":8343905,"line_start":227,"line_end":227,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343910,"byte_end":8343913,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343918,"byte_end":8343930,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343935,"byte_end":8343938,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8343943,"byte_end":8344013,"line_start":231,"line_end":231,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344730,"byte_end":8344746,"line_start":250,"line_end":250,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344369,"byte_end":8344416,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344421,"byte_end":8344424,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344429,"byte_end":8344502,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344507,"byte_end":8344582,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344587,"byte_end":8344655,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344660,"byte_end":8344663,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: #method.poll_write_ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8344668,"byte_end":8344718,"line_start":249,"line_end":249,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1737},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8349126,"byte_end":8349132,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1738}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8350181,"byte_end":8350187,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8352251,"byte_end":8352256,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1743}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1741},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8352913,"byte_end":8352918,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8354723,"byte_end":8354729,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1748}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1746},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8355767,"byte_end":8355773,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19592,"byte_end":19618,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1865},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8357412,"byte_end":8357420,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1867}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8357549,"byte_end":8357558,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1870}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1871},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8357872,"byte_end":8357877,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358503,"byte_end":8358513,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"fn (&self, other: &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358400,"byte_end":8358475,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358480,"byte_end":8358491,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358920,"byte_end":8358927,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358596,"byte_end":8358645,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358650,"byte_end":8358653,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358658,"byte_end":8358670,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358675,"byte_end":8358678,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358683,"byte_end":8358757,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358762,"byte_end":8358812,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358817,"byte_end":8358881,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358886,"byte_end":8358908,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359428,"byte_end":8359438,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"fn (&self, other: &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359326,"byte_end":8359400,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359405,"byte_end":8359416,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1873},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8362675,"byte_end":8362679,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8362512,"byte_end":8362578,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8362596,"byte_end":8362663,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2542},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8365838,"byte_end":8365853,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8368553,"byte_end":8368563,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8371454,"byte_end":8371463,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8372863,"byte_end":8372868,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8374718,"byte_end":8374723,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2542},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2550},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8376798,"byte_end":8376810,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2565},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8377930,"byte_end":8377935,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8380764,"byte_end":8380768,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8383070,"byte_end":8383078,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8385304,"byte_end":8385314,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8386751,"byte_end":8386758,"line_start":326,"line_end":326,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8388047,"byte_end":8388054,"line_start":364,"line_end":364,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8389385,"byte_end":8389393,"line_start":402,"line_end":402,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8390733,"byte_end":8390741,"line_start":440,"line_end":440,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8392022,"byte_end":8392030,"line_start":477,"line_end":477,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8393325,"byte_end":8393333,"line_start":515,"line_end":515,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8394696,"byte_end":8394704,"line_start":554,"line_end":554,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8395997,"byte_end":8396005,"line_start":591,"line_end":591,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8397465,"byte_end":8397474,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8398868,"byte_end":8398877,"line_start":671,"line_end":671,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8400488,"byte_end":8400499,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8402067,"byte_end":8402081,"line_start":764,"line_end":764,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8403259,"byte_end":8403263,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1944},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404305,"byte_end":8404317,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1945}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403530,"byte_end":8403603,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403604,"byte_end":8403607,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403608,"byte_end":8403679,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403680,"byte_end":8403683,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403684,"byte_end":8403698,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403699,"byte_end":8403702,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403703,"byte_end":8403710,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403711,"byte_end":8403747,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403748,"byte_end":8403774,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403775,"byte_end":8403778,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403779,"byte_end":8403797,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403798,"byte_end":8403837,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403838,"byte_end":8403887,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403888,"byte_end":8403891,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403892,"byte_end":8403945,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403946,"byte_end":8403993,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403994,"byte_end":8403997,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8403998,"byte_end":8404027,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404028,"byte_end":8404073,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404074,"byte_end":8404099,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404100,"byte_end":8404132,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404133,"byte_end":8404136,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404137,"byte_end":8404151,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404152,"byte_end":8404157,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404158,"byte_end":8404165,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404166,"byte_end":8404169,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404170,"byte_end":8404229,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404230,"byte_end":8404233,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404234,"byte_end":8404262,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404263,"byte_end":8404294,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8405034,"byte_end":8405038,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":1944},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404335,"byte_end":8404404,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404409,"byte_end":8404462,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404467,"byte_end":8404470,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404475,"byte_end":8404552,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404557,"byte_end":8404579,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404584,"byte_end":8404587,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404592,"byte_end":8404606,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404611,"byte_end":8404614,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404619,"byte_end":8404632,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404637,"byte_end":8404661,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404666,"byte_end":8404692,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404697,"byte_end":8404700,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404705,"byte_end":8404731,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404736,"byte_end":8404739,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404744,"byte_end":8404789,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404794,"byte_end":8404842,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404847,"byte_end":8404888,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404893,"byte_end":8404896,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404901,"byte_end":8404938,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404943,"byte_end":8404985,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404990,"byte_end":8405002,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8405007,"byte_end":8405014,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8405019,"byte_end":8405026,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2586},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8407121,"byte_end":8407134,"line_start":62,"line_end":62,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2594},{"krate":0,"index":2595}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8408976,"byte_end":8408981,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8411783,"byte_end":8411792,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8413126,"byte_end":8413135,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8414535,"byte_end":8414543,"line_start":265,"line_end":265,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8415804,"byte_end":8415812,"line_start":302,"line_end":302,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8417127,"byte_end":8417136,"line_start":340,"line_end":340,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8418449,"byte_end":8418458,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8419798,"byte_end":8419807,"line_start":416,"line_end":416,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8421142,"byte_end":8421151,"line_start":454,"line_end":454,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8422528,"byte_end":8422537,"line_start":492,"line_end":492,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8423924,"byte_end":8423933,"line_start":530,"line_end":530,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8425388,"byte_end":8425398,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8426788,"byte_end":8426798,"line_start":610,"line_end":610,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8427816,"byte_end":8427821,"line_start":643,"line_end":643,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8429041,"byte_end":8429049,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11247},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430442,"byte_end":8430451,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":11249},{"krate":0,"index":11250},{"krate":0,"index":11251},{"krate":0,"index":11252}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430787,"byte_end":8430790,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430645,"byte_end":8430737,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430742,"byte_end":8430775,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430952,"byte_end":8430965,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430875,"byte_end":8430940,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431641,"byte_end":8431648,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431504,"byte_end":8431550,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431555,"byte_end":8431558,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431563,"byte_end":8431629,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431840,"byte_end":8431847,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431695,"byte_end":8431749,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431754,"byte_end":8431757,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431762,"byte_end":8431828,"line_start":73,"line_end":73,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432058,"byte_end":8432069,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431906,"byte_end":8431967,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431972,"byte_end":8431975,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8431980,"byte_end":8432046,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432300,"byte_end":8432310,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432149,"byte_end":8432212,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432217,"byte_end":8432220,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432225,"byte_end":8432288,"line_start":87,"line_end":87,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432514,"byte_end":8432520,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432354,"byte_end":8432410,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432415,"byte_end":8432418,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432423,"byte_end":8432502,"line_start":94,"line_end":94,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":11233},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436561,"byte_end":8436570,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":11235}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436849,"byte_end":8436852,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436695,"byte_end":8436752,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436757,"byte_end":8436760,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436765,"byte_end":8436837,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437184,"byte_end":8437197,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"fn (reader_capacity: usize, writer_capacity: usize, stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436984,"byte_end":8437069,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437074,"byte_end":8437087,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437092,"byte_end":8437095,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437100,"byte_end":8437172,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437654,"byte_end":8437661,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437509,"byte_end":8437559,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437564,"byte_end":8437567,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437572,"byte_end":8437642,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437881,"byte_end":8437888,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437728,"byte_end":8437786,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437791,"byte_end":8437794,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437799,"byte_end":8437869,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438123,"byte_end":8438134,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8437963,"byte_end":8438028,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438033,"byte_end":8438036,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438041,"byte_end":8438111,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438398,"byte_end":8438408,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438243,"byte_end":8438310,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438315,"byte_end":8438318,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438323,"byte_end":8438386,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11170},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442227,"byte_end":8442236,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11174}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442544,"byte_end":8442547,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442402,"byte_end":8442494,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442499,"byte_end":8442532,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442709,"byte_end":8442722,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442632,"byte_end":8442697,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8443804,"byte_end":8443811,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8443746,"byte_end":8443792,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444002,"byte_end":8444009,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8443858,"byte_end":8443912,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8443917,"byte_end":8443920,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8443925,"byte_end":8443990,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444219,"byte_end":8444230,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444068,"byte_end":8444129,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444134,"byte_end":8444137,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444142,"byte_end":8444207,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444461,"byte_end":8444471,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444310,"byte_end":8444373,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444378,"byte_end":8444381,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444386,"byte_end":8444449,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444583,"byte_end":8444589,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444515,"byte_end":8444571,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":11121},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447222,"byte_end":8447227,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11124},{"krate":0,"index":11125},{"krate":0,"index":11126}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447668,"byte_end":8447675,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447594,"byte_end":8447656,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448007,"byte_end":8448014,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447744,"byte_end":8447814,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447819,"byte_end":8447822,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447827,"byte_end":8447900,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447905,"byte_end":8447978,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447983,"byte_end":8447995,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448373,"byte_end":8448384,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448103,"byte_end":8448180,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448185,"byte_end":8448188,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448193,"byte_end":8448266,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448271,"byte_end":8448344,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448349,"byte_end":8448361,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448581,"byte_end":8448591,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448513,"byte_end":8448569,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2621},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8450861,"byte_end":8450865,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8450778,"byte_end":8450845,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2616},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8452130,"byte_end":8452134,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> Copy<'a, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2637},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8454878,"byte_end":8454883,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2638}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2639},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8455562,"byte_end":8455567,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2640},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8456608,"byte_end":8456613,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2643}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11098},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8457729,"byte_end":8457734,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":11100},{"krate":0,"index":11101},{"krate":0,"index":11102},{"krate":0,"index":11103}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458581,"byte_end":8458590,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458091,"byte_end":8458131,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458136,"byte_end":8458139,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458144,"byte_end":8458158,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458163,"byte_end":8458166,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458171,"byte_end":8458178,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458183,"byte_end":8458217,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458222,"byte_end":8458257,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458262,"byte_end":8458265,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458270,"byte_end":8458353,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458358,"byte_end":8458398,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458403,"byte_end":8458406,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458411,"byte_end":8458464,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458469,"byte_end":8458512,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458517,"byte_end":8458522,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458527,"byte_end":8458539,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458544,"byte_end":8458551,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458556,"byte_end":8458563,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458817,"byte_end":8458824,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458750,"byte_end":8458805,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458943,"byte_end":8458950,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"fn (&mut self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458884,"byte_end":8458931,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459237,"byte_end":8459247,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459002,"byte_end":8459063,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459068,"byte_end":8459071,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459076,"byte_end":8459139,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459144,"byte_end":8459225,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459366,"byte_end":8459380,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2648},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8461310,"byte_end":8461314,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8461227,"byte_end":8461294,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2657},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8462358,"byte_end":8462365,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2662}],"decl_id":null,"docs":" Future returned by [`read_buf`](AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8462275,"byte_end":8462342,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8463641,"byte_end":8463650,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8463558,"byte_end":8463625,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11040},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8467974,"byte_end":8467980,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":11042}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11007},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8467996,"byte_end":8468002,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":11009}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10962},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468018,"byte_end":8468025,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10964},{"krate":0,"index":10965},{"krate":0,"index":10967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10917},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468050,"byte_end":8468057,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10919},{"krate":0,"index":10920},{"krate":0,"index":10922}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10872},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468082,"byte_end":8468089,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10874},{"krate":0,"index":10875},{"krate":0,"index":10877}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10827},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468114,"byte_end":8468122,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10829},{"krate":0,"index":10830},{"krate":0,"index":10832}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10782},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468150,"byte_end":8468157,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10784},{"krate":0,"index":10785},{"krate":0,"index":10787}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10737},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468182,"byte_end":8468189,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10692},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468214,"byte_end":8468221,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10694},{"krate":0,"index":10695},{"krate":0,"index":10697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10647},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8468246,"byte_end":8468254,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10649},{"krate":0,"index":10650},{"krate":0,"index":10652}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8468683,"byte_end":8468691,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8468600,"byte_end":8468667,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2769},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8470740,"byte_end":8470749,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8470610,"byte_end":8470677,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2780},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8473728,"byte_end":8473740,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8473645,"byte_end":8473712,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2791},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8476134,"byte_end":8476143,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8476051,"byte_end":8476118,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2803},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8478401,"byte_end":8478407,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2804}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2802},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8479093,"byte_end":8479099,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8479863,"byte_end":8479871,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2810}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2815},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8481043,"byte_end":8481047,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2816}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2817},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8481888,"byte_end":8481892,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10624},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483137,"byte_end":8483142,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":10626},{"krate":0,"index":10627},{"krate":0,"index":10628},{"krate":0,"index":10629}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484003,"byte_end":8484015,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483491,"byte_end":8483534,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483539,"byte_end":8483542,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483547,"byte_end":8483561,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483566,"byte_end":8483569,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483574,"byte_end":8483581,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483586,"byte_end":8483620,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483625,"byte_end":8483660,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483665,"byte_end":8483668,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483673,"byte_end":8483756,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483761,"byte_end":8483808,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483813,"byte_end":8483816,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483821,"byte_end":8483883,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483888,"byte_end":8483934,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483939,"byte_end":8483944,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483949,"byte_end":8483961,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483966,"byte_end":8483973,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483978,"byte_end":8483985,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484253,"byte_end":8484270,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10578},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496721,"byte_end":8496733,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":10581},{"krate":0,"index":10582}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2833},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8498009,"byte_end":8498022,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"fn <S, B> (stream: S) -> StreamReader<S, B>","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496810,"byte_end":8496890,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496891,"byte_end":8496894,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496895,"byte_end":8496908,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496909,"byte_end":8496912,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496913,"byte_end":8496920,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496921,"byte_end":8496942,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496943,"byte_end":8496992,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8496993,"byte_end":8497013,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497014,"byte_end":8497060,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497061,"byte_end":8497064,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497065,"byte_end":8497105,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497106,"byte_end":8497148,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497149,"byte_end":8497195,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497196,"byte_end":8497242,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497243,"byte_end":8497291,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497292,"byte_end":8497299,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497300,"byte_end":8497303,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497304,"byte_end":8497338,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497339,"byte_end":8497380,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497381,"byte_end":8497384,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497385,"byte_end":8497424,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497425,"byte_end":8497450,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497451,"byte_end":8497488,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497489,"byte_end":8497526,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497527,"byte_end":8497530,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497531,"byte_end":8497573,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497574,"byte_end":8497620,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497621,"byte_end":8497658,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497659,"byte_end":8497662,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497663,"byte_end":8497690,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497691,"byte_end":8497737,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497738,"byte_end":8497780,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497781,"byte_end":8497784,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497785,"byte_end":8497820,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497821,"byte_end":8497867,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497868,"byte_end":8497871,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497872,"byte_end":8497884,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497885,"byte_end":8497892,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8497893,"byte_end":8497900,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10533},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8485744,"byte_end":8485748,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10535},{"krate":0,"index":10536}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486338,"byte_end":8486343,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486035,"byte_end":8486088,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486093,"byte_end":8486139,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486144,"byte_end":8486147,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486152,"byte_end":8486162,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486167,"byte_end":8486170,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486175,"byte_end":8486252,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486257,"byte_end":8486326,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486662,"byte_end":8486671,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486391,"byte_end":8486462,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486467,"byte_end":8486541,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486546,"byte_end":8486621,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486626,"byte_end":8486650,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486794,"byte_end":8486801,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486736,"byte_end":8486782,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487093,"byte_end":8487100,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486848,"byte_end":8486902,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486907,"byte_end":8486910,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486915,"byte_end":8486988,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486993,"byte_end":8487065,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487070,"byte_end":8487081,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487411,"byte_end":8487422,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487159,"byte_end":8487220,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487225,"byte_end":8487228,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487233,"byte_end":8487306,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487311,"byte_end":8487383,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487388,"byte_end":8487399,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487568,"byte_end":8487578,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487502,"byte_end":8487556,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8489508,"byte_end":8489513,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2860}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8489425,"byte_end":8489492,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2865},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8490409,"byte_end":8490417,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8490326,"byte_end":8490393,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8491800,"byte_end":8491808,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8491717,"byte_end":8491784,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":10473},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495779,"byte_end":8495786,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":10475},{"krate":0,"index":10476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10436},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495802,"byte_end":8495809,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":10438},{"krate":0,"index":10439}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10391},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495825,"byte_end":8495833,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":10393},{"krate":0,"index":10394},{"krate":0,"index":10396}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10346},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495858,"byte_end":8495866,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10348},{"krate":0,"index":10349},{"krate":0,"index":10351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10301},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495891,"byte_end":8495899,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10303},{"krate":0,"index":10304},{"krate":0,"index":10306}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10256},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495924,"byte_end":8495933,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10258},{"krate":0,"index":10259},{"krate":0,"index":10261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10211},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495961,"byte_end":8495969,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10213},{"krate":0,"index":10214},{"krate":0,"index":10216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10166},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8495994,"byte_end":8496002,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10168},{"krate":0,"index":10169},{"krate":0,"index":10171}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10121},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8496027,"byte_end":8496035,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10076},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8496060,"byte_end":8496069,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10078},{"krate":0,"index":10079},{"krate":0,"index":10081}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":306},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":365},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3032},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3335},{"krate":0,"index":3461},{"krate":0,"index":3480},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69923,"byte_end":69941,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69943,"byte_end":69981,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69982,"byte_end":69985,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69986,"byte_end":70069,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70070,"byte_end":70135,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70136,"byte_end":70139,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70140,"byte_end":70158,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70159,"byte_end":70162,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70163,"byte_end":70251,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70252,"byte_end":70321,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70322,"byte_end":70410,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70411,"byte_end":70469,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70470,"byte_end":70533,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70534,"byte_end":70599,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70601,"byte_end":70604,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70605,"byte_end":70637,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70638,"byte_end":70666,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70667,"byte_end":70695,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70696,"byte_end":70730,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70731,"byte_end":70761,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70762,"byte_end":70796,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72045,"byte_end":72058,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71357,"byte_end":71434,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71435,"byte_end":71438,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71439,"byte_end":71448,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71449,"byte_end":71452,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71453,"byte_end":71530,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71531,"byte_end":71602,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71603,"byte_end":71630,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71631,"byte_end":71634,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71635,"byte_end":71648,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71649,"byte_end":71652,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71653,"byte_end":71730,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71731,"byte_end":71803,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71804,"byte_end":71873,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71874,"byte_end":71877,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71878,"byte_end":71957,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust langague.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71958,"byte_end":72034,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77372,"byte_end":77389,"line_start":223,"line_end":223,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77405,"byte_end":77409,"line_start":224,"line_end":224,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77470,"byte_end":77476,"line_start":225,"line_end":225,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77548,"byte_end":77563,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self) -> Self::Future","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3005},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77700,"byte_end":77705,"line_start":234,"line_end":234,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3008},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77739,"byte_end":77747,"line_start":235,"line_end":235,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3004},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77675,"byte_end":77685,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"MaybeReady::{Ready, Blocking}","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3008}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":18706,"byte_end":18729,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77900,"byte_end":77903,"line_start":241,"line_end":241,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77947,"byte_end":77951,"line_start":242,"line_end":242,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3013},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77876,"byte_end":77885,"line_start":240,"line_end":240,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"OneOrMore::{One, More}","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3017}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":18706,"byte_end":18729,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3027},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/lookup_host.rs","byte_start":8502316,"byte_end":8502327,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"fn <T> (host: T) -> io::Result<impl Iterator<Item = SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":18706,"byte_end":18729,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3032},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3186},{"krate":0,"index":3190},{"krate":0,"index":3293}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8502475,"byte_end":8502496,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3296},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505096,"byte_end":8505107,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3297}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506385,"byte_end":8506389,"line_start":109,"line_end":109,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addr: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener which will be bound to the specified address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505190,"byte_end":8505265,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505270,"byte_end":8505273,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505278,"byte_end":8505339,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505344,"byte_end":8505347,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505352,"byte_end":8505427,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505432,"byte_end":8505508,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505513,"byte_end":8505524,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505529,"byte_end":8505532,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of `ToSocketAddrs` trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505537,"byte_end":8505606,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505611,"byte_end":8505614,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505619,"byte_end":8505695,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505700,"byte_end":8505773,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505778,"byte_end":8505851,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505856,"byte_end":8505908,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505913,"byte_end":8505916,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505921,"byte_end":8505984,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505989,"byte_end":8505992,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505997,"byte_end":8506011,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506016,"byte_end":8506019,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506024,"byte_end":8506037,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506042,"byte_end":8506074,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506079,"byte_end":8506082,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506087,"byte_end":8506103,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506108,"byte_end":8506111,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506116,"byte_end":8506134,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506139,"byte_end":8506178,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506183,"byte_end":8506246,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506251,"byte_end":8506254,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506259,"byte_end":8506286,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506291,"byte_end":8506294,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506299,"byte_end":8506326,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506331,"byte_end":8506345,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506350,"byte_end":8506355,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8506360,"byte_end":8506367,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507961,"byte_end":8507967,"line_start":161,"line_end":161,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507102,"byte_end":8507159,"line_start":134,"line_end":134,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507164,"byte_end":8507167,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507172,"byte_end":8507247,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507252,"byte_end":8507322,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507327,"byte_end":8507356,"line_start":138,"line_end":138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507361,"byte_end":8507364,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507369,"byte_end":8507416,"line_start":140,"line_end":140,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507421,"byte_end":8507424,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507429,"byte_end":8507443,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507448,"byte_end":8507451,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507456,"byte_end":8507469,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507474,"byte_end":8507506,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507511,"byte_end":8507514,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507519,"byte_end":8507535,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507540,"byte_end":8507543,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507548,"byte_end":8507566,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507571,"byte_end":8507610,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507615,"byte_end":8507685,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507690,"byte_end":8507693,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507698,"byte_end":8507737,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507742,"byte_end":8507812,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507817,"byte_end":8507880,"line_start":155,"line_end":155,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507885,"byte_end":8507894,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507899,"byte_end":8507902,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507907,"byte_end":8507921,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507926,"byte_end":8507931,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8507936,"byte_end":8507943,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8508303,"byte_end":8508314,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8508080,"byte_end":8508152,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8508157,"byte_end":8508160,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8508165,"byte_end":8508241,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8508246,"byte_end":8508291,"line_start":168,"line_end":168,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511176,"byte_end":8511184,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509161,"byte_end":8509233,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509238,"byte_end":8509241,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509246,"byte_end":8509316,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509321,"byte_end":8509397,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509402,"byte_end":8509446,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509451,"byte_end":8509454,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509459,"byte_end":8509534,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509539,"byte_end":8509615,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509620,"byte_end":8509685,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509690,"byte_end":8509745,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509750,"byte_end":8509753,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509758,"byte_end":8509829,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509834,"byte_end":8509909,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509914,"byte_end":8509953,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509958,"byte_end":8509961,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8509966,"byte_end":8510029,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510034,"byte_end":8510037,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510042,"byte_end":8510115,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510120,"byte_end":8510151,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510156,"byte_end":8510159,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510164,"byte_end":8510237,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510242,"byte_end":8510317,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510322,"byte_end":8510395,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510400,"byte_end":8510427,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510432,"byte_end":8510435,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510440,"byte_end":8510454,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510459,"byte_end":8510462,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510467,"byte_end":8510485,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510490,"byte_end":8510516,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510521,"byte_end":8510553,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510558,"byte_end":8510561,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510566,"byte_end":8510584,"line_start":228,"line_end":228,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510589,"byte_end":8510640,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510645,"byte_end":8510716,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510721,"byte_end":8510781,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510786,"byte_end":8510800,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510805,"byte_end":8510810,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510815,"byte_end":8510822,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510827,"byte_end":8510830,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510835,"byte_end":8510847,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510852,"byte_end":8510855,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510860,"byte_end":8510920,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510925,"byte_end":8510928,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8510933,"byte_end":8511003,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511008,"byte_end":8511081,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511086,"byte_end":8511164,"line_start":242,"line_end":242,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512268,"byte_end":8512278,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511542,"byte_end":8511603,"line_start":254,"line_end":254,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511608,"byte_end":8511611,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511616,"byte_end":8511689,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511694,"byte_end":8511728,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511733,"byte_end":8511736,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511741,"byte_end":8511755,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511760,"byte_end":8511763,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511768,"byte_end":8511786,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511791,"byte_end":8511823,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511828,"byte_end":8511831,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511836,"byte_end":8511852,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511857,"byte_end":8511912,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511917,"byte_end":8511920,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511925,"byte_end":8511943,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511948,"byte_end":8511987,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8511992,"byte_end":8512058,"line_start":269,"line_end":269,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512063,"byte_end":8512066,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512071,"byte_end":8512113,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512118,"byte_end":8512207,"line_start":272,"line_end":272,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512212,"byte_end":8512215,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512220,"byte_end":8512234,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512239,"byte_end":8512244,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512249,"byte_end":8512256,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513709,"byte_end":8513717,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512364,"byte_end":8512438,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512443,"byte_end":8512446,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512451,"byte_end":8512513,"line_start":283,"line_end":283,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512518,"byte_end":8512521,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512526,"byte_end":8512602,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512607,"byte_end":8512676,"line_start":286,"line_end":286,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512681,"byte_end":8512710,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512715,"byte_end":8512718,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512723,"byte_end":8512735,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512740,"byte_end":8512743,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512748,"byte_end":8512823,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512828,"byte_end":8512903,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512908,"byte_end":8512982,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8512987,"byte_end":8513062,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513067,"byte_end":8513075,"line_start":295,"line_end":295,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513080,"byte_end":8513083,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513088,"byte_end":8513102,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513107,"byte_end":8513110,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513115,"byte_end":8513128,"line_start":299,"line_end":299,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513133,"byte_end":8513186,"line_start":300,"line_end":300,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513191,"byte_end":8513194,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513199,"byte_end":8513217,"line_start":302,"line_end":302,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513222,"byte_end":8513243,"line_start":303,"line_end":303,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513248,"byte_end":8513326,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513331,"byte_end":8513378,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513383,"byte_end":8513386,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513391,"byte_end":8513447,"line_start":307,"line_end":307,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513452,"byte_end":8513478,"line_start":308,"line_end":308,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513483,"byte_end":8513514,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513519,"byte_end":8513563,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513568,"byte_end":8513585,"line_start":311,"line_end":311,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513590,"byte_end":8513643,"line_start":312,"line_end":312,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513648,"byte_end":8513661,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513666,"byte_end":8513675,"line_start":314,"line_end":314,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513680,"byte_end":8513685,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513690,"byte_end":8513697,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514398,"byte_end":8514401,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513786,"byte_end":8513844,"line_start":321,"line_end":321,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513849,"byte_end":8513852,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513857,"byte_end":8513917,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513922,"byte_end":8513925,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513930,"byte_end":8513962,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513967,"byte_end":8513970,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513975,"byte_end":8513989,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8513994,"byte_end":8513997,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514002,"byte_end":8514015,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514020,"byte_end":8514052,"line_start":330,"line_end":330,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514057,"byte_end":8514060,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514065,"byte_end":8514081,"line_start":332,"line_end":332,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514086,"byte_end":8514089,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514094,"byte_end":8514112,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514117,"byte_end":8514156,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514161,"byte_end":8514223,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514228,"byte_end":8514231,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514236,"byte_end":8514293,"line_start":338,"line_end":338,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514298,"byte_end":8514338,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514343,"byte_end":8514346,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514351,"byte_end":8514364,"line_start":341,"line_end":341,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514369,"byte_end":8514374,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514379,"byte_end":8514386,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515040,"byte_end":8515047,"line_start":369,"line_end":369,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514473,"byte_end":8514531,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514536,"byte_end":8514539,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514544,"byte_end":8514620,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514625,"byte_end":8514646,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514651,"byte_end":8514654,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514659,"byte_end":8514673,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514678,"byte_end":8514681,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514686,"byte_end":8514699,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514704,"byte_end":8514736,"line_start":356,"line_end":356,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514741,"byte_end":8514744,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514749,"byte_end":8514765,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514770,"byte_end":8514773,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514778,"byte_end":8514796,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514801,"byte_end":8514840,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514845,"byte_end":8514908,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514913,"byte_end":8514916,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514921,"byte_end":8514979,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514984,"byte_end":8514987,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8514992,"byte_end":8515006,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515011,"byte_end":8515016,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515021,"byte_end":8515028,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3298},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517320,"byte_end":8517328,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3300}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517118,"byte_end":8517194,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517195,"byte_end":8517242,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517243,"byte_end":8517291,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517743,"byte_end":8517754,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517506,"byte_end":8517579,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517584,"byte_end":8517599,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517604,"byte_end":8517607,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517612,"byte_end":8517681,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517686,"byte_end":8517731,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3304},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519313,"byte_end":8519321,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8518905,"byte_end":8518960,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8518961,"byte_end":8518964,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8518965,"byte_end":8519053,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519054,"byte_end":8519131,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519132,"byte_end":8519135,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519136,"byte_end":8519164,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519165,"byte_end":8519198,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519199,"byte_end":8519250,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519251,"byte_end":8519284,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3311},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520015,"byte_end":8520024,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519343,"byte_end":8519399,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519400,"byte_end":8519403,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519404,"byte_end":8519490,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519491,"byte_end":8519543,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519544,"byte_end":8519547,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519548,"byte_end":8519634,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519635,"byte_end":8519720,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519721,"byte_end":8519724,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519725,"byte_end":8519753,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519754,"byte_end":8519787,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519788,"byte_end":8519835,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519836,"byte_end":8519898,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519899,"byte_end":8519952,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8519953,"byte_end":8519986,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521081,"byte_end":8521090,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520198,"byte_end":8520272,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520277,"byte_end":8520350,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520355,"byte_end":8520369,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520374,"byte_end":8520377,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520382,"byte_end":8520455,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520460,"byte_end":8520463,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520468,"byte_end":8520482,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520487,"byte_end":8520490,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520495,"byte_end":8520508,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520513,"byte_end":8520531,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520536,"byte_end":8520566,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520571,"byte_end":8520574,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520579,"byte_end":8520612,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520617,"byte_end":8520620,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520625,"byte_end":8520643,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520648,"byte_end":8520687,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520692,"byte_end":8520761,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520766,"byte_end":8520814,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520819,"byte_end":8520849,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520854,"byte_end":8520857,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520862,"byte_end":8520884,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520889,"byte_end":8520934,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520939,"byte_end":8520957,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520962,"byte_end":8520965,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520970,"byte_end":8520984,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520989,"byte_end":8520994,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520999,"byte_end":8521006,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521011,"byte_end":8521014,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521019,"byte_end":8521069,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522507,"byte_end":8522511,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521215,"byte_end":8521285,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521290,"byte_end":8521359,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521364,"byte_end":8521403,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521408,"byte_end":8521411,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521416,"byte_end":8521484,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521489,"byte_end":8521492,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521497,"byte_end":8521537,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521542,"byte_end":8521545,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521550,"byte_end":8521564,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521569,"byte_end":8521572,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521577,"byte_end":8521590,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521595,"byte_end":8521625,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521630,"byte_end":8521656,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521661,"byte_end":8521687,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521692,"byte_end":8521695,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521700,"byte_end":8521718,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521723,"byte_end":8521774,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521779,"byte_end":8521807,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521812,"byte_end":8521881,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521886,"byte_end":8521934,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521939,"byte_end":8521942,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521947,"byte_end":8521976,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8521981,"byte_end":8522010,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522015,"byte_end":8522018,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522023,"byte_end":8522050,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522055,"byte_end":8522102,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522107,"byte_end":8522110,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522115,"byte_end":8522139,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522144,"byte_end":8522203,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522208,"byte_end":8522247,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522252,"byte_end":8522255,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522260,"byte_end":8522274,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522279,"byte_end":8522284,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522289,"byte_end":8522296,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522301,"byte_end":8522304,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522309,"byte_end":8522374,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522379,"byte_end":8522382,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522387,"byte_end":8522433,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522438,"byte_end":8522489,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525113,"byte_end":8525126,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3319}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524678,"byte_end":8524744,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524745,"byte_end":8524748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524749,"byte_end":8524836,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524837,"byte_end":8524921,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524922,"byte_end":8524925,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524926,"byte_end":8524954,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524955,"byte_end":8524998,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8524999,"byte_end":8525050,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525051,"byte_end":8525084,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3322},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525930,"byte_end":8525944,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3323},{"krate":0,"index":3324}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525159,"byte_end":8525226,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525227,"byte_end":8525230,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525231,"byte_end":8525317,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525318,"byte_end":8525370,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525371,"byte_end":8525374,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will close the TCP stream in both directions.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525375,"byte_end":8525448,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525449,"byte_end":8525452,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525453,"byte_end":8525539,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525540,"byte_end":8525625,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525626,"byte_end":8525629,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525630,"byte_end":8525658,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525659,"byte_end":8525702,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525703,"byte_end":8525750,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525751,"byte_end":8525813,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525814,"byte_end":8525867,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8525868,"byte_end":8525901,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3327},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8526888,"byte_end":8526900,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8526761,"byte_end":8526838,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8526839,"byte_end":8526859,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527484,"byte_end":8527491,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"fn (self, other: OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527221,"byte_end":8527290,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527295,"byte_end":8527359,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527364,"byte_end":8527416,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527421,"byte_end":8527424,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527429,"byte_end":8527472,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528482,"byte_end":8528491,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527598,"byte_end":8527672,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527677,"byte_end":8527750,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527755,"byte_end":8527769,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527774,"byte_end":8527777,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527782,"byte_end":8527855,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527860,"byte_end":8527863,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527868,"byte_end":8527882,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527887,"byte_end":8527890,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527895,"byte_end":8527908,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527913,"byte_end":8527931,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527936,"byte_end":8527966,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527971,"byte_end":8527974,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527979,"byte_end":8528012,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528017,"byte_end":8528020,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528025,"byte_end":8528043,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528048,"byte_end":8528087,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528092,"byte_end":8528157,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528162,"byte_end":8528215,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528220,"byte_end":8528250,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528255,"byte_end":8528258,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528263,"byte_end":8528285,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528290,"byte_end":8528335,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528340,"byte_end":8528358,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528363,"byte_end":8528366,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528371,"byte_end":8528385,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528390,"byte_end":8528395,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528400,"byte_end":8528407,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528412,"byte_end":8528415,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528420,"byte_end":8528470,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529913,"byte_end":8529917,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528620,"byte_end":8528690,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528695,"byte_end":8528764,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528769,"byte_end":8528808,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528813,"byte_end":8528816,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528821,"byte_end":8528889,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528894,"byte_end":8528897,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528902,"byte_end":8528942,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528947,"byte_end":8528950,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528955,"byte_end":8528969,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528974,"byte_end":8528977,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8528982,"byte_end":8528995,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529000,"byte_end":8529030,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529035,"byte_end":8529061,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529066,"byte_end":8529092,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529097,"byte_end":8529100,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529105,"byte_end":8529123,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529128,"byte_end":8529179,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529184,"byte_end":8529212,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529217,"byte_end":8529282,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529287,"byte_end":8529340,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529345,"byte_end":8529348,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529353,"byte_end":8529382,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529387,"byte_end":8529416,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529421,"byte_end":8529424,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529429,"byte_end":8529456,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529461,"byte_end":8529508,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529513,"byte_end":8529516,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529521,"byte_end":8529545,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529550,"byte_end":8529609,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529614,"byte_end":8529653,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529658,"byte_end":8529661,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529666,"byte_end":8529680,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529685,"byte_end":8529690,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529695,"byte_end":8529702,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529707,"byte_end":8529710,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529715,"byte_end":8529780,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529785,"byte_end":8529788,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529793,"byte_end":8529839,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8529844,"byte_end":8529895,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530650,"byte_end":8530657,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"fn (self, other: OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530387,"byte_end":8530456,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530461,"byte_end":8530525,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530530,"byte_end":8530582,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530587,"byte_end":8530590,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530595,"byte_end":8530638,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530943,"byte_end":8530949,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the stream until the read half\n is dropped. If the read half has already been dropped, this closes the\n stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the stream until the read half","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530762,"byte_end":8530836,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ is dropped. If the read half has already been dropped, this closes the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530841,"byte_end":8530915,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530920,"byte_end":8530931,"line_start":214,"line_end":214,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534238,"byte_end":8534247,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3334}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535541,"byte_end":8535548,"line_start":97,"line_end":97,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addr: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534326,"byte_end":8534370,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534375,"byte_end":8534378,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534383,"byte_end":8534453,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ `ToSocketAddrs` trait can be supplied for the address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534458,"byte_end":8534516,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534521,"byte_end":8534524,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534529,"byte_end":8534605,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534610,"byte_end":8534679,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534684,"byte_end":8534760,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534765,"byte_end":8534824,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534829,"byte_end":8534832,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534837,"byte_end":8534851,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534856,"byte_end":8534859,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534864,"byte_end":8534877,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534882,"byte_end":8534912,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534917,"byte_end":8534943,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534948,"byte_end":8534974,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534979,"byte_end":8534982,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534987,"byte_end":8535005,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535010,"byte_end":8535061,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535066,"byte_end":8535094,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535099,"byte_end":8535168,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535173,"byte_end":8535176,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535181,"byte_end":8535208,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535213,"byte_end":8535262,"line_start":87,"line_end":87,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535267,"byte_end":8535270,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535275,"byte_end":8535289,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535294,"byte_end":8535299,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535304,"byte_end":8535311,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535316,"byte_end":8535319,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535324,"byte_end":8535395,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535400,"byte_end":8535403,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535408,"byte_end":8535465,"line_start":95,"line_end":95,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8535470,"byte_end":8535523,"line_start":96,"line_end":96,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537981,"byte_end":8537989,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537014,"byte_end":8537071,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537076,"byte_end":8537079,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537084,"byte_end":8537159,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537164,"byte_end":8537237,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537242,"byte_end":8537245,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537250,"byte_end":8537264,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537269,"byte_end":8537272,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537277,"byte_end":8537295,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537300,"byte_end":8537326,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537331,"byte_end":8537361,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537366,"byte_end":8537369,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537374,"byte_end":8537392,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537397,"byte_end":8537448,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537453,"byte_end":8537527,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537532,"byte_end":8537586,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537591,"byte_end":8537605,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537610,"byte_end":8537615,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537620,"byte_end":8537627,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537632,"byte_end":8537635,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537640,"byte_end":8537652,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537657,"byte_end":8537660,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537665,"byte_end":8537725,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537730,"byte_end":8537733,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537738,"byte_end":8537808,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537813,"byte_end":8537886,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8537891,"byte_end":8537969,"line_start":167,"line_end":167,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8538386,"byte_end":8538397,"line_start":178,"line_end":178,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539545,"byte_end":8539555,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539146,"byte_end":8539205,"line_start":198,"line_end":198,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539210,"byte_end":8539213,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539218,"byte_end":8539232,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539237,"byte_end":8539240,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539245,"byte_end":8539258,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539263,"byte_end":8539293,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539298,"byte_end":8539301,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539306,"byte_end":8539370,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539375,"byte_end":8539436,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539441,"byte_end":8539444,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539449,"byte_end":8539492,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539497,"byte_end":8539509,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539514,"byte_end":8539521,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539526,"byte_end":8539533,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540044,"byte_end":8540053,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539641,"byte_end":8539705,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539710,"byte_end":8539713,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539718,"byte_end":8539732,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539737,"byte_end":8539740,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539745,"byte_end":8539758,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539763,"byte_end":8539793,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539798,"byte_end":8539801,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539806,"byte_end":8539870,"line_start":223,"line_end":223,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539875,"byte_end":8539936,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539941,"byte_end":8539944,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539949,"byte_end":8539991,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8539996,"byte_end":8540008,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540013,"byte_end":8540020,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540025,"byte_end":8540032,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541211,"byte_end":8541220,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540138,"byte_end":8540213,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540218,"byte_end":8540291,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540296,"byte_end":8540310,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540315,"byte_end":8540318,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540323,"byte_end":8540341,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540346,"byte_end":8540349,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540354,"byte_end":8540379,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540384,"byte_end":8540387,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540392,"byte_end":8540443,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540448,"byte_end":8540531,"line_start":243,"line_end":243,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540536,"byte_end":8540591,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540596,"byte_end":8540599,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540604,"byte_end":8540616,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540621,"byte_end":8540624,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540629,"byte_end":8540704,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540709,"byte_end":8540712,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540717,"byte_end":8540731,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540736,"byte_end":8540739,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540744,"byte_end":8540757,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540762,"byte_end":8540780,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540785,"byte_end":8540815,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540820,"byte_end":8540823,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540828,"byte_end":8540861,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540866,"byte_end":8540869,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540874,"byte_end":8540892,"line_start":258,"line_end":258,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540897,"byte_end":8540936,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8540941,"byte_end":8541010,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541015,"byte_end":8541045,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541050,"byte_end":8541053,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541058,"byte_end":8541080,"line_start":263,"line_end":263,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541085,"byte_end":8541127,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541132,"byte_end":8541150,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541155,"byte_end":8541158,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541163,"byte_end":8541177,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541182,"byte_end":8541187,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541192,"byte_end":8541199,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543132,"byte_end":8543136,"line_start":328,"line_end":328,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541881,"byte_end":8541951,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8541956,"byte_end":8542025,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542030,"byte_end":8542069,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542074,"byte_end":8542077,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542082,"byte_end":8542156,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542161,"byte_end":8542221,"line_start":296,"line_end":296,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542226,"byte_end":8542229,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542234,"byte_end":8542248,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542253,"byte_end":8542256,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542261,"byte_end":8542274,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542279,"byte_end":8542309,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542314,"byte_end":8542340,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542345,"byte_end":8542371,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542376,"byte_end":8542379,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542384,"byte_end":8542402,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542407,"byte_end":8542458,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542463,"byte_end":8542491,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542496,"byte_end":8542565,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542570,"byte_end":8542573,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542578,"byte_end":8542607,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542612,"byte_end":8542641,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542646,"byte_end":8542649,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542654,"byte_end":8542681,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542686,"byte_end":8542730,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542735,"byte_end":8542738,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542743,"byte_end":8542767,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542772,"byte_end":8542828,"line_start":317,"line_end":317,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542833,"byte_end":8542872,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542877,"byte_end":8542880,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542885,"byte_end":8542899,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542904,"byte_end":8542909,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542914,"byte_end":8542921,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542926,"byte_end":8542929,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8542934,"byte_end":8542999,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543004,"byte_end":8543007,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543012,"byte_end":8543058,"line_start":326,"line_end":326,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543063,"byte_end":8543114,"line_start":327,"line_end":327,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544005,"byte_end":8544013,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543250,"byte_end":8543316,"line_start":332,"line_end":332,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543321,"byte_end":8543324,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543329,"byte_end":8543401,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543406,"byte_end":8543475,"line_start":335,"line_end":335,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543480,"byte_end":8543513,"line_start":336,"line_end":336,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543518,"byte_end":8543521,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543526,"byte_end":8543540,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543545,"byte_end":8543548,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543553,"byte_end":8543566,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543571,"byte_end":8543601,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543606,"byte_end":8543632,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543637,"byte_end":8543664,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543669,"byte_end":8543672,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543677,"byte_end":8543695,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543700,"byte_end":8543751,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543756,"byte_end":8543784,"line_start":347,"line_end":347,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543789,"byte_end":8543854,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543859,"byte_end":8543862,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543867,"byte_end":8543897,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543902,"byte_end":8543944,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543949,"byte_end":8543952,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543957,"byte_end":8543971,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543976,"byte_end":8543981,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8543986,"byte_end":8543993,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544639,"byte_end":8544646,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544107,"byte_end":8544169,"line_start":360,"line_end":360,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544174,"byte_end":8544177,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544182,"byte_end":8544246,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544251,"byte_end":8544254,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544259,"byte_end":8544302,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544307,"byte_end":8544310,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544315,"byte_end":8544329,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544334,"byte_end":8544337,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544342,"byte_end":8544355,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544360,"byte_end":8544390,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544395,"byte_end":8544398,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544403,"byte_end":8544467,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544472,"byte_end":8544533,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544538,"byte_end":8544541,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544546,"byte_end":8544586,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544591,"byte_end":8544603,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544608,"byte_end":8544615,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544620,"byte_end":8544627,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545453,"byte_end":8545464,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544723,"byte_end":8544785,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544790,"byte_end":8544793,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544798,"byte_end":8544867,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544872,"byte_end":8544945,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8544950,"byte_end":8545023,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545028,"byte_end":8545103,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545108,"byte_end":8545126,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545131,"byte_end":8545134,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545139,"byte_end":8545153,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545158,"byte_end":8545161,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545166,"byte_end":8545179,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545184,"byte_end":8545214,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545219,"byte_end":8545222,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545227,"byte_end":8545291,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545296,"byte_end":8545357,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545362,"byte_end":8545365,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545370,"byte_end":8545400,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545405,"byte_end":8545417,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545422,"byte_end":8545429,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545434,"byte_end":8545441,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546131,"byte_end":8546147,"line_start":424,"line_end":424,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545565,"byte_end":8545625,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545630,"byte_end":8545633,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545638,"byte_end":8545711,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545716,"byte_end":8545719,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545724,"byte_end":8545785,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545790,"byte_end":8545793,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545798,"byte_end":8545812,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545817,"byte_end":8545820,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545825,"byte_end":8545838,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545843,"byte_end":8545873,"line_start":415,"line_end":415,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545878,"byte_end":8545881,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545886,"byte_end":8545950,"line_start":417,"line_end":417,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8545955,"byte_end":8546016,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546021,"byte_end":8546024,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546029,"byte_end":8546078,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546083,"byte_end":8546095,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546100,"byte_end":8546107,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546112,"byte_end":8546119,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546739,"byte_end":8546759,"line_start":445,"line_end":445,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546234,"byte_end":8546294,"line_start":428,"line_end":428,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546299,"byte_end":8546302,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546307,"byte_end":8546379,"line_start":430,"line_end":430,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546384,"byte_end":8546404,"line_start":431,"line_end":431,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546409,"byte_end":8546412,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546417,"byte_end":8546431,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546436,"byte_end":8546439,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546444,"byte_end":8546457,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546462,"byte_end":8546492,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546497,"byte_end":8546500,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546505,"byte_end":8546569,"line_start":438,"line_end":438,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546574,"byte_end":8546635,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546640,"byte_end":8546643,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546648,"byte_end":8546686,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546691,"byte_end":8546703,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546708,"byte_end":8546715,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546720,"byte_end":8546727,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547430,"byte_end":8547446,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546864,"byte_end":8546924,"line_start":449,"line_end":449,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546929,"byte_end":8546932,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8546937,"byte_end":8547010,"line_start":451,"line_end":451,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547015,"byte_end":8547018,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547023,"byte_end":8547084,"line_start":453,"line_end":453,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547089,"byte_end":8547092,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547097,"byte_end":8547111,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547116,"byte_end":8547119,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547124,"byte_end":8547137,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547142,"byte_end":8547172,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547177,"byte_end":8547180,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547185,"byte_end":8547249,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547254,"byte_end":8547315,"line_start":461,"line_end":461,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547320,"byte_end":8547323,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547328,"byte_end":8547377,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547382,"byte_end":8547394,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547399,"byte_end":8547406,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547411,"byte_end":8547418,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548035,"byte_end":8548055,"line_start":488,"line_end":488,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547533,"byte_end":8547593,"line_start":471,"line_end":471,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547598,"byte_end":8547601,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547606,"byte_end":8547680,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547685,"byte_end":8547700,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547705,"byte_end":8547708,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547713,"byte_end":8547727,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547732,"byte_end":8547735,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547740,"byte_end":8547753,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547758,"byte_end":8547788,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547793,"byte_end":8547796,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547801,"byte_end":8547865,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547870,"byte_end":8547931,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547936,"byte_end":8547939,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547944,"byte_end":8547982,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8547987,"byte_end":8547999,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548004,"byte_end":8548011,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548016,"byte_end":8548023,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548757,"byte_end":8548766,"line_start":511,"line_end":511,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548160,"byte_end":8548236,"line_start":492,"line_end":492,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548241,"byte_end":8548279,"line_start":493,"line_end":493,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548284,"byte_end":8548287,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548292,"byte_end":8548358,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548363,"byte_end":8548366,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548371,"byte_end":8548418,"line_start":497,"line_end":497,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548423,"byte_end":8548426,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548431,"byte_end":8548445,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548450,"byte_end":8548453,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548458,"byte_end":8548471,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548476,"byte_end":8548506,"line_start":502,"line_end":502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548511,"byte_end":8548514,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548519,"byte_end":8548583,"line_start":504,"line_end":504,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548588,"byte_end":8548649,"line_start":505,"line_end":505,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548654,"byte_end":8548657,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548662,"byte_end":8548704,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548709,"byte_end":8548721,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548726,"byte_end":8548733,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548738,"byte_end":8548745,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549797,"byte_end":8549810,"line_start":540,"line_end":540,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548857,"byte_end":8548931,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548936,"byte_end":8548939,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8548944,"byte_end":8549011,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549016,"byte_end":8549090,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549095,"byte_end":8549157,"line_start":519,"line_end":519,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549162,"byte_end":8549165,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549170,"byte_end":8549244,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549249,"byte_end":8549324,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549329,"byte_end":8549353,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549358,"byte_end":8549361,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549366,"byte_end":8549429,"line_start":525,"line_end":525,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549434,"byte_end":8549468,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549473,"byte_end":8549476,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549481,"byte_end":8549495,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549500,"byte_end":8549503,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549508,"byte_end":8549521,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549526,"byte_end":8549556,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549561,"byte_end":8549564,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549569,"byte_end":8549633,"line_start":533,"line_end":533,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549638,"byte_end":8549699,"line_start":534,"line_end":534,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549704,"byte_end":8549707,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549712,"byte_end":8549744,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549749,"byte_end":8549761,"line_start":537,"line_end":537,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549766,"byte_end":8549773,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549778,"byte_end":8549785,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550441,"byte_end":8550444,"line_start":562,"line_end":562,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549929,"byte_end":8549987,"line_start":544,"line_end":544,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8549992,"byte_end":8549995,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550000,"byte_end":8550060,"line_start":546,"line_end":546,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550065,"byte_end":8550068,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550073,"byte_end":8550108,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550113,"byte_end":8550116,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550121,"byte_end":8550135,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550140,"byte_end":8550143,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550148,"byte_end":8550161,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550166,"byte_end":8550196,"line_start":553,"line_end":553,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550201,"byte_end":8550204,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550209,"byte_end":8550273,"line_start":555,"line_end":555,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550278,"byte_end":8550339,"line_start":556,"line_end":556,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550344,"byte_end":8550347,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550352,"byte_end":8550388,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550393,"byte_end":8550405,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550410,"byte_end":8550417,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550422,"byte_end":8550429,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551011,"byte_end":8551018,"line_start":583,"line_end":583,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550516,"byte_end":8550574,"line_start":566,"line_end":566,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550579,"byte_end":8550582,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550587,"byte_end":8550663,"line_start":568,"line_end":568,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550668,"byte_end":8550689,"line_start":569,"line_end":569,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550694,"byte_end":8550697,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550702,"byte_end":8550716,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550721,"byte_end":8550724,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550729,"byte_end":8550742,"line_start":573,"line_end":573,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550747,"byte_end":8550777,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550782,"byte_end":8550785,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550790,"byte_end":8550854,"line_start":576,"line_end":576,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550859,"byte_end":8550920,"line_start":577,"line_end":577,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550925,"byte_end":8550928,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550933,"byte_end":8550958,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550963,"byte_end":8550975,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550980,"byte_end":8550987,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8550992,"byte_end":8550999,"line_start":582,"line_end":582,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551660,"byte_end":8551666,"line_start":606,"line_end":606,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551106,"byte_end":8551178,"line_start":587,"line_end":587,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551183,"byte_end":8551194,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551199,"byte_end":8551202,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551207,"byte_end":8551270,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551275,"byte_end":8551278,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551283,"byte_end":8551324,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551329,"byte_end":8551332,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551337,"byte_end":8551351,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551356,"byte_end":8551359,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551364,"byte_end":8551377,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551382,"byte_end":8551412,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551417,"byte_end":8551420,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551425,"byte_end":8551489,"line_start":599,"line_end":599,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551494,"byte_end":8551555,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551560,"byte_end":8551563,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551568,"byte_end":8551607,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551612,"byte_end":8551624,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551629,"byte_end":8551636,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551641,"byte_end":8551648,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552608,"byte_end":8552618,"line_start":634,"line_end":634,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551754,"byte_end":8551824,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551829,"byte_end":8551840,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551845,"byte_end":8551848,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551853,"byte_end":8551928,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8551933,"byte_end":8551996,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552001,"byte_end":8552072,"line_start":615,"line_end":615,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552077,"byte_end":8552094,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552099,"byte_end":8552102,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552107,"byte_end":8552180,"line_start":618,"line_end":618,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552185,"byte_end":8552261,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552266,"byte_end":8552282,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552287,"byte_end":8552290,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552295,"byte_end":8552309,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552314,"byte_end":8552317,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552322,"byte_end":8552335,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552340,"byte_end":8552370,"line_start":625,"line_end":625,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552375,"byte_end":8552378,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552383,"byte_end":8552447,"line_start":627,"line_end":627,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552452,"byte_end":8552513,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552518,"byte_end":8552521,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552526,"byte_end":8552555,"line_start":630,"line_end":630,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552560,"byte_end":8552572,"line_start":631,"line_end":631,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552577,"byte_end":8552584,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552589,"byte_end":8552596,"line_start":633,"line_end":633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553058,"byte_end":8553063,"line_start":645,"line_end":645,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552722,"byte_end":8552799,"line_start":638,"line_end":638,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552804,"byte_end":8552850,"line_start":639,"line_end":639,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552855,"byte_end":8552858,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552863,"byte_end":8552942,"line_start":641,"line_end":641,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552947,"byte_end":8552990,"line_start":642,"line_end":642,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8552995,"byte_end":8552998,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553003,"byte_end":8553046,"line_start":644,"line_end":644,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553471,"byte_end":8553481,"line_start":656,"line_end":656,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"fn (self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553141,"byte_end":8553218,"line_start":649,"line_end":649,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553223,"byte_end":8553269,"line_start":650,"line_end":650,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553274,"byte_end":8553277,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553282,"byte_end":8553360,"line_start":652,"line_end":652,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553365,"byte_end":8553413,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553418,"byte_end":8553421,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8553426,"byte_end":8553459,"line_start":655,"line_end":655,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3335},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3457}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23366,"byte_end":23389,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8560734,"byte_end":8560756,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3462},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561212,"byte_end":8561221,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3463}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23366,"byte_end":23389,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561419,"byte_end":8561423,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561300,"byte_end":8561372,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561377,"byte_end":8561401,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563126,"byte_end":8563134,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn (socket: net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562258,"byte_end":8562330,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562335,"byte_end":8562338,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562343,"byte_end":8562416,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562421,"byte_end":8562496,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562501,"byte_end":8562548,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562553,"byte_end":8562556,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562561,"byte_end":8562634,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562639,"byte_end":8562714,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562719,"byte_end":8562772,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562777,"byte_end":8562780,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562785,"byte_end":8562797,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562802,"byte_end":8562805,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562810,"byte_end":8562870,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562875,"byte_end":8562878,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562883,"byte_end":8562953,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8562958,"byte_end":8563031,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563036,"byte_end":8563114,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563518,"byte_end":8563523,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"fn (self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563326,"byte_end":8563403,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563408,"byte_end":8563481,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563486,"byte_end":8563506,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563658,"byte_end":8563668,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563587,"byte_end":8563646,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563940,"byte_end":8563947,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563754,"byte_end":8563828,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563833,"byte_end":8563906,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8563911,"byte_end":8563922,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564879,"byte_end":8564883,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564481,"byte_end":8564579,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564584,"byte_end":8564655,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564660,"byte_end":8564663,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564668,"byte_end":8564751,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564756,"byte_end":8564816,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564821,"byte_end":8564824,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8564829,"byte_end":8564861,"line_start":114,"line_end":114,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8565610,"byte_end":8565619,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566632,"byte_end":8566636,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8565997,"byte_end":8566076,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566081,"byte_end":8566165,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566170,"byte_end":8566202,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566207,"byte_end":8566210,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566215,"byte_end":8566296,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566301,"byte_end":8566384,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566389,"byte_end":8566423,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566428,"byte_end":8566431,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566436,"byte_end":8566519,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566524,"byte_end":8566569,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566574,"byte_end":8566577,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566582,"byte_end":8566614,"line_start":153,"line_end":153,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8566776,"byte_end":8566785,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567504,"byte_end":8567511,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&mut self, buf: &[u8], target: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567213,"byte_end":8567285,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567290,"byte_end":8567361,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567366,"byte_end":8567369,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567374,"byte_end":8567450,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567455,"byte_end":8567486,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8567983,"byte_end":8567995,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8], target: &SocketAddr) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568834,"byte_end":8568843,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568444,"byte_end":8568523,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568528,"byte_end":8568595,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568600,"byte_end":8568603,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568608,"byte_end":8568686,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568691,"byte_end":8568769,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8568774,"byte_end":8568816,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569002,"byte_end":8569016,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569713,"byte_end":8569722,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569501,"byte_end":8569565,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569570,"byte_end":8569573,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569578,"byte_end":8569644,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569649,"byte_end":8569652,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569657,"byte_end":8569701,"line_start":238,"line_end":238,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569978,"byte_end":8569991,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569801,"byte_end":8569865,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569870,"byte_end":8569873,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569878,"byte_end":8569949,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8569954,"byte_end":8569966,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570325,"byte_end":8570342,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570084,"byte_end":8570153,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570158,"byte_end":8570161,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570166,"byte_end":8570240,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570245,"byte_end":8570248,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570253,"byte_end":8570313,"line_start":255,"line_end":255,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570682,"byte_end":8570703,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570429,"byte_end":8570498,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570503,"byte_end":8570506,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570511,"byte_end":8570585,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570590,"byte_end":8570593,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570598,"byte_end":8570608,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570613,"byte_end":8570616,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570621,"byte_end":8570670,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571041,"byte_end":8571057,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570804,"byte_end":8570872,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570877,"byte_end":8570880,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570885,"byte_end":8570958,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570963,"byte_end":8570966,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8570971,"byte_end":8571029,"line_start":275,"line_end":275,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571536,"byte_end":8571556,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571142,"byte_end":8571210,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571215,"byte_end":8571218,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571223,"byte_end":8571293,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571298,"byte_end":8571372,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571377,"byte_end":8571439,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571444,"byte_end":8571447,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571452,"byte_end":8571462,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571467,"byte_end":8571470,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571475,"byte_end":8571524,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571900,"byte_end":8571917,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571657,"byte_end":8571728,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571733,"byte_end":8571736,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571741,"byte_end":8571815,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571820,"byte_end":8571823,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8571828,"byte_end":8571888,"line_start":297,"line_end":297,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572261,"byte_end":8572282,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572004,"byte_end":8572075,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572080,"byte_end":8572083,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572088,"byte_end":8572164,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572169,"byte_end":8572172,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572177,"byte_end":8572187,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572192,"byte_end":8572195,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572200,"byte_end":8572249,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572571,"byte_end":8572574,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572383,"byte_end":8572441,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572446,"byte_end":8572449,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572454,"byte_end":8572514,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572519,"byte_end":8572522,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572527,"byte_end":8572559,"line_start":317,"line_end":317,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572831,"byte_end":8572838,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572646,"byte_end":8572704,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572709,"byte_end":8572712,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572717,"byte_end":8572793,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572798,"byte_end":8572819,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573356,"byte_end":8573373,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572926,"byte_end":8572984,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572989,"byte_end":8572992,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8572997,"byte_end":8573071,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573076,"byte_end":8573149,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573154,"byte_end":8573226,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573231,"byte_end":8573301,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573306,"byte_end":8573344,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573838,"byte_end":8573855,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573522,"byte_end":8573582,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573587,"byte_end":8573590,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573595,"byte_end":8573669,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573674,"byte_end":8573747,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573752,"byte_end":8573826,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574217,"byte_end":8574235,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8573998,"byte_end":8574057,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574062,"byte_end":8574065,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574070,"byte_end":8574140,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574145,"byte_end":8574148,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574153,"byte_end":8574205,"line_start":354,"line_end":354,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574606,"byte_end":8574624,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574385,"byte_end":8574446,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574451,"byte_end":8574454,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574459,"byte_end":8574529,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574534,"byte_end":8574537,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574542,"byte_end":8574594,"line_start":363,"line_end":363,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3464},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577254,"byte_end":8577262,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577076,"byte_end":8577135,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577136,"byte_end":8577139,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](#method.send_to) or [`send`](#method.send) to send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577140,"byte_end":8577210,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ datagrams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577211,"byte_end":8577225,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3469},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577466,"byte_end":8577474,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577281,"byte_end":8577340,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577341,"byte_end":8577344,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](#method.recv_from) or [`recv`](#method.recv) to receive","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577345,"byte_end":8577422,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ datagrams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577423,"byte_end":8577437,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3474},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577816,"byte_end":8577828,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577687,"byte_end":8577764,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577765,"byte_end":8577787,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578865,"byte_end":8578872,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"fn (self, other: SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578650,"byte_end":8578721,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578726,"byte_end":8578792,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578797,"byte_end":8578853,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579363,"byte_end":8579372,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578973,"byte_end":8579052,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579057,"byte_end":8579124,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579129,"byte_end":8579132,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579137,"byte_end":8579215,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579220,"byte_end":8579298,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579303,"byte_end":8579345,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580152,"byte_end":8580156,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579507,"byte_end":8579586,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579591,"byte_end":8579675,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579680,"byte_end":8579712,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579717,"byte_end":8579720,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579725,"byte_end":8579806,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579811,"byte_end":8579894,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579899,"byte_end":8579933,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579938,"byte_end":8579941,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8579946,"byte_end":8580029,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580034,"byte_end":8580079,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580084,"byte_end":8580087,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580092,"byte_end":8580134,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580505,"byte_end":8580512,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"fn (self, other: RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580290,"byte_end":8580361,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580366,"byte_end":8580432,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580437,"byte_end":8580493,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580904,"byte_end":8580911,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"fn (&mut self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580613,"byte_end":8580685,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580690,"byte_end":8580761,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580766,"byte_end":8580769,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580774,"byte_end":8580850,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580855,"byte_end":8580886,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581463,"byte_end":8581467,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581055,"byte_end":8581153,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581158,"byte_end":8581229,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581234,"byte_end":8581237,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581242,"byte_end":8581325,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581330,"byte_end":8581390,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581395,"byte_end":8581398,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581403,"byte_end":8581445,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3480},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3542},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3629},{"krate":0,"index":3632},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3719}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8581775,"byte_end":8581811,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582449,"byte_end":8582461,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3724}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582618,"byte_end":8582622,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582545,"byte_end":8582606,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583085,"byte_end":8583089,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582805,"byte_end":8582854,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582859,"byte_end":8582862,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582867,"byte_end":8582938,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582943,"byte_end":8583013,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583018,"byte_end":8583073,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583915,"byte_end":8583923,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn (datagram: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583300,"byte_end":8583367,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583372,"byte_end":8583419,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583424,"byte_end":8583427,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583432,"byte_end":8583502,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583507,"byte_end":8583561,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583566,"byte_end":8583569,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583574,"byte_end":8583586,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583591,"byte_end":8583594,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583599,"byte_end":8583659,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583664,"byte_end":8583667,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583672,"byte_end":8583742,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583747,"byte_end":8583820,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8583825,"byte_end":8583903,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584374,"byte_end":8584381,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584295,"byte_end":8584362,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584734,"byte_end":8584741,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584515,"byte_end":8584564,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584569,"byte_end":8584572,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584577,"byte_end":8584649,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584654,"byte_end":8584722,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584913,"byte_end":8584917,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8584845,"byte_end":8584895,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8586112,"byte_end":8586116,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8586060,"byte_end":8586094,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8586794,"byte_end":8586801,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&mut self, buf: &[u8], target: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8586722,"byte_end":8586776,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8587522,"byte_end":8587531,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8587470,"byte_end":8587504,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588258,"byte_end":8588268,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588187,"byte_end":8588246,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588484,"byte_end":8588493,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588354,"byte_end":8588400,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588405,"byte_end":8588408,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588413,"byte_end":8588472,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588637,"byte_end":8588647,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588578,"byte_end":8588625,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589021,"byte_end":8589029,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588740,"byte_end":8588806,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588811,"byte_end":8588814,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588819,"byte_end":8588887,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588892,"byte_end":8588962,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8588967,"byte_end":8589009,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3725},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590407,"byte_end":8590415,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3727}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590306,"byte_end":8590329,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590347,"byte_end":8590395,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590924,"byte_end":8590935,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590595,"byte_end":8590670,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590675,"byte_end":8590690,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590695,"byte_end":8590698,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590703,"byte_end":8590773,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590778,"byte_end":8590853,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590858,"byte_end":8590912,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593261,"byte_end":8593273,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3732}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593772,"byte_end":8593776,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593357,"byte_end":8593418,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593423,"byte_end":8593426,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593431,"byte_end":8593443,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593448,"byte_end":8593451,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593456,"byte_end":8593516,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593521,"byte_end":8593524,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593529,"byte_end":8593599,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593604,"byte_end":8593677,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593682,"byte_end":8593760,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594620,"byte_end":8594628,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn (listener: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594005,"byte_end":8594072,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594077,"byte_end":8594124,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594129,"byte_end":8594132,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594137,"byte_end":8594207,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594212,"byte_end":8594266,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594271,"byte_end":8594274,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594279,"byte_end":8594291,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594296,"byte_end":8594299,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594304,"byte_end":8594364,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594369,"byte_end":8594372,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594377,"byte_end":8594447,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594452,"byte_end":8594525,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594530,"byte_end":8594608,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594915,"byte_end":8594925,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8594849,"byte_end":8594903,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8595070,"byte_end":8595080,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8595011,"byte_end":8595058,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8595246,"byte_end":8595252,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&mut self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8595173,"byte_end":8595228,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597721,"byte_end":8597729,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596357,"byte_end":8596431,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596436,"byte_end":8596439,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596444,"byte_end":8596507,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596512,"byte_end":8596515,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596520,"byte_end":8596596,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596601,"byte_end":8596670,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596675,"byte_end":8596704,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596709,"byte_end":8596712,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596717,"byte_end":8596729,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596734,"byte_end":8596737,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596742,"byte_end":8596817,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596822,"byte_end":8596897,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596902,"byte_end":8596976,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8596981,"byte_end":8597056,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597061,"byte_end":8597069,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597074,"byte_end":8597077,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597082,"byte_end":8597096,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597101,"byte_end":8597104,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597109,"byte_end":8597122,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597127,"byte_end":8597160,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597165,"byte_end":8597198,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597203,"byte_end":8597206,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597211,"byte_end":8597229,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597234,"byte_end":8597255,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597260,"byte_end":8597338,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597343,"byte_end":8597390,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597395,"byte_end":8597398,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597403,"byte_end":8597459,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597464,"byte_end":8597490,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597495,"byte_end":8597526,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597531,"byte_end":8597575,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597580,"byte_end":8597597,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597602,"byte_end":8597655,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597660,"byte_end":8597673,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597678,"byte_end":8597687,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597692,"byte_end":8597697,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597702,"byte_end":8597709,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8599840,"byte_end":8599848,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8599779,"byte_end":8599811,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3740},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8599933,"byte_end":8599942,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8599871,"byte_end":8599904,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3747},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8601908,"byte_end":8601918,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3748}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602240,"byte_end":8602247,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8601998,"byte_end":8602041,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602046,"byte_end":8602049,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602054,"byte_end":8602125,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602130,"byte_end":8602206,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602211,"byte_end":8602222,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603132,"byte_end":8603140,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602523,"byte_end":8602588,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602593,"byte_end":8602638,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602643,"byte_end":8602646,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602651,"byte_end":8602719,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602724,"byte_end":8602778,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602783,"byte_end":8602786,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602791,"byte_end":8602803,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602808,"byte_end":8602811,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602816,"byte_end":8602876,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602881,"byte_end":8602884,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602889,"byte_end":8602959,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8602964,"byte_end":8603037,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603042,"byte_end":8603120,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603624,"byte_end":8603628,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603344,"byte_end":8603393,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603398,"byte_end":8603401,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603406,"byte_end":8603477,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603482,"byte_end":8603552,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603557,"byte_end":8603612,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604069,"byte_end":8604079,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8603989,"byte_end":8604057,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604246,"byte_end":8604255,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604165,"byte_end":8604234,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604434,"byte_end":8604443,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"fn (&self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604340,"byte_end":8604422,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604579,"byte_end":8604589,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604520,"byte_end":8604567,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604963,"byte_end":8604971,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604682,"byte_end":8604748,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604753,"byte_end":8604756,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604761,"byte_end":8604829,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604834,"byte_end":8604904,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8604909,"byte_end":8604951,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605205,"byte_end":8605210,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605065,"byte_end":8605142,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605147,"byte_end":8605193,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3749},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608791,"byte_end":8608796,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3751}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608700,"byte_end":8608728,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3750},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608844,"byte_end":8608847,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3749},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608803,"byte_end":8608835,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3751},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608902,"byte_end":8608905,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3749},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8608860,"byte_end":8608893,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":538},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91180,"byte_end":91186,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91117,"byte_end":91170,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":539},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91239,"byte_end":91244,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91201,"byte_end":91229,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":549},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":3867}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102835,"byte_end":102853,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102855,"byte_end":102902,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102903,"byte_end":102906,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102907,"byte_end":102983,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102984,"byte_end":103061,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103062,"byte_end":103114,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103115,"byte_end":103118,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103119,"byte_end":103126,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103127,"byte_end":103152,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103153,"byte_end":103179,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103180,"byte_end":103187,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103188,"byte_end":103191,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103192,"byte_end":103266,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3872},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":4022},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4046},{"krate":0,"index":4051},{"krate":0,"index":4093},{"krate":0,"index":4186},{"krate":0,"index":4190},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":4193},{"krate":0,"index":4198},{"krate":0,"index":4107},{"krate":0,"index":4121},{"krate":0,"index":4200},{"krate":0,"index":4202},{"krate":0,"index":4204},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4210},{"krate":0,"index":4124},{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4132}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20541,"byte_end":20568,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20644,"byte_end":20661,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"! An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614221,"byte_end":8614288,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614289,"byte_end":8614292,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614293,"byte_end":8614373,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614374,"byte_end":8614471,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614472,"byte_end":8614563,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614564,"byte_end":8614660,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"! support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614661,"byte_end":8614744,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614745,"byte_end":8614748,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614749,"byte_end":8614763,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614764,"byte_end":8614767,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614768,"byte_end":8614847,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! for it complete.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614848,"byte_end":8614868,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614869,"byte_end":8614872,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614873,"byte_end":8614886,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614887,"byte_end":8614919,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614920,"byte_end":8614923,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614924,"byte_end":8614942,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8614943,"byte_end":8615006,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"!     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615007,"byte_end":8615104,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"!     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615105,"byte_end":8615174,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"!     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615175,"byte_end":8615241,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"!                         .spawn();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615242,"byte_end":8615279,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615280,"byte_end":8615283,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615284,"byte_end":8615359,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"!     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615360,"byte_end":8615413,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615414,"byte_end":8615417,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"!     // Await until the future (and the command) completes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615418,"byte_end":8615479,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!     let status = future.await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615480,"byte_end":8615515,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"!     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615516,"byte_end":8615572,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615573,"byte_end":8615587,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615588,"byte_end":8615593,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615594,"byte_end":8615601,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615602,"byte_end":8615605,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615606,"byte_end":8615683,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"! world` but we also capture its output.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615684,"byte_end":8615726,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615727,"byte_end":8615730,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615731,"byte_end":8615744,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615745,"byte_end":8615777,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615778,"byte_end":8615781,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615782,"byte_end":8615800,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615801,"byte_end":8615864,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"!     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615865,"byte_end":8615938,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"!     // immediately returning the `Child`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615939,"byte_end":8615984,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"!     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8615985,"byte_end":8616052,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"!                         .output();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616053,"byte_end":8616091,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616092,"byte_end":8616095,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"!     let output = output.await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616096,"byte_end":8616131,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616132,"byte_end":8616135,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     assert!(output.status.success());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616136,"byte_end":8616177,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616178,"byte_end":8616230,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616231,"byte_end":8616245,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616246,"byte_end":8616251,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616252,"byte_end":8616259,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616260,"byte_end":8616263,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! We can also read input line by line.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616264,"byte_end":8616304,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616305,"byte_end":8616308,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616309,"byte_end":8616322,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616323,"byte_end":8616371,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616372,"byte_end":8616404,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616405,"byte_end":8616408,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! use std::process::Stdio;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616409,"byte_end":8616437,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616438,"byte_end":8616441,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616442,"byte_end":8616460,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616461,"byte_end":8616524,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"!     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616525,"byte_end":8616567,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616568,"byte_end":8616571,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"!     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616572,"byte_end":8616651,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"!     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616652,"byte_end":8616729,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"!     // current process (for example, this means that standard input will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616730,"byte_end":8616806,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"!     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616807,"byte_end":8616886,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"!     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616887,"byte_end":8616961,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"!     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616962,"byte_end":8616997,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8616998,"byte_end":8617001,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     let mut child = cmd.spawn()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617002,"byte_end":8617037,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"!         .expect(\"failed to spawn command\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617038,"byte_end":8617085,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617086,"byte_end":8617089,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"!     let stdout = child.stdout.take()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617090,"byte_end":8617130,"line_start":77,"line_end":77,"column_start":1,"column_end":41}},{"value":"!         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617131,"byte_end":8617192,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617193,"byte_end":8617196,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"!     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617197,"byte_end":8617253,"line_start":80,"line_end":80,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617254,"byte_end":8617257,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"!     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617258,"byte_end":8617329,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"!     // make progress on its own while we await for any output.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617330,"byte_end":8617396,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"!     tokio::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617397,"byte_end":8617425,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"!         let status = child.await","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617426,"byte_end":8617462,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"!             .expect(\"child process encountered an error\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617463,"byte_end":8617525,"line_start":86,"line_end":86,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617526,"byte_end":8617529,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"!         println!(\"child status was: {}\", status);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617530,"byte_end":8617583,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617584,"byte_end":8617595,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617596,"byte_end":8617599,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"!     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617600,"byte_end":8617658,"line_start":91,"line_end":91,"column_start":1,"column_end":59}},{"value":"!         println!(\"Line: {}\", line);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617659,"byte_end":8617698,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617699,"byte_end":8617708,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617709,"byte_end":8617712,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617713,"byte_end":8617727,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617728,"byte_end":8617733,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617734,"byte_end":8617741,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617742,"byte_end":8617745,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! # Caveats","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617746,"byte_end":8617759,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617760,"byte_end":8617763,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617764,"byte_end":8617839,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"! paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617840,"byte_end":8617913,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"! default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617914,"byte_end":8617994,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617995,"byte_end":8617998,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8617999,"byte_end":8618073,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618074,"byte_end":8618148,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"! has exited.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618149,"byte_end":8618164,"line_start":107,"line_end":107,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618165,"byte_end":8618168,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! [`Command`]: crate::process::Command","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618169,"byte_end":8618209,"line_start":109,"line_end":109,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4181},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619145,"byte_end":8619152,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618718,"byte_end":8618815,"line_start":137,"line_end":137,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618816,"byte_end":8618908,"line_start":138,"line_end":138,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618909,"byte_end":8618995,"line_start":139,"line_end":139,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8618996,"byte_end":8619026,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619027,"byte_end":8619030,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619031,"byte_end":8619116,"line_start":142,"line_end":142,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620413,"byte_end":8620416,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"fn <S> (program: S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619393,"byte_end":8619452,"line_start":157,"line_end":157,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619457,"byte_end":8619518,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619523,"byte_end":8619526,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619531,"byte_end":8619564,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619569,"byte_end":8619616,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619621,"byte_end":8619674,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619679,"byte_end":8619767,"line_start":163,"line_end":163,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619772,"byte_end":8619775,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619780,"byte_end":8619841,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619846,"byte_end":8619882,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619887,"byte_end":8619890,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619895,"byte_end":8619967,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619972,"byte_end":8619994,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619999,"byte_end":8620002,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620007,"byte_end":8620070,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620075,"byte_end":8620122,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620127,"byte_end":8620186,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ (see issue rust-lang/rust#37519).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620191,"byte_end":8620228,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620233,"byte_end":8620236,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620241,"byte_end":8620255,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620260,"byte_end":8620263,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620268,"byte_end":8620284,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620289,"byte_end":8620292,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620297,"byte_end":8620310,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620315,"byte_end":8620347,"line_start":181,"line_end":181,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620352,"byte_end":8620389,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620394,"byte_end":8620401,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621258,"byte_end":8621261,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"fn <S> (&mut self, arg: S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620515,"byte_end":8620559,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620564,"byte_end":8620567,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620572,"byte_end":8620631,"line_start":190,"line_end":190,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620636,"byte_end":8620639,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620644,"byte_end":8620657,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620662,"byte_end":8620700,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620705,"byte_end":8620736,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620741,"byte_end":8620748,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620753,"byte_end":8620756,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620761,"byte_end":8620780,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620785,"byte_end":8620788,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620793,"byte_end":8620806,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620811,"byte_end":8620849,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620854,"byte_end":8620870,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620875,"byte_end":8620903,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620908,"byte_end":8620915,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620920,"byte_end":8620923,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620928,"byte_end":8620972,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620977,"byte_end":8620980,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`args`]: #method.args","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8620985,"byte_end":8621011,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621016,"byte_end":8621019,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621024,"byte_end":8621038,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621043,"byte_end":8621046,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621051,"byte_end":8621067,"line_start":211,"line_end":211,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621072,"byte_end":8621075,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621080,"byte_end":8621093,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621098,"byte_end":8621130,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621135,"byte_end":8621138,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621143,"byte_end":8621179,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621184,"byte_end":8621206,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621211,"byte_end":8621234,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621239,"byte_end":8621246,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621740,"byte_end":8621744,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"fn <I, S> (&mut self, args: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621367,"byte_end":8621418,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621423,"byte_end":8621426,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621431,"byte_end":8621473,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621478,"byte_end":8621481,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: #method.arg","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621486,"byte_end":8621510,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621515,"byte_end":8621518,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621523,"byte_end":8621537,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621542,"byte_end":8621545,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621550,"byte_end":8621566,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621571,"byte_end":8621574,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621579,"byte_end":8621592,"line_start":235,"line_end":235,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621597,"byte_end":8621629,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621634,"byte_end":8621637,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621642,"byte_end":8621678,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621683,"byte_end":8621716,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621721,"byte_end":8621728,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622360,"byte_end":8622363,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"fn <K, V> (&mut self, key: K, val: V) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621916,"byte_end":8621971,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621976,"byte_end":8621979,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8621984,"byte_end":8622079,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622084,"byte_end":8622130,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622135,"byte_end":8622138,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622143,"byte_end":8622157,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622162,"byte_end":8622165,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622170,"byte_end":8622186,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622191,"byte_end":8622194,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622199,"byte_end":8622212,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622217,"byte_end":8622249,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622254,"byte_end":8622257,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622262,"byte_end":8622298,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622303,"byte_end":8622336,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622341,"byte_end":8622348,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623237,"byte_end":8623241,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"fn <I, K, V> (&mut self, vars: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622535,"byte_end":8622594,"line_start":274,"line_end":274,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622599,"byte_end":8622602,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622607,"byte_end":8622621,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622626,"byte_end":8622629,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622634,"byte_end":8622650,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622655,"byte_end":8622658,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622663,"byte_end":8622676,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622681,"byte_end":8622713,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622718,"byte_end":8622748,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622753,"byte_end":8622770,"line_start":283,"line_end":283,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622775,"byte_end":8622809,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622814,"byte_end":8622817,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622822,"byte_end":8622870,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622875,"byte_end":8622915,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622920,"byte_end":8622986,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8622991,"byte_end":8623011,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623016,"byte_end":8623019,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623024,"byte_end":8623066,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623071,"byte_end":8623104,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623109,"byte_end":8623146,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623151,"byte_end":8623175,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623180,"byte_end":8623213,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623218,"byte_end":8623225,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623719,"byte_end":8623729,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"fn <K> (&mut self, key: K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623446,"byte_end":8623490,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623495,"byte_end":8623498,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623503,"byte_end":8623517,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623522,"byte_end":8623525,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623530,"byte_end":8623546,"line_start":311,"line_end":311,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623551,"byte_end":8623554,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623559,"byte_end":8623572,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623577,"byte_end":8623609,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623614,"byte_end":8623617,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623622,"byte_end":8623658,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623663,"byte_end":8623695,"line_start":317,"line_end":317,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623700,"byte_end":8623707,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624124,"byte_end":8624133,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"fn (&mut self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623842,"byte_end":8623902,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623907,"byte_end":8623910,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623915,"byte_end":8623929,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623934,"byte_end":8623937,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623942,"byte_end":8623958,"line_start":328,"line_end":328,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623963,"byte_end":8623966,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623971,"byte_end":8623984,"line_start":330,"line_end":330,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8623989,"byte_end":8624021,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624026,"byte_end":8624029,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624034,"byte_end":8624070,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624075,"byte_end":8624100,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624105,"byte_end":8624112,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624978,"byte_end":8624989,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"fn <P> (&mut self, dir: P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624217,"byte_end":8624270,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624275,"byte_end":8624278,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624283,"byte_end":8624315,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624320,"byte_end":8624323,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624328,"byte_end":8624403,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624408,"byte_end":8624477,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624482,"byte_end":8624554,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624559,"byte_end":8624622,"line_start":348,"line_end":348,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624627,"byte_end":8624688,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624693,"byte_end":8624696,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624701,"byte_end":8624748,"line_start":351,"line_end":351,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624753,"byte_end":8624756,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624761,"byte_end":8624775,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624780,"byte_end":8624783,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624788,"byte_end":8624804,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624809,"byte_end":8624812,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624817,"byte_end":8624830,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624835,"byte_end":8624867,"line_start":358,"line_end":358,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624872,"byte_end":8624875,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624880,"byte_end":8624916,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624921,"byte_end":8624954,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8624959,"byte_end":8624966,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625684,"byte_end":8625689,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625102,"byte_end":8625179,"line_start":368,"line_end":368,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625184,"byte_end":8625187,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625192,"byte_end":8625259,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625264,"byte_end":8625314,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625319,"byte_end":8625322,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625327,"byte_end":8625372,"line_start":373,"line_end":373,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625377,"byte_end":8625418,"line_start":374,"line_end":374,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625423,"byte_end":8625426,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625431,"byte_end":8625445,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625450,"byte_end":8625453,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625458,"byte_end":8625474,"line_start":378,"line_end":378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625479,"byte_end":8625482,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625487,"byte_end":8625500,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625505,"byte_end":8625535,"line_start":381,"line_end":381,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625540,"byte_end":8625572,"line_start":382,"line_end":382,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625577,"byte_end":8625580,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625585,"byte_end":8625621,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625626,"byte_end":8625660,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625665,"byte_end":8625672,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626380,"byte_end":8626386,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625796,"byte_end":8625875,"line_start":392,"line_end":392,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625880,"byte_end":8625883,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625888,"byte_end":8625955,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8625960,"byte_end":8626010,"line_start":395,"line_end":395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626015,"byte_end":8626018,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626023,"byte_end":8626068,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626073,"byte_end":8626114,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626119,"byte_end":8626122,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626127,"byte_end":8626141,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626146,"byte_end":8626149,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626154,"byte_end":8626170,"line_start":402,"line_end":402,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626175,"byte_end":8626178,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626183,"byte_end":8626196,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626201,"byte_end":8626234,"line_start":405,"line_end":405,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626239,"byte_end":8626267,"line_start":406,"line_end":406,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626272,"byte_end":8626275,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626280,"byte_end":8626316,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626321,"byte_end":8626356,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626361,"byte_end":8626368,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627079,"byte_end":8627085,"line_start":435,"line_end":435,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626494,"byte_end":8626572,"line_start":416,"line_end":416,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626577,"byte_end":8626580,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626585,"byte_end":8626652,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626657,"byte_end":8626707,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626712,"byte_end":8626715,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626720,"byte_end":8626765,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626770,"byte_end":8626811,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626816,"byte_end":8626819,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626824,"byte_end":8626838,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626843,"byte_end":8626846,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626851,"byte_end":8626867,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626872,"byte_end":8626875,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626880,"byte_end":8626893,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626898,"byte_end":8626931,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626936,"byte_end":8626966,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626971,"byte_end":8626974,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8626979,"byte_end":8627015,"line_start":432,"line_end":432,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627020,"byte_end":8627055,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627060,"byte_end":8627067,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627538,"byte_end":8627550,"line_start":446,"line_end":446,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"fn (&mut self, kill_on_drop: bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627193,"byte_end":8627269,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627274,"byte_end":8627335,"line_start":441,"line_end":441,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627340,"byte_end":8627343,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627348,"byte_end":8627425,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627430,"byte_end":8627509,"line_start":444,"line_end":444,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8627514,"byte_end":8627526,"line_start":445,"line_end":445,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628267,"byte_end":8628270,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628069,"byte_end":8628127,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628132,"byte_end":8628195,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628200,"byte_end":8628238,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628243,"byte_end":8628255,"line_start":465,"line_end":465,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628508,"byte_end":8628511,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628359,"byte_end":8628432,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628437,"byte_end":8628479,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628484,"byte_end":8628496,"line_start":473,"line_end":473,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630165,"byte_end":8630173,"line_start":509,"line_end":509,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"fn <F> (&mut self, f: F) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628600,"byte_end":8628668,"line_start":479,"line_end":479,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628673,"byte_end":8628685,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628690,"byte_end":8628693,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628698,"byte_end":8628772,"line_start":482,"line_end":482,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628777,"byte_end":8628850,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628855,"byte_end":8628883,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628888,"byte_end":8628891,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628896,"byte_end":8628971,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8628976,"byte_end":8629051,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629056,"byte_end":8629129,"line_start":488,"line_end":488,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629134,"byte_end":8629146,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629151,"byte_end":8629154,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629159,"byte_end":8629171,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629176,"byte_end":8629179,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629184,"byte_end":8629256,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629261,"byte_end":8629334,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629339,"byte_end":8629412,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629417,"byte_end":8629489,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629494,"byte_end":8629567,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629572,"byte_end":8629637,"line_start":498,"line_end":498,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629642,"byte_end":8629645,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629650,"byte_end":8629717,"line_start":500,"line_end":500,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629722,"byte_end":8629797,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629802,"byte_end":8629873,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629878,"byte_end":8629914,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629919,"byte_end":8629922,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8629927,"byte_end":8630003,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630008,"byte_end":8630080,"line_start":506,"line_end":506,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630085,"byte_end":8630129,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630134,"byte_end":8630146,"line_start":508,"line_end":508,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631812,"byte_end":8631817,"line_start":555,"line_end":555,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"fn (&mut self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630342,"byte_end":8630412,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630417,"byte_end":8630420,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630425,"byte_end":8630496,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630501,"byte_end":8630504,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630509,"byte_end":8630580,"line_start":521,"line_end":521,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630585,"byte_end":8630660,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630665,"byte_end":8630740,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630745,"byte_end":8630817,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630822,"byte_end":8630841,"line_start":525,"line_end":525,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630846,"byte_end":8630849,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630854,"byte_end":8630925,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630930,"byte_end":8630945,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630950,"byte_end":8630953,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630958,"byte_end":8630971,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630976,"byte_end":8630979,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8630984,"byte_end":8631059,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631064,"byte_end":8631139,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631144,"byte_end":8631224,"line_start":534,"line_end":534,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631229,"byte_end":8631232,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631237,"byte_end":8631311,"line_start":536,"line_end":536,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631316,"byte_end":8631390,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631395,"byte_end":8631410,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631415,"byte_end":8631418,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631423,"byte_end":8631437,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631442,"byte_end":8631445,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631450,"byte_end":8631466,"line_start":542,"line_end":542,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631471,"byte_end":8631474,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631479,"byte_end":8631492,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631497,"byte_end":8631529,"line_start":545,"line_end":545,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631534,"byte_end":8631537,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631542,"byte_end":8631593,"line_start":547,"line_end":547,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631598,"byte_end":8631624,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631629,"byte_end":8631649,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631654,"byte_end":8631703,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631708,"byte_end":8631726,"line_start":551,"line_end":551,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631731,"byte_end":8631778,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631783,"byte_end":8631788,"line_start":553,"line_end":553,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8631793,"byte_end":8631800,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4087},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633375,"byte_end":8633381,"line_start":598,"line_end":598,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"fn (&mut self) -> impl Future<Output = io::Result<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632314,"byte_end":8632387,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632392,"byte_end":8632423,"line_start":568,"line_end":568,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632428,"byte_end":8632431,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632436,"byte_end":8632507,"line_start":570,"line_end":570,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632512,"byte_end":8632591,"line_start":571,"line_end":571,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632596,"byte_end":8632634,"line_start":572,"line_end":572,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632639,"byte_end":8632642,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632647,"byte_end":8632718,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632723,"byte_end":8632738,"line_start":575,"line_end":575,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632743,"byte_end":8632746,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632751,"byte_end":8632813,"line_start":577,"line_end":577,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632818,"byte_end":8632866,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632871,"byte_end":8632874,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632879,"byte_end":8632891,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632896,"byte_end":8632899,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632904,"byte_end":8632979,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8632984,"byte_end":8633038,"line_start":583,"line_end":583,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633043,"byte_end":8633046,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633051,"byte_end":8633065,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633070,"byte_end":8633073,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633078,"byte_end":8633094,"line_start":587,"line_end":587,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633099,"byte_end":8633102,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633107,"byte_end":8633120,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633125,"byte_end":8633157,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633162,"byte_end":8633165,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633170,"byte_end":8633221,"line_start":592,"line_end":592,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633226,"byte_end":8633252,"line_start":593,"line_end":593,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633257,"byte_end":8633278,"line_start":594,"line_end":594,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633283,"byte_end":8633301,"line_start":595,"line_end":595,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633306,"byte_end":8633353,"line_start":596,"line_end":596,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633358,"byte_end":8633363,"line_start":597,"line_end":597,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635270,"byte_end":8635276,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"fn (&mut self) -> impl Future<Output = io::Result<Output>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633856,"byte_end":8633929,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633934,"byte_end":8633967,"line_start":616,"line_end":616,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633972,"byte_end":8633975,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8633980,"byte_end":8634042,"line_start":618,"line_end":618,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634047,"byte_end":8634122,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634127,"byte_end":8634201,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634206,"byte_end":8634269,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634274,"byte_end":8634315,"line_start":622,"line_end":622,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634320,"byte_end":8634323,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634328,"byte_end":8634399,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634404,"byte_end":8634457,"line_start":625,"line_end":625,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634462,"byte_end":8634532,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634537,"byte_end":8634610,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634615,"byte_end":8634634,"line_start":628,"line_end":628,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634639,"byte_end":8634642,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634647,"byte_end":8634718,"line_start":630,"line_end":630,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634723,"byte_end":8634738,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634743,"byte_end":8634746,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634751,"byte_end":8634813,"line_start":633,"line_end":633,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634818,"byte_end":8634866,"line_start":634,"line_end":634,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634871,"byte_end":8634874,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634879,"byte_end":8634893,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634898,"byte_end":8634901,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634906,"byte_end":8634922,"line_start":638,"line_end":638,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634927,"byte_end":8634930,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634935,"byte_end":8634948,"line_start":640,"line_end":640,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634953,"byte_end":8634985,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634990,"byte_end":8634993,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8634998,"byte_end":8635021,"line_start":643,"line_end":643,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635026,"byte_end":8635087,"line_start":644,"line_end":644,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635092,"byte_end":8635113,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635118,"byte_end":8635136,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635141,"byte_end":8635189,"line_start":647,"line_end":647,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635194,"byte_end":8635248,"line_start":648,"line_end":648,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635253,"byte_end":8635258,"line_start":649,"line_end":649,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637541,"byte_end":8637546,"line_start":733,"line_end":733,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636763,"byte_end":8636828,"line_start":717,"line_end":717,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636829,"byte_end":8636832,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636833,"byte_end":8636904,"line_start":719,"line_end":719,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636905,"byte_end":8636985,"line_start":720,"line_end":720,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636986,"byte_end":8637044,"line_start":721,"line_end":721,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637045,"byte_end":8637048,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637049,"byte_end":8637062,"line_start":723,"line_end":723,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637063,"byte_end":8637138,"line_start":724,"line_end":724,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637139,"byte_end":8637212,"line_start":725,"line_end":725,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637213,"byte_end":8637293,"line_start":726,"line_end":726,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637294,"byte_end":8637297,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637298,"byte_end":8637372,"line_start":728,"line_end":728,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637373,"byte_end":8637447,"line_start":729,"line_end":729,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637448,"byte_end":8637463,"line_start":730,"line_end":730,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637464,"byte_end":8637512,"line_start":731,"line_end":731,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4195},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637700,"byte_end":8637705,"line_start":738,"line_end":738,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637593,"byte_end":8637668,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637673,"byte_end":8637691,"line_start":737,"line_end":737,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4196},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637843,"byte_end":8637849,"line_start":742,"line_end":742,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637732,"byte_end":8637807,"line_start":740,"line_end":740,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637812,"byte_end":8637834,"line_start":741,"line_end":741,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4197},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637987,"byte_end":8637993,"line_start":746,"line_end":746,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637877,"byte_end":8637951,"line_start":744,"line_end":744,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8637956,"byte_end":8637978,"line_start":745,"line_end":745,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638122,"byte_end":8638124,"line_start":751,"line_end":751,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638036,"byte_end":8638110,"line_start":750,"line_end":750,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638298,"byte_end":8638302,"line_start":758,"line_end":758,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638182,"byte_end":8638211,"line_start":755,"line_end":755,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638216,"byte_end":8638219,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638224,"byte_end":8638286,"line_start":757,"line_end":757,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638458,"byte_end":8638463,"line_start":764,"line_end":764,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"fn (&mut self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638390,"byte_end":8638446,"line_start":763,"line_end":763,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638627,"byte_end":8638633,"line_start":770,"line_end":770,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"fn (&mut self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638558,"byte_end":8638615,"line_start":769,"line_end":769,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638799,"byte_end":8638805,"line_start":776,"line_end":776,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"fn (&mut self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638730,"byte_end":8638787,"line_start":775,"line_end":775,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639813,"byte_end":8639829,"line_start":796,"line_end":796,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"fn (mut self) -> io::Result<Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638883,"byte_end":8638957,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638962,"byte_end":8639014,"line_start":781,"line_end":781,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639019,"byte_end":8639022,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639027,"byte_end":8639102,"line_start":783,"line_end":783,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639107,"byte_end":8639182,"line_start":784,"line_end":784,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639187,"byte_end":8639209,"line_start":785,"line_end":785,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639214,"byte_end":8639217,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639222,"byte_end":8639294,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639299,"byte_end":8639373,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639378,"byte_end":8639453,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639458,"byte_end":8639476,"line_start":790,"line_end":790,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639481,"byte_end":8639484,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639489,"byte_end":8639563,"line_start":792,"line_end":792,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639568,"byte_end":8639644,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639649,"byte_end":8639720,"line_start":794,"line_end":794,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8639725,"byte_end":8639795,"line_start":795,"line_end":795,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640943,"byte_end":8640953,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4201}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640729,"byte_end":8640780,"line_start":829,"line_end":829,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640781,"byte_end":8640784,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640785,"byte_end":8640868,"line_start":831,"line_end":831,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640869,"byte_end":8640914,"line_start":832,"line_end":832,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4204},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641194,"byte_end":8641205,"line_start":843,"line_end":843,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4205}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640987,"byte_end":8641039,"line_start":838,"line_end":838,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641040,"byte_end":8641043,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641044,"byte_end":8641119,"line_start":840,"line_end":840,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641120,"byte_end":8641165,"line_start":841,"line_end":841,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4208},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641446,"byte_end":8641457,"line_start":852,"line_end":852,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4209}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641240,"byte_end":8641291,"line_start":847,"line_end":847,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641292,"byte_end":8641295,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641296,"byte_end":8641371,"line_start":849,"line_end":849,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641372,"byte_end":8641417,"line_start":850,"line_end":850,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":555},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":4222},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":4947},{"krate":0,"index":573},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":5054},{"krate":0,"index":5104},{"krate":0,"index":686},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":5135},{"krate":0,"index":5236},{"krate":0,"index":5434},{"krate":0,"index":5463},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":5464},{"krate":0,"index":5468},{"krate":0,"index":5470},{"krate":0,"index":5480},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103478,"byte_end":103500,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103501,"byte_end":103504,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103505,"byte_end":103570,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103571,"byte_end":103641,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103642,"byte_end":103656,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103657,"byte_end":103660,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103661,"byte_end":103739,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103740,"byte_end":103797,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103798,"byte_end":103868,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103869,"byte_end":103941,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103942,"byte_end":103945,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103946,"byte_end":104026,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104027,"byte_end":104100,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104101,"byte_end":104175,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104176,"byte_end":104254,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104255,"byte_end":104268,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104269,"byte_end":104272,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104273,"byte_end":104284,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104285,"byte_end":104288,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104289,"byte_end":104356,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104357,"byte_end":104360,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104361,"byte_end":104374,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104375,"byte_end":104407,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104408,"byte_end":104434,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104435,"byte_end":104438,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104439,"byte_end":104457,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104458,"byte_end":104521,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104522,"byte_end":104592,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104593,"byte_end":104596,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104597,"byte_end":104611,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104612,"byte_end":104671,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104672,"byte_end":104675,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104676,"byte_end":104713,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104714,"byte_end":104754,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104755,"byte_end":104758,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104759,"byte_end":104839,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104840,"byte_end":104862,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104863,"byte_end":104926,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104927,"byte_end":104967,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104968,"byte_end":105018,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105019,"byte_end":105054,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105055,"byte_end":105090,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105091,"byte_end":105173,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105174,"byte_end":105209,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105210,"byte_end":105235,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105236,"byte_end":105258,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105259,"byte_end":105262,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105263,"byte_end":105305,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105306,"byte_end":105378,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105379,"byte_end":105456,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105457,"byte_end":105488,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105489,"byte_end":105510,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105511,"byte_end":105528,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105529,"byte_end":105544,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105545,"byte_end":105554,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105555,"byte_end":105560,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105561,"byte_end":105568,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105569,"byte_end":105572,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105573,"byte_end":105651,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105652,"byte_end":105730,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105731,"byte_end":105792,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105793,"byte_end":105796,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105797,"byte_end":105850,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105851,"byte_end":105854,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105855,"byte_end":105868,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105869,"byte_end":105901,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105902,"byte_end":105928,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105929,"byte_end":105961,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105962,"byte_end":105965,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105966,"byte_end":106023,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106024,"byte_end":106053,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106054,"byte_end":106091,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106092,"byte_end":106095,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106096,"byte_end":106126,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106127,"byte_end":106154,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106155,"byte_end":106229,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106230,"byte_end":106233,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106234,"byte_end":106252,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106253,"byte_end":106316,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106317,"byte_end":106320,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106321,"byte_end":106362,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106363,"byte_end":106407,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106408,"byte_end":106411,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106412,"byte_end":106496,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106497,"byte_end":106523,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106524,"byte_end":106591,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106592,"byte_end":106636,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106637,"byte_end":106691,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106692,"byte_end":106731,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106732,"byte_end":106771,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106772,"byte_end":106858,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106859,"byte_end":106898,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106899,"byte_end":106928,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106929,"byte_end":106955,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106956,"byte_end":106959,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106960,"byte_end":107006,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107007,"byte_end":107083,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107084,"byte_end":107165,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107166,"byte_end":107201,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107202,"byte_end":107227,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107228,"byte_end":107249,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107250,"byte_end":107269,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107270,"byte_end":107283,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107284,"byte_end":107294,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107295,"byte_end":107300,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107301,"byte_end":107308,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107309,"byte_end":107312,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107313,"byte_end":107342,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107343,"byte_end":107346,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107347,"byte_end":107425,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107426,"byte_end":107502,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107503,"byte_end":107545,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107546,"byte_end":107549,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107550,"byte_end":107574,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107575,"byte_end":107578,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107579,"byte_end":107658,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107659,"byte_end":107734,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107735,"byte_end":107805,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107806,"byte_end":107846,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107847,"byte_end":107854,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107855,"byte_end":107878,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107879,"byte_end":107882,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107883,"byte_end":107942,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107943,"byte_end":107985,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107986,"byte_end":108012,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108013,"byte_end":108031,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108032,"byte_end":108046,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108047,"byte_end":108054,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108055,"byte_end":108058,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108059,"byte_end":108124,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108125,"byte_end":108195,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108196,"byte_end":108199,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108200,"byte_end":108227,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108228,"byte_end":108231,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108232,"byte_end":108303,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108304,"byte_end":108382,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108383,"byte_end":108462,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108463,"byte_end":108547,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108548,"byte_end":108628,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108629,"byte_end":108636,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108637,"byte_end":108660,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108661,"byte_end":108664,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108665,"byte_end":108724,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108725,"byte_end":108770,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108771,"byte_end":108800,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108801,"byte_end":108819,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108820,"byte_end":108834,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108835,"byte_end":108842,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108843,"byte_end":108846,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108847,"byte_end":108927,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108928,"byte_end":108970,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108971,"byte_end":108974,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108975,"byte_end":109052,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109053,"byte_end":109122,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109123,"byte_end":109126,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109127,"byte_end":109152,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109153,"byte_end":109156,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109157,"byte_end":109231,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109232,"byte_end":109312,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109313,"byte_end":109392,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109393,"byte_end":109472,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109473,"byte_end":109542,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109547,"byte_end":109581,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109582,"byte_end":109585,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109586,"byte_end":109665,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109666,"byte_end":109734,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109735,"byte_end":109797,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109798,"byte_end":109801,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109802,"byte_end":109880,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109881,"byte_end":109960,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109961,"byte_end":110019,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110020,"byte_end":110023,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110024,"byte_end":110048,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110049,"byte_end":110073,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110074,"byte_end":110108,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110109,"byte_end":110147,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110148,"byte_end":110194,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110195,"byte_end":110245,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110246,"byte_end":110320,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110321,"byte_end":110401,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110402,"byte_end":110464,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110465,"byte_end":110531,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110532,"byte_end":110596,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4763},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700335,"byte_end":8700344,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4764}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4406},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700520,"byte_end":8700529,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"fn () -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700495,"byte_end":8700508,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4408},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700747,"byte_end":8700752,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"fn (err: Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700722,"byte_end":8700735,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701082,"byte_end":8701094,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701002,"byte_end":8701070,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701600,"byte_end":8701608,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701221,"byte_end":8701283,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701288,"byte_end":8701291,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701296,"byte_end":8701310,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701315,"byte_end":8701318,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701323,"byte_end":8701330,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701335,"byte_end":8701354,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701359,"byte_end":8701362,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701367,"byte_end":8701385,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701390,"byte_end":8701411,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701416,"byte_end":8701454,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701459,"byte_end":8701486,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701491,"byte_end":8701521,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701526,"byte_end":8701529,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701534,"byte_end":8701566,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701571,"byte_end":8701576,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701581,"byte_end":8701588,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702515,"byte_end":8702525,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"fn (self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701734,"byte_end":8701813,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701818,"byte_end":8701821,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701826,"byte_end":8701838,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701843,"byte_end":8701846,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701851,"byte_end":8701925,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8701930,"byte_end":8702005,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702010,"byte_end":8702068,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702073,"byte_end":8702076,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702081,"byte_end":8702095,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702100,"byte_end":8702103,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702108,"byte_end":8702127,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702132,"byte_end":8702151,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702156,"byte_end":8702159,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702164,"byte_end":8702182,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702187,"byte_end":8702208,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702213,"byte_end":8702251,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702256,"byte_end":8702283,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702288,"byte_end":8702318,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702323,"byte_end":8702326,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702331,"byte_end":8702358,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702363,"byte_end":8702411,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702416,"byte_end":8702467,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702472,"byte_end":8702481,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702486,"byte_end":8702491,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702496,"byte_end":8702503,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703290,"byte_end":8703304,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"fn (self) -> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702666,"byte_end":8702735,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702740,"byte_end":8702812,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702817,"byte_end":8702830,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702835,"byte_end":8702838,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702843,"byte_end":8702857,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702862,"byte_end":8702865,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702870,"byte_end":8702889,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702894,"byte_end":8702913,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702918,"byte_end":8702921,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702926,"byte_end":8702944,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702949,"byte_end":8702970,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8702975,"byte_end":8703013,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703018,"byte_end":8703045,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703050,"byte_end":8703080,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703085,"byte_end":8703088,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703093,"byte_end":8703143,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703148,"byte_end":8703196,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703201,"byte_end":8703242,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703247,"byte_end":8703256,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703261,"byte_end":8703266,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703271,"byte_end":8703278,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4765},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719670,"byte_end":8719680,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4767},{"krate":0,"index":4768}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125599,"byte_end":125606,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124781,"byte_end":124839,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124840,"byte_end":124843,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124844,"byte_end":124916,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124917,"byte_end":124965,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124966,"byte_end":124969,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124970,"byte_end":125035,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125036,"byte_end":125039,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125040,"byte_end":125117,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125118,"byte_end":125131,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125132,"byte_end":125135,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125136,"byte_end":125164,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125165,"byte_end":125198,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125199,"byte_end":125202,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125203,"byte_end":125217,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125218,"byte_end":125221,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125222,"byte_end":125229,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125230,"byte_end":125262,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125263,"byte_end":125266,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125267,"byte_end":125282,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125283,"byte_end":125307,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125308,"byte_end":125344,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125345,"byte_end":125378,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125379,"byte_end":125407,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125408,"byte_end":125450,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125451,"byte_end":125498,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125499,"byte_end":125519,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125520,"byte_end":125542,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125543,"byte_end":125546,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125547,"byte_end":125573,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125574,"byte_end":125579,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125580,"byte_end":125587,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126761,"byte_end":126764,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126587,"byte_end":126659,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126664,"byte_end":126675,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126680,"byte_end":126683,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126688,"byte_end":126749,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127968,"byte_end":127978,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127454,"byte_end":127492,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127497,"byte_end":127500,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127505,"byte_end":127576,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127581,"byte_end":127657,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127662,"byte_end":127716,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127721,"byte_end":127724,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127729,"byte_end":127743,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127748,"byte_end":127751,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127756,"byte_end":127763,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127768,"byte_end":127791,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127796,"byte_end":127799,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127804,"byte_end":127840,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127845,"byte_end":127874,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127879,"byte_end":127900,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127905,"byte_end":127921,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127926,"byte_end":127944,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127949,"byte_end":127956,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128533,"byte_end":128544,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128155,"byte_end":128228,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128233,"byte_end":128311,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128316,"byte_end":128319,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128324,"byte_end":128399,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128404,"byte_end":128439,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128444,"byte_end":128447,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128452,"byte_end":128521,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129253,"byte_end":129265,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128646,"byte_end":128721,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128726,"byte_end":128729,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128734,"byte_end":128811,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128816,"byte_end":128851,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128856,"byte_end":128859,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128864,"byte_end":128933,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128938,"byte_end":128941,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128946,"byte_end":128998,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129003,"byte_end":129006,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129011,"byte_end":129025,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129030,"byte_end":129033,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129038,"byte_end":129045,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129050,"byte_end":129073,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129078,"byte_end":129081,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129086,"byte_end":129122,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129127,"byte_end":129156,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129161,"byte_end":129185,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129190,"byte_end":129206,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129211,"byte_end":129229,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129234,"byte_end":129241,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130144,"byte_end":130155,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129426,"byte_end":129482,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129487,"byte_end":129490,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129495,"byte_end":129572,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129577,"byte_end":129659,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129664,"byte_end":129734,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129739,"byte_end":129742,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129747,"byte_end":129827,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129832,"byte_end":129835,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129840,"byte_end":129869,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129874,"byte_end":129877,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129882,"byte_end":129967,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129972,"byte_end":129975,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129980,"byte_end":130069,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130074,"byte_end":130132,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130679,"byte_end":130690,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"fn (&mut self, val: impl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130309,"byte_end":130373,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130378,"byte_end":130381,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130386,"byte_end":130433,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130438,"byte_end":130441,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130446,"byte_end":130460,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130465,"byte_end":130468,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130473,"byte_end":130480,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130485,"byte_end":130510,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130515,"byte_end":130518,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130523,"byte_end":130544,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130549,"byte_end":130585,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130590,"byte_end":130621,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130626,"byte_end":130643,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130648,"byte_end":130655,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130660,"byte_end":130667,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131414,"byte_end":131431,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130804,"byte_end":130858,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130863,"byte_end":130866,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130871,"byte_end":130943,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130948,"byte_end":130981,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130986,"byte_end":130989,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130994,"byte_end":131062,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131067,"byte_end":131128,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131133,"byte_end":131136,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131141,"byte_end":131155,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131160,"byte_end":131163,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131168,"byte_end":131175,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131180,"byte_end":131205,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131210,"byte_end":131213,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131218,"byte_end":131239,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131244,"byte_end":131280,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131285,"byte_end":131314,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131319,"byte_end":131356,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131361,"byte_end":131378,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131383,"byte_end":131390,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131395,"byte_end":131402,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132072,"byte_end":132087,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131538,"byte_end":131613,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131618,"byte_end":131633,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131638,"byte_end":131641,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131646,"byte_end":131708,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131713,"byte_end":131716,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131721,"byte_end":131735,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131740,"byte_end":131743,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131748,"byte_end":131755,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131760,"byte_end":131785,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131790,"byte_end":131793,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131798,"byte_end":131819,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131824,"byte_end":131865,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131870,"byte_end":131899,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131904,"byte_end":131933,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131938,"byte_end":131977,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131982,"byte_end":131992,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131997,"byte_end":132014,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132019,"byte_end":132026,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132031,"byte_end":132038,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132043,"byte_end":132060,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132738,"byte_end":132752,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132248,"byte_end":132299,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132304,"byte_end":132307,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132312,"byte_end":132374,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132379,"byte_end":132382,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132387,"byte_end":132401,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132406,"byte_end":132409,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132414,"byte_end":132421,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132426,"byte_end":132451,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132456,"byte_end":132459,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132464,"byte_end":132485,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132490,"byte_end":132531,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132536,"byte_end":132565,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132570,"byte_end":132598,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132603,"byte_end":132643,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132648,"byte_end":132658,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132663,"byte_end":132680,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132685,"byte_end":132692,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132697,"byte_end":132704,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132709,"byte_end":132726,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133298,"byte_end":133303,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132913,"byte_end":132950,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132955,"byte_end":132958,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132963,"byte_end":133026,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133031,"byte_end":133034,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133039,"byte_end":133053,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133058,"byte_end":133061,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133066,"byte_end":133073,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133078,"byte_end":133110,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133115,"byte_end":133118,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133123,"byte_end":133172,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133177,"byte_end":133180,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133185,"byte_end":133208,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133213,"byte_end":133262,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133267,"byte_end":133274,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133279,"byte_end":133286,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134928,"byte_end":134937,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135448,"byte_end":135459,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4967},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":136072,"byte_end":136087,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4973},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":137823,"byte_end":137841,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5034},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147555,"byte_end":147561,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147286,"byte_end":147312,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147313,"byte_end":147316,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147317,"byte_end":147405,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147406,"byte_end":147456,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147457,"byte_end":147460,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147461,"byte_end":147519,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149098,"byte_end":149103,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147925,"byte_end":148000,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148005,"byte_end":148083,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148088,"byte_end":148156,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148161,"byte_end":148164,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148169,"byte_end":148227,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148232,"byte_end":148235,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148240,"byte_end":148280,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148285,"byte_end":148332,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148337,"byte_end":148394,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148399,"byte_end":148436,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148441,"byte_end":148444,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148449,"byte_end":148462,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148467,"byte_end":148470,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148475,"byte_end":148482,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148487,"byte_end":148519,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148524,"byte_end":148527,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148532,"byte_end":148574,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148579,"byte_end":148645,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148650,"byte_end":148683,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148688,"byte_end":148720,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148725,"byte_end":148736,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148741,"byte_end":148746,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148751,"byte_end":148754,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148759,"byte_end":148774,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148779,"byte_end":148820,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148825,"byte_end":148866,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148871,"byte_end":148874,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148879,"byte_end":148922,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148927,"byte_end":148930,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148935,"byte_end":149010,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149015,"byte_end":149064,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149069,"byte_end":149074,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149079,"byte_end":149086,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149992,"byte_end":149999,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149221,"byte_end":149281,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149286,"byte_end":149289,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149294,"byte_end":149305,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149310,"byte_end":149313,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149318,"byte_end":149387,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149392,"byte_end":149395,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149400,"byte_end":149414,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149419,"byte_end":149422,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149427,"byte_end":149509,"line_start":87,"line_end":87,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149514,"byte_end":149560,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149565,"byte_end":149568,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149573,"byte_end":149580,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149585,"byte_end":149619,"line_start":91,"line_end":91,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149624,"byte_end":149640,"line_start":92,"line_end":92,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149645,"byte_end":149684,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149689,"byte_end":149711,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149716,"byte_end":149747,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149752,"byte_end":149755,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149760,"byte_end":149801,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149806,"byte_end":149841,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149846,"byte_end":149870,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149875,"byte_end":149931,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149936,"byte_end":149942,"line_start":101,"line_end":101,"column_start":5,"column_end":11}},{"value":"/ # });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149947,"byte_end":149956,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149961,"byte_end":149968,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149973,"byte_end":149980,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150297,"byte_end":150308,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"fn () -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150104,"byte_end":150164,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150169,"byte_end":150172,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150177,"byte_end":150228,"line_start":111,"line_end":111,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150233,"byte_end":150236,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150241,"byte_end":150285,"line_start":113,"line_end":113,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5045},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":151833,"byte_end":151838,"line_start":158,"line_end":158,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5047},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":155957,"byte_end":155965,"line_start":262,"line_end":262,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5051},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159354,"byte_end":159368,"line_start":332,"line_end":332,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"fn <F, R> (&self, f: F) -> JoinHandle<R>","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159757,"byte_end":159772,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159677,"byte_end":159745,"line_start":344,"line_end":344,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5464},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112496,"byte_end":112503,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111484,"byte_end":111506,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111507,"byte_end":111510,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111511,"byte_end":111588,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111589,"byte_end":111640,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111641,"byte_end":111644,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111645,"byte_end":111725,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111726,"byte_end":111811,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111812,"byte_end":111815,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111816,"byte_end":111875,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111876,"byte_end":111879,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111880,"byte_end":111894,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111895,"byte_end":111898,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111899,"byte_end":111978,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111979,"byte_end":112038,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112039,"byte_end":112042,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112043,"byte_end":112081,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112082,"byte_end":112133,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112134,"byte_end":112157,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112158,"byte_end":112161,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112162,"byte_end":112234,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112235,"byte_end":112308,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112309,"byte_end":112332,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112333,"byte_end":112336,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112337,"byte_end":112361,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112362,"byte_end":112383,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112384,"byte_end":112408,"line_start":271,"line_end":271,"column_start":1,"column_end":25}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112409,"byte_end":112440,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112441,"byte_end":112467,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114724,"byte_end":114727,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113317,"byte_end":113385,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113390,"byte_end":113393,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113398,"byte_end":113464,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113469,"byte_end":113542,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113547,"byte_end":113618,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113623,"byte_end":113698,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113703,"byte_end":113741,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113746,"byte_end":113749,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113754,"byte_end":113814,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113819,"byte_end":113893,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113898,"byte_end":113901,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113906,"byte_end":113982,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113987,"byte_end":114063,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114068,"byte_end":114134,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114139,"byte_end":114142,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114147,"byte_end":114206,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114211,"byte_end":114214,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114219,"byte_end":114233,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114238,"byte_end":114241,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114246,"byte_end":114309,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114314,"byte_end":114317,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114322,"byte_end":114329,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114334,"byte_end":114366,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114371,"byte_end":114374,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114379,"byte_end":114406,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114411,"byte_end":114429,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114434,"byte_end":114437,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114442,"byte_end":114467,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114472,"byte_end":114479,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114484,"byte_end":114487,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114492,"byte_end":114513,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114518,"byte_end":114547,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114552,"byte_end":114607,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114612,"byte_end":114661,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114666,"byte_end":114712,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116317,"byte_end":116322,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115137,"byte_end":115179,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115184,"byte_end":115187,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115192,"byte_end":115263,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115268,"byte_end":115343,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115348,"byte_end":115371,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115376,"byte_end":115379,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115384,"byte_end":115443,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115448,"byte_end":115451,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115456,"byte_end":115477,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115482,"byte_end":115485,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115490,"byte_end":115504,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115509,"byte_end":115512,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115517,"byte_end":115524,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115529,"byte_end":115561,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115566,"byte_end":115569,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115574,"byte_end":115590,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115595,"byte_end":115620,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115625,"byte_end":115662,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115667,"byte_end":115670,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115675,"byte_end":115713,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115718,"byte_end":115738,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115743,"byte_end":115794,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115799,"byte_end":115806,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115811,"byte_end":115818,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115823,"byte_end":115830,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115835,"byte_end":115838,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115843,"byte_end":115855,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115860,"byte_end":115863,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115868,"byte_end":115941,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115946,"byte_end":116011,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116016,"byte_end":116077,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116082,"byte_end":116109,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116114,"byte_end":116117,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116122,"byte_end":116153,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116158,"byte_end":116216,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116221,"byte_end":116273,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116278,"byte_end":116305,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117943,"byte_end":117951,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116724,"byte_end":116798,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116803,"byte_end":116819,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116824,"byte_end":116827,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116832,"byte_end":116899,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116904,"byte_end":116977,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116982,"byte_end":117047,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117052,"byte_end":117055,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117060,"byte_end":117136,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117141,"byte_end":117207,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117212,"byte_end":117284,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117289,"byte_end":117312,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117317,"byte_end":117320,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117325,"byte_end":117388,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117393,"byte_end":117396,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117401,"byte_end":117413,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117418,"byte_end":117421,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117426,"byte_end":117504,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117509,"byte_end":117544,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117549,"byte_end":117552,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117557,"byte_end":117571,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117576,"byte_end":117579,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117584,"byte_end":117597,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117602,"byte_end":117634,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117639,"byte_end":117642,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117647,"byte_end":117672,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117677,"byte_end":117718,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117723,"byte_end":117726,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117731,"byte_end":117802,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117807,"byte_end":117830,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117835,"byte_end":117861,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117866,"byte_end":117873,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117878,"byte_end":117885,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117890,"byte_end":117893,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117898,"byte_end":117931,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119473,"byte_end":119478,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118357,"byte_end":118432,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118437,"byte_end":118515,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118520,"byte_end":118588,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118593,"byte_end":118596,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118601,"byte_end":118658,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118663,"byte_end":118666,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118671,"byte_end":118711,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118716,"byte_end":118763,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118768,"byte_end":118823,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118828,"byte_end":118865,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118870,"byte_end":118873,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118878,"byte_end":118891,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118896,"byte_end":118899,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118904,"byte_end":118911,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118916,"byte_end":118948,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118953,"byte_end":118956,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118961,"byte_end":119003,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119008,"byte_end":119070,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119075,"byte_end":119108,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119113,"byte_end":119145,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119150,"byte_end":119161,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119166,"byte_end":119171,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119176,"byte_end":119179,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119184,"byte_end":119199,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119204,"byte_end":119245,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119250,"byte_end":119253,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119258,"byte_end":119301,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119306,"byte_end":119309,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119314,"byte_end":119389,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119394,"byte_end":119439,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119444,"byte_end":119449,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119454,"byte_end":119461,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120065,"byte_end":120071,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"fn (&self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119585,"byte_end":119630,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119635,"byte_end":119638,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119643,"byte_end":119727,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119732,"byte_end":119792,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119797,"byte_end":119800,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119805,"byte_end":119819,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119824,"byte_end":119827,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119832,"byte_end":119839,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119844,"byte_end":119876,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119881,"byte_end":119884,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119889,"byte_end":119916,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119921,"byte_end":119939,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119944,"byte_end":119947,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119952,"byte_end":119981,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119986,"byte_end":119989,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119994,"byte_end":120041,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120046,"byte_end":120053,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121479,"byte_end":121495,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"fn (self, duration: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120124,"byte_end":120196,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120201,"byte_end":120222,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120227,"byte_end":120230,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120235,"byte_end":120310,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120315,"byte_end":120388,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120393,"byte_end":120470,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120475,"byte_end":120546,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120551,"byte_end":120554,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120559,"byte_end":120633,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120638,"byte_end":120712,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120717,"byte_end":120792,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120797,"byte_end":120873,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120878,"byte_end":120923,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120928,"byte_end":120931,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120936,"byte_end":120950,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120955,"byte_end":120958,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120963,"byte_end":120970,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120975,"byte_end":121007,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121012,"byte_end":121032,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121037,"byte_end":121040,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121045,"byte_end":121065,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121070,"byte_end":121098,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121103,"byte_end":121106,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121111,"byte_end":121126,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121131,"byte_end":121180,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121185,"byte_end":121188,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121193,"byte_end":121229,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121234,"byte_end":121275,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121280,"byte_end":121338,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121343,"byte_end":121357,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121362,"byte_end":121372,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121377,"byte_end":121380,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121385,"byte_end":121445,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121450,"byte_end":121455,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121460,"byte_end":121467,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5510},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5567},{"krate":0,"index":5571}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20775,"byte_end":20801,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20876,"byte_end":20893,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819498,"byte_end":8819540,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819541,"byte_end":8819544,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819545,"byte_end":8819622,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819623,"byte_end":8819701,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819702,"byte_end":8819782,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819783,"byte_end":8819811,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819812,"byte_end":8819815,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819816,"byte_end":8819891,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819892,"byte_end":8819925,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819926,"byte_end":8819929,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819930,"byte_end":8819944,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819945,"byte_end":8819948,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819949,"byte_end":8819984,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819985,"byte_end":8819988,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8819989,"byte_end":8820007,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820008,"byte_end":8820030,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820031,"byte_end":8820034,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820035,"byte_end":8820053,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820054,"byte_end":8820117,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820118,"byte_end":8820150,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820151,"byte_end":8820188,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820189,"byte_end":8820203,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820204,"byte_end":8820209,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820210,"byte_end":8820217,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820218,"byte_end":8820221,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820222,"byte_end":8820249,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820250,"byte_end":8820253,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820254,"byte_end":8820272,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820273,"byte_end":8820293,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820294,"byte_end":8820344,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820345,"byte_end":8820348,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820349,"byte_end":8820367,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820368,"byte_end":8820431,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820432,"byte_end":8820480,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820481,"byte_end":8820536,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820537,"byte_end":8820540,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820541,"byte_end":8820591,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820592,"byte_end":8820606,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820607,"byte_end":8820639,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820640,"byte_end":8820679,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820680,"byte_end":8820689,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820690,"byte_end":8820695,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820696,"byte_end":8820703,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820704,"byte_end":8820711,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5515},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822787,"byte_end":8822793,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"fn () -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821085,"byte_end":8821151,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821152,"byte_end":8821155,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821156,"byte_end":8821233,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821234,"byte_end":8821312,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821313,"byte_end":8821362,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821363,"byte_end":8821366,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821367,"byte_end":8821443,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821444,"byte_end":8821522,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821523,"byte_end":8821561,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821562,"byte_end":8821565,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821566,"byte_end":8821579,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821580,"byte_end":8821583,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821584,"byte_end":8821666,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821667,"byte_end":8821747,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821748,"byte_end":8821829,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821830,"byte_end":8821855,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821856,"byte_end":8821859,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821860,"byte_end":8821933,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8821934,"byte_end":8822006,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822007,"byte_end":8822085,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822086,"byte_end":8822163,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822164,"byte_end":8822240,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822241,"byte_end":8822320,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822321,"byte_end":8822345,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822346,"byte_end":8822349,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822350,"byte_end":8822428,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822429,"byte_end":8822489,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822490,"byte_end":8822493,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822494,"byte_end":8822508,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822509,"byte_end":8822512,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822513,"byte_end":8822531,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822532,"byte_end":8822554,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822555,"byte_end":8822558,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822559,"byte_end":8822577,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822578,"byte_end":8822599,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822600,"byte_end":8822639,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822640,"byte_end":8822643,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822644,"byte_end":8822712,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822713,"byte_end":8822716,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822717,"byte_end":8822759,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822760,"byte_end":8822765,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8822766,"byte_end":8822773,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5571},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":5572},{"krate":0,"index":5575},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5612},{"krate":0,"index":5671},{"krate":0,"index":5677},{"krate":0,"index":5675},{"krate":0,"index":5674},{"krate":0,"index":5614},{"krate":0,"index":5627},{"krate":0,"index":5631},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5679},{"krate":0,"index":5681},{"krate":0,"index":5638},{"krate":0,"index":5640},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5644},{"krate":0,"index":5645},{"krate":0,"index":5688},{"krate":0,"index":5652}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832231,"byte_end":8832275,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832276,"byte_end":8832279,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832280,"byte_end":8832354,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832355,"byte_end":8832412,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832414,"byte_end":8832427,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5671},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833742,"byte_end":8833752,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833643,"byte_end":8833700,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5615},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834151,"byte_end":8834159,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"fn (signum: c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833784,"byte_end":8833832,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833837,"byte_end":8833840,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833845,"byte_end":8833914,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833919,"byte_end":8833931,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833936,"byte_end":8833954,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833959,"byte_end":8834001,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834006,"byte_end":8834028,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834033,"byte_end":8834078,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834083,"byte_end":8834127,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834132,"byte_end":8834139,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834413,"byte_end":8834418,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834217,"byte_end":8834251,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834256,"byte_end":8834259,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834264,"byte_end":8834339,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834344,"byte_end":8834401,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834660,"byte_end":8834665,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834470,"byte_end":8834504,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834509,"byte_end":8834512,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834517,"byte_end":8834591,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834596,"byte_end":8834648,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834911,"byte_end":8834917,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834717,"byte_end":8834750,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834755,"byte_end":8834758,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834763,"byte_end":8834837,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8834842,"byte_end":8834899,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835570,"byte_end":8835579,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835387,"byte_end":8835420,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835425,"byte_end":8835428,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835433,"byte_end":8835496,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835501,"byte_end":8835558,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835828,"byte_end":8835830,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835630,"byte_end":8835662,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835667,"byte_end":8835670,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835675,"byte_end":8835747,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835752,"byte_end":8835816,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836114,"byte_end":8836118,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835880,"byte_end":8835914,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835919,"byte_end":8835922,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8835927,"byte_end":8836001,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836006,"byte_end":8836081,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836086,"byte_end":8836102,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836421,"byte_end":8836425,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836170,"byte_end":8836204,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836209,"byte_end":8836212,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836217,"byte_end":8836283,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836288,"byte_end":8836347,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836352,"byte_end":8836409,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836673,"byte_end":8836682,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836477,"byte_end":8836511,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836516,"byte_end":8836519,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836524,"byte_end":8836590,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836595,"byte_end":8836661,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5624},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836905,"byte_end":8836918,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836734,"byte_end":8836768,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836773,"byte_end":8836776,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836781,"byte_end":8836831,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836836,"byte_end":8836893,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837141,"byte_end":8837154,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8836970,"byte_end":8837004,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837009,"byte_end":8837012,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837017,"byte_end":8837067,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837072,"byte_end":8837129,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837386,"byte_end":8837399,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837206,"byte_end":8837241,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837246,"byte_end":8837249,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837254,"byte_end":8837330,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837335,"byte_end":8837374,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5683},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844822,"byte_end":8844828,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5685}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842057,"byte_end":8842125,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842126,"byte_end":8842129,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842130,"byte_end":8842203,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842204,"byte_end":8842282,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842283,"byte_end":8842320,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842321,"byte_end":8842324,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842325,"byte_end":8842395,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842396,"byte_end":8842471,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842472,"byte_end":8842549,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842550,"byte_end":8842629,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842630,"byte_end":8842703,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842704,"byte_end":8842780,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842781,"byte_end":8842858,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842859,"byte_end":8842887,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842888,"byte_end":8842891,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842892,"byte_end":8842972,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8842973,"byte_end":8843020,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843021,"byte_end":8843024,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843025,"byte_end":8843098,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843099,"byte_end":8843177,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843178,"byte_end":8843224,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843225,"byte_end":8843228,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843229,"byte_end":8843305,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843306,"byte_end":8843380,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843381,"byte_end":8843397,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843398,"byte_end":8843401,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843402,"byte_end":8843415,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843416,"byte_end":8843419,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843420,"byte_end":8843494,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843495,"byte_end":8843572,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843573,"byte_end":8843650,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843651,"byte_end":8843672,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843673,"byte_end":8843676,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843677,"byte_end":8843750,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843751,"byte_end":8843826,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843827,"byte_end":8843903,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843904,"byte_end":8843980,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8843981,"byte_end":8844058,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844059,"byte_end":8844124,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844125,"byte_end":8844128,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844129,"byte_end":8844207,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844208,"byte_end":8844268,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844269,"byte_end":8844272,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844273,"byte_end":8844287,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844288,"byte_end":8844291,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844292,"byte_end":8844311,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844312,"byte_end":8844315,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844316,"byte_end":8844334,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844335,"byte_end":8844385,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844386,"byte_end":8844389,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844390,"byte_end":8844408,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844409,"byte_end":8844472,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844473,"byte_end":8844521,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844522,"byte_end":8844577,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844578,"byte_end":8844581,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844582,"byte_end":8844632,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844633,"byte_end":8844647,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844648,"byte_end":8844680,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844681,"byte_end":8844720,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844721,"byte_end":8844730,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844731,"byte_end":8844736,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844737,"byte_end":8844744,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844745,"byte_end":8844793,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5644},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845946,"byte_end":8845952,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"fn (kind: SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844876,"byte_end":8844950,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8844951,"byte_end":8845000,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845001,"byte_end":8845004,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845005,"byte_end":8845083,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845084,"byte_end":8845148,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845149,"byte_end":8845223,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845224,"byte_end":8845271,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845272,"byte_end":8845275,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845276,"byte_end":8845343,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845344,"byte_end":8845417,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845418,"byte_end":8845466,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845467,"byte_end":8845470,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845471,"byte_end":8845538,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845539,"byte_end":8845608,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845609,"byte_end":8845659,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845660,"byte_end":8845663,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845664,"byte_end":8845676,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845677,"byte_end":8845680,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845681,"byte_end":8845739,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845740,"byte_end":8845808,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845809,"byte_end":8845838,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](https://docs.rs/signal-hook/*/signal_hook/fn.register.html#panics)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8845839,"byte_end":8845938,"line_start":404,"line_end":404,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847163,"byte_end":8847167,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"fn (&mut self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846456,"byte_end":8846504,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846509,"byte_end":8846512,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846517,"byte_end":8846589,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846594,"byte_end":8846597,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846602,"byte_end":8846616,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846621,"byte_end":8846624,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846629,"byte_end":8846648,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846653,"byte_end":8846656,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846661,"byte_end":8846679,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846684,"byte_end":8846734,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846739,"byte_end":8846742,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846747,"byte_end":8846765,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846770,"byte_end":8846833,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846838,"byte_end":8846886,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846891,"byte_end":8846946,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846951,"byte_end":8846954,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846959,"byte_end":8847009,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847014,"byte_end":8847028,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847033,"byte_end":8847065,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847070,"byte_end":8847109,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847114,"byte_end":8847123,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847128,"byte_end":8847133,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847138,"byte_end":8847145,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5651},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848116,"byte_end":8848125,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847289,"byte_end":8847359,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847364,"byte_end":8847384,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847389,"byte_end":8847392,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847397,"byte_end":8847469,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847474,"byte_end":8847477,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847482,"byte_end":8847496,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847501,"byte_end":8847504,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847509,"byte_end":8847555,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847560,"byte_end":8847563,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847568,"byte_end":8847586,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847591,"byte_end":8847613,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847618,"byte_end":8847646,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847651,"byte_end":8847686,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847691,"byte_end":8847727,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847732,"byte_end":8847735,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847740,"byte_end":8847761,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847766,"byte_end":8847789,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847794,"byte_end":8847799,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847804,"byte_end":8847807,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847812,"byte_end":8847842,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847847,"byte_end":8847880,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847885,"byte_end":8847888,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847893,"byte_end":8847980,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8847985,"byte_end":8848026,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848031,"byte_end":8848068,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848073,"byte_end":8848082,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848087,"byte_end":8848092,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848097,"byte_end":8848104,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5691},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":5692},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5868},{"krate":0,"index":5871},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6059},{"krate":0,"index":6062},{"krate":0,"index":6082},{"krate":0,"index":6085},{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6240},{"krate":0,"index":6355},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6276},{"krate":0,"index":6278}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21007,"byte_end":21033,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857295,"byte_end":8857326,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857327,"byte_end":8857330,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857331,"byte_end":8857476,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857477,"byte_end":8857480,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8857481,"byte_end":8857532,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6279},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8882984,"byte_end":8882993,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6283},{"krate":0,"index":6284}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8882830,"byte_end":8882887,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8882905,"byte_end":8882972,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6290},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884147,"byte_end":8884156,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6294},{"krate":0,"index":6295}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8883993,"byte_end":8884050,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884068,"byte_end":8884135,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10020},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8885276,"byte_end":8885281,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10023},{"krate":0,"index":10024}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9999},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886514,"byte_end":8886521,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10002},{"krate":0,"index":10003}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5769},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887086,"byte_end":8887096,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886673,"byte_end":8886726,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886727,"byte_end":8886730,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886731,"byte_end":8886796,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886797,"byte_end":8886853,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886854,"byte_end":8886857,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886858,"byte_end":8886876,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886877,"byte_end":8886880,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886881,"byte_end":8886960,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8886961,"byte_end":8887036,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887037,"byte_end":8887075,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":5840},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891997,"byte_end":8892011,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5844},{"krate":0,"index":5845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5842},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892091,"byte_end":8892101,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":5840},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892025,"byte_end":8892077,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5843},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892153,"byte_end":8892163,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"fn (lower: usize, upper: Option<usize>) -> Self::Collection","parent":{"krate":0,"index":5840},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892112,"byte_end":8892141,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5844},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892380,"byte_end":8892386,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"fn (collection: &mut Self::Collection, item: T) -> bool","parent":{"krate":0,"index":5840},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892230,"byte_end":8892278,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892287,"byte_end":8892290,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892299,"byte_end":8892368,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5845},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892502,"byte_end":8892510,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"fn (collection: &mut Self::Collection) -> Self","parent":{"krate":0,"index":5840},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8892449,"byte_end":8892490,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6301},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892793,"byte_end":8892798,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892677,"byte_end":8892715,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892733,"byte_end":8892781,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5861},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893388,"byte_end":8893393,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892923,"byte_end":8892964,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892965,"byte_end":8892968,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892969,"byte_end":8893037,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893038,"byte_end":8893114,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893115,"byte_end":8893125,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893126,"byte_end":8893129,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893130,"byte_end":8893144,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893145,"byte_end":8893148,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893149,"byte_end":8893165,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893166,"byte_end":8893169,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893170,"byte_end":8893177,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893178,"byte_end":8893219,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893220,"byte_end":8893223,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893224,"byte_end":8893242,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893243,"byte_end":8893264,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893265,"byte_end":8893311,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893312,"byte_end":8893315,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893316,"byte_end":8893360,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893361,"byte_end":8893366,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893367,"byte_end":8893374,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9926},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8893976,"byte_end":8893982,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9929},{"krate":0,"index":9930}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9881},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895414,"byte_end":8895423,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9884},{"krate":0,"index":9885}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9853},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8896840,"byte_end":8896850,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":9857},{"krate":0,"index":9858},{"krate":0,"index":9859}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9805},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8898006,"byte_end":8898010,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9807}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6308},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899133,"byte_end":8899137,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6310}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899018,"byte_end":8899055,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899073,"byte_end":8899121,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5962},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899711,"byte_end":8899715,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899189,"byte_end":8899253,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899254,"byte_end":8899282,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899283,"byte_end":8899286,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899287,"byte_end":8899360,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899361,"byte_end":8899416,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899417,"byte_end":8899420,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899421,"byte_end":8899428,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899429,"byte_end":8899451,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899452,"byte_end":8899493,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899494,"byte_end":8899497,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899498,"byte_end":8899546,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899547,"byte_end":8899550,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899551,"byte_end":8899597,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899598,"byte_end":8899644,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899645,"byte_end":8899687,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899688,"byte_end":8899695,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899696,"byte_end":8899703,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9738},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900454,"byte_end":8900457,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9741},{"krate":0,"index":9742}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9689},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8901527,"byte_end":8901532,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":9692},{"krate":0,"index":9693},{"krate":0,"index":9694}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6314},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903407,"byte_end":8903411,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6317}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903251,"byte_end":8903310,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903328,"byte_end":8903395,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6322},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904098,"byte_end":8904102,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6324}],"decl_id":null,"docs":" Stream for the [`once`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8903983,"byte_end":8904020,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904038,"byte_end":8904086,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6052},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904674,"byte_end":8904678,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (value: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904178,"byte_end":8904234,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904235,"byte_end":8904238,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904239,"byte_end":8904318,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904319,"byte_end":8904322,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904323,"byte_end":8904337,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904338,"byte_end":8904341,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904342,"byte_end":8904349,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904350,"byte_end":8904391,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904392,"byte_end":8904395,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904396,"byte_end":8904414,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904415,"byte_end":8904436,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904437,"byte_end":8904475,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904476,"byte_end":8904514,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904515,"byte_end":8904518,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904519,"byte_end":8904565,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904566,"byte_end":8904569,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904570,"byte_end":8904608,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904609,"byte_end":8904652,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904653,"byte_end":8904658,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904659,"byte_end":8904666,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6328},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905289,"byte_end":8905296,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905171,"byte_end":8905211,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905229,"byte_end":8905277,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6075},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8906036,"byte_end":8906043,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905427,"byte_end":8905467,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905468,"byte_end":8905471,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905472,"byte_end":8905530,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905531,"byte_end":8905602,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905603,"byte_end":8905672,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905673,"byte_end":8905717,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905718,"byte_end":8905721,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905722,"byte_end":8905736,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905737,"byte_end":8905740,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905741,"byte_end":8905757,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905758,"byte_end":8905761,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905762,"byte_end":8905775,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905776,"byte_end":8905817,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905818,"byte_end":8905821,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905822,"byte_end":8905840,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905841,"byte_end":8905862,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905863,"byte_end":8905912,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905913,"byte_end":8905916,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905917,"byte_end":8905952,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905953,"byte_end":8905980,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905981,"byte_end":8905984,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905985,"byte_end":8906008,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8906009,"byte_end":8906014,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8906015,"byte_end":8906022,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911692,"byte_end":8911701,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6338}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906460,"byte_end":8906536,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906537,"byte_end":8906545,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906546,"byte_end":8906549,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906550,"byte_end":8906627,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906628,"byte_end":8906704,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906705,"byte_end":8906781,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906782,"byte_end":8906816,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906817,"byte_end":8906820,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906821,"byte_end":8906841,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906842,"byte_end":8906845,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906846,"byte_end":8906889,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906890,"byte_end":8906950,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8906951,"byte_end":8907029,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907030,"byte_end":8907063,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907064,"byte_end":8907067,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907068,"byte_end":8907147,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907148,"byte_end":8907228,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907229,"byte_end":8907301,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907302,"byte_end":8907326,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907327,"byte_end":8907330,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907331,"byte_end":8907344,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907345,"byte_end":8907348,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907349,"byte_end":8907427,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907428,"byte_end":8907497,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907498,"byte_end":8907577,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907578,"byte_end":8907609,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907610,"byte_end":8907613,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907614,"byte_end":8907634,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907635,"byte_end":8907638,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907639,"byte_end":8907716,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907717,"byte_end":8907794,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907795,"byte_end":8907872,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907873,"byte_end":8907947,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8907948,"byte_end":8908026,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908027,"byte_end":8908104,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908105,"byte_end":8908126,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908127,"byte_end":8908130,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908131,"byte_end":8908188,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908189,"byte_end":8908220,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908221,"byte_end":8908244,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908245,"byte_end":8908283,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908284,"byte_end":8908287,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908288,"byte_end":8908302,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908303,"byte_end":8908306,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908307,"byte_end":8908380,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908381,"byte_end":8908384,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908385,"byte_end":8908392,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908393,"byte_end":8908439,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908440,"byte_end":8908466,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908467,"byte_end":8908470,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908471,"byte_end":8908489,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908490,"byte_end":8908511,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908512,"byte_end":8908559,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908560,"byte_end":8908607,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908608,"byte_end":8908611,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908612,"byte_end":8908645,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908646,"byte_end":8908685,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908686,"byte_end":8908689,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908690,"byte_end":8908770,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908771,"byte_end":8908843,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908844,"byte_end":8908882,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908883,"byte_end":8908894,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908895,"byte_end":8908898,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908899,"byte_end":8908932,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908933,"byte_end":8908972,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8908973,"byte_end":8909011,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909012,"byte_end":8909023,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909024,"byte_end":8909027,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909028,"byte_end":8909067,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909068,"byte_end":8909071,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909072,"byte_end":8909102,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909103,"byte_end":8909134,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909135,"byte_end":8909166,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909167,"byte_end":8909170,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909171,"byte_end":8909192,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909193,"byte_end":8909216,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909217,"byte_end":8909272,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909273,"byte_end":8909276,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909277,"byte_end":8909306,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909307,"byte_end":8909342,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909343,"byte_end":8909363,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909364,"byte_end":8909399,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909400,"byte_end":8909413,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909414,"byte_end":8909417,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909418,"byte_end":8909484,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909485,"byte_end":8909513,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909514,"byte_end":8909523,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909524,"byte_end":8909529,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909530,"byte_end":8909537,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909538,"byte_end":8909541,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909542,"byte_end":8909620,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909621,"byte_end":8909697,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909698,"byte_end":8909738,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909739,"byte_end":8909742,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909743,"byte_end":8909820,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909821,"byte_end":8909858,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909859,"byte_end":8909862,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909863,"byte_end":8909876,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909877,"byte_end":8909931,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909932,"byte_end":8909935,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909936,"byte_end":8909954,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909955,"byte_end":8909976,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8909977,"byte_end":8909999,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910000,"byte_end":8910005,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910006,"byte_end":8910009,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910010,"byte_end":8910060,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910061,"byte_end":8910116,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910117,"byte_end":8910147,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910148,"byte_end":8910153,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910154,"byte_end":8910157,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910158,"byte_end":8910234,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910235,"byte_end":8910301,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910302,"byte_end":8910346,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910347,"byte_end":8910377,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910378,"byte_end":8910383,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910384,"byte_end":8910387,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910388,"byte_end":8910406,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910407,"byte_end":8910428,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910429,"byte_end":8910473,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910474,"byte_end":8910477,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910478,"byte_end":8910528,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910529,"byte_end":8910559,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910560,"byte_end":8910586,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910587,"byte_end":8910590,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910591,"byte_end":8910605,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910606,"byte_end":8910634,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910635,"byte_end":8910679,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910680,"byte_end":8910711,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910712,"byte_end":8910760,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910761,"byte_end":8910837,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910838,"byte_end":8910879,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910880,"byte_end":8910931,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910932,"byte_end":8910988,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8910989,"byte_end":8911014,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911015,"byte_end":8911064,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911065,"byte_end":8911116,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911117,"byte_end":8911142,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911143,"byte_end":8911164,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911165,"byte_end":8911182,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911183,"byte_end":8911239,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911240,"byte_end":8911320,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911321,"byte_end":8911363,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911364,"byte_end":8911414,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911415,"byte_end":8911432,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911433,"byte_end":8911508,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911509,"byte_end":8911585,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911586,"byte_end":8911616,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911617,"byte_end":8911630,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911631,"byte_end":8911640,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911641,"byte_end":8911646,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911647,"byte_end":8911654,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6096},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912174,"byte_end":8912177,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"fn () -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911806,"byte_end":8911839,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911844,"byte_end":8911847,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911852,"byte_end":8911926,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911931,"byte_end":8911980,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911985,"byte_end":8911988,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911993,"byte_end":8912007,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912012,"byte_end":8912015,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912020,"byte_end":8912027,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912032,"byte_end":8912076,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912081,"byte_end":8912084,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912089,"byte_end":8912150,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912155,"byte_end":8912162,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6097},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912682,"byte_end":8912695,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"fn (capacity: usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912250,"byte_end":8912311,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912316,"byte_end":8912319,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912324,"byte_end":8912400,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912405,"byte_end":8912476,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912481,"byte_end":8912484,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912489,"byte_end":8912503,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912508,"byte_end":8912511,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912516,"byte_end":8912523,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912528,"byte_end":8912572,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912577,"byte_end":8912580,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912585,"byte_end":8912658,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912663,"byte_end":8912670,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6098},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913313,"byte_end":8913317,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912826,"byte_end":8912887,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912892,"byte_end":8912895,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912900,"byte_end":8912939,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912944,"byte_end":8912947,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912952,"byte_end":8912966,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912971,"byte_end":8912974,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912979,"byte_end":8912986,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8912991,"byte_end":8913035,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913040,"byte_end":8913043,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913048,"byte_end":8913083,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913088,"byte_end":8913091,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913096,"byte_end":8913134,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913139,"byte_end":8913170,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913175,"byte_end":8913206,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913211,"byte_end":8913214,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913219,"byte_end":8913246,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913251,"byte_end":8913279,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913284,"byte_end":8913289,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913294,"byte_end":8913301,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913901,"byte_end":8913907,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913410,"byte_end":8913465,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913470,"byte_end":8913473,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913478,"byte_end":8913517,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913522,"byte_end":8913525,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913530,"byte_end":8913544,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913549,"byte_end":8913552,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913557,"byte_end":8913564,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913569,"byte_end":8913613,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913618,"byte_end":8913621,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913626,"byte_end":8913661,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913666,"byte_end":8913669,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913674,"byte_end":8913712,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913717,"byte_end":8913748,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913753,"byte_end":8913784,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913789,"byte_end":8913792,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913797,"byte_end":8913829,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913834,"byte_end":8913867,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913872,"byte_end":8913877,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8913882,"byte_end":8913889,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914507,"byte_end":8914517,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914000,"byte_end":8914063,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914068,"byte_end":8914071,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914076,"byte_end":8914119,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914124,"byte_end":8914127,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914132,"byte_end":8914146,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914151,"byte_end":8914154,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914159,"byte_end":8914166,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914171,"byte_end":8914215,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914220,"byte_end":8914223,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914228,"byte_end":8914263,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914268,"byte_end":8914271,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914276,"byte_end":8914314,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914319,"byte_end":8914350,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914355,"byte_end":8914386,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914391,"byte_end":8914394,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914399,"byte_end":8914435,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914440,"byte_end":8914473,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914478,"byte_end":8914483,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914488,"byte_end":8914495,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6107},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915095,"byte_end":8915103,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914622,"byte_end":8914694,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914699,"byte_end":8914702,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914707,"byte_end":8914778,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914783,"byte_end":8914849,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914854,"byte_end":8914857,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914862,"byte_end":8914876,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914881,"byte_end":8914884,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914889,"byte_end":8914896,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914901,"byte_end":8914945,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914950,"byte_end":8914953,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8914958,"byte_end":8915031,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915036,"byte_end":8915071,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915076,"byte_end":8915083,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6108},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915479,"byte_end":8915482,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915165,"byte_end":8915210,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915215,"byte_end":8915218,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915223,"byte_end":8915237,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915242,"byte_end":8915245,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915250,"byte_end":8915257,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915262,"byte_end":8915306,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915311,"byte_end":8915314,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915319,"byte_end":8915352,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915357,"byte_end":8915384,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915389,"byte_end":8915423,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915428,"byte_end":8915455,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915460,"byte_end":8915467,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915833,"byte_end":8915841,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915539,"byte_end":8915590,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915595,"byte_end":8915598,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915603,"byte_end":8915617,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915622,"byte_end":8915625,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915630,"byte_end":8915637,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915642,"byte_end":8915676,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915681,"byte_end":8915684,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915689,"byte_end":8915720,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915725,"byte_end":8915751,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915756,"byte_end":8915777,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915782,"byte_end":8915809,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915814,"byte_end":8915821,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6110},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916253,"byte_end":8916258,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915902,"byte_end":8915972,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8915977,"byte_end":8915998,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916003,"byte_end":8916006,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916011,"byte_end":8916025,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916030,"byte_end":8916033,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916038,"byte_end":8916045,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916050,"byte_end":8916094,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916099,"byte_end":8916102,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916107,"byte_end":8916140,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916145,"byte_end":8916179,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916184,"byte_end":8916198,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916203,"byte_end":8916229,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916234,"byte_end":8916241,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6111},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916933,"byte_end":8916939,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"fn (&mut self, k: K, stream: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916313,"byte_end":8916355,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916360,"byte_end":8916363,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916368,"byte_end":8916433,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916438,"byte_end":8916441,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916446,"byte_end":8916521,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916526,"byte_end":8916565,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916570,"byte_end":8916573,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916578,"byte_end":8916592,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916597,"byte_end":8916600,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916605,"byte_end":8916612,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916617,"byte_end":8916661,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916666,"byte_end":8916669,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916674,"byte_end":8916709,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916714,"byte_end":8916717,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916722,"byte_end":8916778,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916783,"byte_end":8916812,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916817,"byte_end":8916820,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916825,"byte_end":8916855,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916860,"byte_end":8916909,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8916914,"byte_end":8916921,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6112},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917670,"byte_end":8917676,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917118,"byte_end":8917219,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917224,"byte_end":8917227,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917232,"byte_end":8917306,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917311,"byte_end":8917375,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917380,"byte_end":8917383,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917388,"byte_end":8917402,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917407,"byte_end":8917410,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917415,"byte_end":8917422,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917427,"byte_end":8917471,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917476,"byte_end":8917479,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917484,"byte_end":8917519,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917524,"byte_end":8917560,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917565,"byte_end":8917603,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917608,"byte_end":8917646,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917651,"byte_end":8917658,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6114},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918510,"byte_end":8918522,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8917978,"byte_end":8918048,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918053,"byte_end":8918056,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918061,"byte_end":8918135,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918140,"byte_end":8918204,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918209,"byte_end":8918212,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918217,"byte_end":8918231,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918236,"byte_end":8918239,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918244,"byte_end":8918251,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918256,"byte_end":8918300,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918305,"byte_end":8918308,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918313,"byte_end":8918348,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918353,"byte_end":8918389,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918394,"byte_end":8918437,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918442,"byte_end":8918486,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918491,"byte_end":8918498,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9652},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921462,"byte_end":8921466,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":9654},{"krate":0,"index":9655}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9607},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923028,"byte_end":8923037,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":9610},{"krate":0,"index":9611}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6347},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924841,"byte_end":8924848,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6350}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924677,"byte_end":8924744,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924762,"byte_end":8924829,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9570},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8925697,"byte_end":8925701,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9572},{"krate":0,"index":9573}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9521},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8927544,"byte_end":8927553,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525},{"krate":0,"index":9526}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9498},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":8959221,"byte_end":8959228,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9500},{"krate":0,"index":9501},{"krate":0,"index":9502},{"krate":0,"index":9503}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6242},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858536,"byte_end":8858545,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6252},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":6259},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6264},{"krate":0,"index":6266},{"krate":0,"index":6268},{"krate":0,"index":6270},{"krate":0,"index":6273},{"krate":0,"index":6275}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858425,"byte_end":8858499,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858500,"byte_end":8858525,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6243},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859615,"byte_end":8859619,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858560,"byte_end":8858630,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858635,"byte_end":8858658,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858663,"byte_end":8858666,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858671,"byte_end":8858689,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858694,"byte_end":8858697,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858702,"byte_end":8858715,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858720,"byte_end":8858771,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858776,"byte_end":8858783,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858788,"byte_end":8858791,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858796,"byte_end":8858864,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858869,"byte_end":8858944,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858949,"byte_end":8859024,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859029,"byte_end":8859083,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859088,"byte_end":8859163,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859168,"byte_end":8859178,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859183,"byte_end":8859186,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859191,"byte_end":8859205,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859210,"byte_end":8859213,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859218,"byte_end":8859225,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859230,"byte_end":8859250,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859255,"byte_end":8859278,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859283,"byte_end":8859324,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859329,"byte_end":8859332,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859337,"byte_end":8859378,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859383,"byte_end":8859386,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859391,"byte_end":8859436,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859441,"byte_end":8859486,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859491,"byte_end":8859536,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859541,"byte_end":8859583,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859588,"byte_end":8859595,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859600,"byte_end":8859607,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6244},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860690,"byte_end":8860698,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"fn <T, E> (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859721,"byte_end":8859789,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859794,"byte_end":8859862,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859867,"byte_end":8859870,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859875,"byte_end":8859893,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859898,"byte_end":8859901,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859906,"byte_end":8859919,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859924,"byte_end":8859981,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859986,"byte_end":8859993,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8859998,"byte_end":8860001,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860006,"byte_end":8860070,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860075,"byte_end":8860137,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860142,"byte_end":8860202,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860207,"byte_end":8860250,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860255,"byte_end":8860258,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860263,"byte_end":8860277,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860282,"byte_end":8860285,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860290,"byte_end":8860297,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860302,"byte_end":8860322,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860327,"byte_end":8860350,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860355,"byte_end":8860396,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860401,"byte_end":8860404,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860409,"byte_end":8860476,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860481,"byte_end":8860484,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860489,"byte_end":8860542,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860547,"byte_end":8860600,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860605,"byte_end":8860658,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860663,"byte_end":8860670,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860675,"byte_end":8860682,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6247},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861766,"byte_end":8861769,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860842,"byte_end":8860917,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860922,"byte_end":8860945,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860950,"byte_end":8860953,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8860958,"byte_end":8861030,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861035,"byte_end":8861099,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861104,"byte_end":8861141,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861146,"byte_end":8861149,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861154,"byte_end":8861230,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861235,"byte_end":8861306,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861311,"byte_end":8861332,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861337,"byte_end":8861340,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861345,"byte_end":8861359,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861364,"byte_end":8861367,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861372,"byte_end":8861379,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861384,"byte_end":8861404,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861409,"byte_end":8861432,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861437,"byte_end":8861478,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861483,"byte_end":8861486,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861491,"byte_end":8861528,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861533,"byte_end":8861576,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861581,"byte_end":8861584,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861589,"byte_end":8861634,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861639,"byte_end":8861684,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861689,"byte_end":8861734,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861739,"byte_end":8861746,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861751,"byte_end":8861758,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6250},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864144,"byte_end":8864149,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"fn <U> (self, other: U) -> Merge<Self, U>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861913,"byte_end":8861986,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8861991,"byte_end":8862007,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862012,"byte_end":8862015,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862020,"byte_end":8862096,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862101,"byte_end":8862166,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862171,"byte_end":8862246,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862251,"byte_end":8862278,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862283,"byte_end":8862286,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862291,"byte_end":8862366,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862371,"byte_end":8862437,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862442,"byte_end":8862485,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862490,"byte_end":8862493,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862498,"byte_end":8862512,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862517,"byte_end":8862520,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862525,"byte_end":8862532,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862537,"byte_end":8862570,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862575,"byte_end":8862601,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862606,"byte_end":8862626,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862631,"byte_end":8862634,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862639,"byte_end":8862667,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862672,"byte_end":8862675,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862680,"byte_end":8862688,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862693,"byte_end":8862711,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862716,"byte_end":8862724,"line_start":212,"line_end":212,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862729,"byte_end":8862766,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862771,"byte_end":8862792,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862797,"byte_end":8862817,"line_start":215,"line_end":215,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862822,"byte_end":8862869,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862874,"byte_end":8862921,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862926,"byte_end":8862929,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862934,"byte_end":8862970,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862975,"byte_end":8862978,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8862983,"byte_end":8863016,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863021,"byte_end":8863064,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863069,"byte_end":8863108,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863113,"byte_end":8863152,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863157,"byte_end":8863160,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863165,"byte_end":8863210,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863215,"byte_end":8863276,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863281,"byte_end":8863284,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863289,"byte_end":8863328,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863333,"byte_end":8863344,"line_start":230,"line_end":230,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863349,"byte_end":8863352,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863357,"byte_end":8863390,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863395,"byte_end":8863448,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863453,"byte_end":8863513,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863518,"byte_end":8863521,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863526,"byte_end":8863565,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863570,"byte_end":8863573,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863578,"byte_end":8863639,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863644,"byte_end":8863647,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863652,"byte_end":8863687,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863692,"byte_end":8863731,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863736,"byte_end":8863747,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863752,"byte_end":8863755,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863760,"byte_end":8863807,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863812,"byte_end":8863859,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863864,"byte_end":8863911,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863916,"byte_end":8863963,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8863968,"byte_end":8864015,"line_start":248,"line_end":248,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864020,"byte_end":8864023,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864028,"byte_end":8864067,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864072,"byte_end":8864114,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864119,"byte_end":8864124,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864129,"byte_end":8864136,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6252},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865454,"byte_end":8865460,"line_start":292,"line_end":292,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864305,"byte_end":8864377,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864382,"byte_end":8864396,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864401,"byte_end":8864404,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864409,"byte_end":8864484,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864489,"byte_end":8864535,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864540,"byte_end":8864612,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864617,"byte_end":8864666,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864671,"byte_end":8864729,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864734,"byte_end":8864737,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864742,"byte_end":8864818,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864823,"byte_end":8864895,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864900,"byte_end":8864921,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864926,"byte_end":8864929,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864934,"byte_end":8864948,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864953,"byte_end":8864956,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864961,"byte_end":8864968,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864973,"byte_end":8864993,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8864998,"byte_end":8865021,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865026,"byte_end":8865067,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865072,"byte_end":8865075,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865080,"byte_end":8865117,"line_start":282,"line_end":282,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865122,"byte_end":8865172,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865177,"byte_end":8865180,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865185,"byte_end":8865229,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865234,"byte_end":8865278,"line_start":286,"line_end":286,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865283,"byte_end":8865327,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865332,"byte_end":8865376,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865381,"byte_end":8865422,"line_start":289,"line_end":289,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865427,"byte_end":8865434,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865439,"byte_end":8865446,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866833,"byte_end":8866843,"line_start":330,"line_end":330,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"fn <T, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865611,"byte_end":8865686,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865691,"byte_end":8865754,"line_start":301,"line_end":301,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865759,"byte_end":8865762,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865767,"byte_end":8865842,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865847,"byte_end":8865899,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865904,"byte_end":8865980,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value value will be skipped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8865985,"byte_end":8866051,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866056,"byte_end":8866059,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866064,"byte_end":8866140,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866145,"byte_end":8866221,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866226,"byte_end":8866247,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866252,"byte_end":8866255,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866260,"byte_end":8866274,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866279,"byte_end":8866286,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866291,"byte_end":8866311,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866316,"byte_end":8866339,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866344,"byte_end":8866385,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866390,"byte_end":8866393,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866398,"byte_end":8866435,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866440,"byte_end":8866483,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866488,"byte_end":8866539,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866544,"byte_end":8866551,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866556,"byte_end":8866559,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866564,"byte_end":8866608,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866613,"byte_end":8866657,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866662,"byte_end":8866706,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866711,"byte_end":8866755,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866760,"byte_end":8866801,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866806,"byte_end":8866813,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8866818,"byte_end":8866825,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6257},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868975,"byte_end":8868979,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867007,"byte_end":8867062,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867067,"byte_end":8867070,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867075,"byte_end":8867148,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867153,"byte_end":8867225,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867230,"byte_end":8867304,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867309,"byte_end":8867335,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867340,"byte_end":8867343,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867348,"byte_end":8867362,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867367,"byte_end":8867370,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867375,"byte_end":8867382,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867387,"byte_end":8867430,"line_start":348,"line_end":348,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867435,"byte_end":8867438,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867443,"byte_end":8867465,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867470,"byte_end":8867505,"line_start":351,"line_end":351,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867510,"byte_end":8867513,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867518,"byte_end":8867572,"line_start":353,"line_end":353,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867577,"byte_end":8867599,"line_start":354,"line_end":354,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867604,"byte_end":8867623,"line_start":355,"line_end":355,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867628,"byte_end":8867633,"line_start":356,"line_end":356,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867638,"byte_end":8867641,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867646,"byte_end":8867677,"line_start":358,"line_end":358,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867682,"byte_end":8867706,"line_start":359,"line_end":359,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867711,"byte_end":8867714,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867719,"byte_end":8867811,"line_start":361,"line_end":361,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867816,"byte_end":8867849,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867854,"byte_end":8867894,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867899,"byte_end":8867902,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867907,"byte_end":8867956,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867961,"byte_end":8867990,"line_start":366,"line_end":366,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8867995,"byte_end":8868033,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868038,"byte_end":8868058,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868063,"byte_end":8868096,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868101,"byte_end":8868114,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868119,"byte_end":8868128,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868133,"byte_end":8868138,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868143,"byte_end":8868146,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868151,"byte_end":8868169,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868174,"byte_end":8868195,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868200,"byte_end":8868248,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868253,"byte_end":8868256,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868261,"byte_end":8868302,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868307,"byte_end":8868356,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868361,"byte_end":8868407,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868412,"byte_end":8868461,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868466,"byte_end":8868512,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868517,"byte_end":8868520,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868525,"byte_end":8868561,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868566,"byte_end":8868605,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868610,"byte_end":8868613,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868618,"byte_end":8868667,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868672,"byte_end":8868718,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868723,"byte_end":8868726,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868731,"byte_end":8868792,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868797,"byte_end":8868843,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868848,"byte_end":8868894,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868899,"byte_end":8868945,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868950,"byte_end":8868955,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8868960,"byte_end":8868967,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6258},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869715,"byte_end":8869719,"line_start":423,"line_end":423,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869072,"byte_end":8869143,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869148,"byte_end":8869151,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869156,"byte_end":8869229,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869234,"byte_end":8869269,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869274,"byte_end":8869277,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869282,"byte_end":8869296,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869301,"byte_end":8869304,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869309,"byte_end":8869316,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869321,"byte_end":8869341,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869346,"byte_end":8869369,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869374,"byte_end":8869415,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869420,"byte_end":8869423,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869428,"byte_end":8869478,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869483,"byte_end":8869486,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869491,"byte_end":8869536,"line_start":417,"line_end":417,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869541,"byte_end":8869586,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869591,"byte_end":8869636,"line_start":419,"line_end":419,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869641,"byte_end":8869683,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869688,"byte_end":8869695,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869700,"byte_end":8869707,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6259},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870612,"byte_end":8870622,"line_start":452,"line_end":452,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"fn <F> (self, f: F) -> TakeWhile<Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869825,"byte_end":8869888,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869893,"byte_end":8869916,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869921,"byte_end":8869924,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8869929,"byte_end":8870004,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870009,"byte_end":8870081,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870086,"byte_end":8870150,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870155,"byte_end":8870158,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870163,"byte_end":8870177,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870182,"byte_end":8870185,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870190,"byte_end":8870197,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870202,"byte_end":8870222,"line_start":440,"line_end":440,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870227,"byte_end":8870250,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870255,"byte_end":8870296,"line_start":442,"line_end":442,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870301,"byte_end":8870304,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870309,"byte_end":8870375,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870380,"byte_end":8870383,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870388,"byte_end":8870433,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870438,"byte_end":8870483,"line_start":447,"line_end":447,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870488,"byte_end":8870533,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870538,"byte_end":8870580,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870585,"byte_end":8870592,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870597,"byte_end":8870604,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6261},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871319,"byte_end":8871323,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870779,"byte_end":8870845,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870850,"byte_end":8870872,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870877,"byte_end":8870880,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870885,"byte_end":8870899,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870904,"byte_end":8870907,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870912,"byte_end":8870919,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870924,"byte_end":8870944,"line_start":466,"line_end":466,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870949,"byte_end":8870972,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8870977,"byte_end":8871018,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871023,"byte_end":8871026,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871031,"byte_end":8871081,"line_start":470,"line_end":470,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871086,"byte_end":8871089,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871094,"byte_end":8871139,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871144,"byte_end":8871189,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871194,"byte_end":8871240,"line_start":474,"line_end":474,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871245,"byte_end":8871287,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871292,"byte_end":8871299,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871304,"byte_end":8871311,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6262},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872301,"byte_end":8872311,"line_start":508,"line_end":508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"fn <F> (self, f: F) -> SkipWhile<Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871429,"byte_end":8871502,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871507,"byte_end":8871530,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871535,"byte_end":8871538,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871543,"byte_end":8871621,"line_start":488,"line_end":488,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871626,"byte_end":8871698,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871703,"byte_end":8871763,"line_start":490,"line_end":490,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871768,"byte_end":8871771,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871776,"byte_end":8871839,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871844,"byte_end":8871847,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871852,"byte_end":8871866,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871871,"byte_end":8871874,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871879,"byte_end":8871886,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871891,"byte_end":8871911,"line_start":497,"line_end":497,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871916,"byte_end":8871939,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871944,"byte_end":8871985,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8871990,"byte_end":8872064,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872069,"byte_end":8872072,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872077,"byte_end":8872122,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872127,"byte_end":8872172,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872177,"byte_end":8872222,"line_start":504,"line_end":504,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872227,"byte_end":8872269,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872274,"byte_end":8872281,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872286,"byte_end":8872293,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6264},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873890,"byte_end":8873893,"line_start":563,"line_end":563,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872468,"byte_end":8872529,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872534,"byte_end":8872537,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872542,"byte_end":8872612,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872617,"byte_end":8872687,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872692,"byte_end":8872757,"line_start":520,"line_end":520,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872762,"byte_end":8872814,"line_start":521,"line_end":521,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872819,"byte_end":8872822,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872827,"byte_end":8872899,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872904,"byte_end":8872978,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8872983,"byte_end":8873019,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873024,"byte_end":8873027,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873032,"byte_end":8873067,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873072,"byte_end":8873075,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873080,"byte_end":8873094,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873099,"byte_end":8873102,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873107,"byte_end":8873123,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873128,"byte_end":8873131,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873136,"byte_end":8873143,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873148,"byte_end":8873168,"line_start":534,"line_end":534,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873173,"byte_end":8873196,"line_start":535,"line_end":535,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873201,"byte_end":8873242,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873247,"byte_end":8873250,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873255,"byte_end":8873277,"line_start":538,"line_end":538,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873282,"byte_end":8873285,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873290,"byte_end":8873342,"line_start":540,"line_end":540,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873347,"byte_end":8873350,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873355,"byte_end":8873408,"line_start":542,"line_end":542,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873413,"byte_end":8873420,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873425,"byte_end":8873432,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873437,"byte_end":8873440,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873445,"byte_end":8873479,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873484,"byte_end":8873487,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873492,"byte_end":8873499,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873504,"byte_end":8873524,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873529,"byte_end":8873552,"line_start":550,"line_end":550,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873557,"byte_end":8873598,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873603,"byte_end":8873606,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873611,"byte_end":8873633,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873638,"byte_end":8873641,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873646,"byte_end":8873682,"line_start":555,"line_end":555,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873687,"byte_end":8873690,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873695,"byte_end":8873737,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873742,"byte_end":8873745,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873750,"byte_end":8873809,"line_start":559,"line_end":559,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873814,"byte_end":8873858,"line_start":560,"line_end":560,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873863,"byte_end":8873870,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8873875,"byte_end":8873882,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6266},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875418,"byte_end":8875421,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874058,"byte_end":8874117,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874122,"byte_end":8874125,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874130,"byte_end":8874200,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874205,"byte_end":8874278,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874283,"byte_end":8874347,"line_start":575,"line_end":575,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874352,"byte_end":8874372,"line_start":576,"line_end":576,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874377,"byte_end":8874380,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874385,"byte_end":8874457,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874462,"byte_end":8874535,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874540,"byte_end":8874575,"line_start":580,"line_end":580,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874580,"byte_end":8874583,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874588,"byte_end":8874624,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874629,"byte_end":8874632,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874637,"byte_end":8874653,"line_start":584,"line_end":584,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874658,"byte_end":8874661,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874666,"byte_end":8874673,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874678,"byte_end":8874698,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874703,"byte_end":8874726,"line_start":588,"line_end":588,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874731,"byte_end":8874772,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874777,"byte_end":8874780,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874785,"byte_end":8874807,"line_start":591,"line_end":591,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874812,"byte_end":8874815,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874820,"byte_end":8874872,"line_start":593,"line_end":593,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874877,"byte_end":8874880,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874885,"byte_end":8874938,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874943,"byte_end":8874950,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874955,"byte_end":8874962,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874967,"byte_end":8874970,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8874975,"byte_end":8875008,"line_start":599,"line_end":599,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875013,"byte_end":8875016,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875021,"byte_end":8875028,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875033,"byte_end":8875053,"line_start":602,"line_end":602,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875058,"byte_end":8875081,"line_start":603,"line_end":603,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875086,"byte_end":8875127,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875132,"byte_end":8875135,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875140,"byte_end":8875162,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875167,"byte_end":8875170,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875175,"byte_end":8875211,"line_start":608,"line_end":608,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875216,"byte_end":8875219,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875224,"byte_end":8875265,"line_start":610,"line_end":610,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875270,"byte_end":8875273,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875278,"byte_end":8875337,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875342,"byte_end":8875386,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875391,"byte_end":8875398,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875403,"byte_end":8875410,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876564,"byte_end":8876569,"line_start":651,"line_end":651,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875586,"byte_end":8875657,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875662,"byte_end":8875718,"line_start":625,"line_end":625,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875723,"byte_end":8875726,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875731,"byte_end":8875805,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875810,"byte_end":8875846,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875851,"byte_end":8875854,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875859,"byte_end":8875873,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875878,"byte_end":8875881,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875886,"byte_end":8875893,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875898,"byte_end":8875939,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875944,"byte_end":8875947,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875952,"byte_end":8875970,"line_start":635,"line_end":635,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8875975,"byte_end":8875996,"line_start":636,"line_end":636,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876001,"byte_end":8876047,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876052,"byte_end":8876098,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876103,"byte_end":8876106,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876111,"byte_end":8876151,"line_start":640,"line_end":640,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876156,"byte_end":8876159,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876164,"byte_end":8876213,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876218,"byte_end":8876267,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876272,"byte_end":8876321,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876326,"byte_end":8876375,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876380,"byte_end":8876429,"line_start":646,"line_end":646,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876434,"byte_end":8876483,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876488,"byte_end":8876534,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876539,"byte_end":8876544,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876549,"byte_end":8876556,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6270},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877162,"byte_end":8877166,"line_start":675,"line_end":675,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, B, F>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876725,"byte_end":8876794,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876799,"byte_end":8876835,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876840,"byte_end":8876843,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876848,"byte_end":8876862,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876867,"byte_end":8876883,"line_start":663,"line_end":663,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876888,"byte_end":8876895,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876900,"byte_end":8876920,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876925,"byte_end":8876948,"line_start":666,"line_end":666,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876953,"byte_end":8876986,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876991,"byte_end":8876994,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8876999,"byte_end":8877041,"line_start":669,"line_end":669,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877046,"byte_end":8877094,"line_start":670,"line_end":670,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877099,"byte_end":8877102,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877107,"byte_end":8877130,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877135,"byte_end":8877142,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877147,"byte_end":8877154,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6273},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879479,"byte_end":8879486,"line_start":747,"line_end":747,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"fn <T> (self) -> Collect<Self, T>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877345,"byte_end":8877407,"line_start":683,"line_end":683,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877412,"byte_end":8877415,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877420,"byte_end":8877496,"line_start":685,"line_end":685,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877501,"byte_end":8877568,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877573,"byte_end":8877621,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877626,"byte_end":8877691,"line_start":688,"line_end":688,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877696,"byte_end":8877699,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877704,"byte_end":8877718,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877723,"byte_end":8877726,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877731,"byte_end":8877805,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877810,"byte_end":8877882,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877887,"byte_end":8877962,"line_start":694,"line_end":694,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8877967,"byte_end":8878029,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878034,"byte_end":8878037,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878042,"byte_end":8878053,"line_start":697,"line_end":697,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878058,"byte_end":8878061,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878066,"byte_end":8878136,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878141,"byte_end":8878179,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878184,"byte_end":8878187,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878192,"byte_end":8878206,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878211,"byte_end":8878214,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878219,"byte_end":8878235,"line_start":704,"line_end":704,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878240,"byte_end":8878243,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878248,"byte_end":8878255,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878260,"byte_end":8878301,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878306,"byte_end":8878309,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878314,"byte_end":8878332,"line_start":709,"line_end":709,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878337,"byte_end":8878358,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878363,"byte_end":8878394,"line_start":711,"line_end":711,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878399,"byte_end":8878438,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878443,"byte_end":8878474,"line_start":713,"line_end":713,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878479,"byte_end":8878505,"line_start":714,"line_end":714,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878510,"byte_end":8878533,"line_start":715,"line_end":715,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878538,"byte_end":8878541,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878546,"byte_end":8878589,"line_start":717,"line_end":717,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878594,"byte_end":8878599,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878604,"byte_end":8878611,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878616,"byte_end":8878619,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878624,"byte_end":8878666,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878671,"byte_end":8878674,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878679,"byte_end":8878686,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878691,"byte_end":8878732,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878737,"byte_end":8878740,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878745,"byte_end":8878763,"line_start":726,"line_end":726,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878768,"byte_end":8878789,"line_start":727,"line_end":727,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878794,"byte_end":8878859,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878864,"byte_end":8878908,"line_start":729,"line_end":729,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878913,"byte_end":8878964,"line_start":730,"line_end":730,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8878969,"byte_end":8878995,"line_start":731,"line_end":731,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879000,"byte_end":8879023,"line_start":732,"line_end":732,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879028,"byte_end":8879031,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879036,"byte_end":8879082,"line_start":734,"line_end":734,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879087,"byte_end":8879090,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879095,"byte_end":8879167,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879172,"byte_end":8879244,"line_start":737,"line_end":737,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879249,"byte_end":8879252,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879257,"byte_end":8879301,"line_start":739,"line_end":739,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879306,"byte_end":8879339,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879344,"byte_end":8879370,"line_start":741,"line_end":741,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879375,"byte_end":8879398,"line_start":742,"line_end":742,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879403,"byte_end":8879406,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879411,"byte_end":8879449,"line_start":744,"line_end":744,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879454,"byte_end":8879459,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879464,"byte_end":8879471,"line_start":746,"line_end":746,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882141,"byte_end":8882148,"line_start":811,"line_end":811,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"fn (self, duration: Duration) -> Timeout<Self>","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879626,"byte_end":8879678,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879683,"byte_end":8879686,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879691,"byte_end":8879763,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879768,"byte_end":8879838,"line_start":758,"line_end":758,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879843,"byte_end":8879846,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879851,"byte_end":8879927,"line_start":760,"line_end":760,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8879932,"byte_end":8880009,"line_start":761,"line_end":761,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880014,"byte_end":8880090,"line_start":762,"line_end":762,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880095,"byte_end":8880138,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880143,"byte_end":8880146,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880151,"byte_end":8880162,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880167,"byte_end":8880170,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880175,"byte_end":8880241,"line_start":767,"line_end":767,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880246,"byte_end":8880272,"line_start":768,"line_end":768,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880277,"byte_end":8880280,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880285,"byte_end":8880360,"line_start":770,"line_end":770,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880365,"byte_end":8880399,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880404,"byte_end":8880407,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880412,"byte_end":8880426,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880431,"byte_end":8880434,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880439,"byte_end":8880513,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880518,"byte_end":8880521,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880526,"byte_end":8880533,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880538,"byte_end":8880558,"line_start":778,"line_end":778,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880563,"byte_end":8880586,"line_start":779,"line_end":779,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880591,"byte_end":8880632,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880637,"byte_end":8880665,"line_start":781,"line_end":781,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880670,"byte_end":8880713,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880718,"byte_end":8880721,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880726,"byte_end":8880794,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880799,"byte_end":8880802,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880807,"byte_end":8880874,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880879,"byte_end":8880936,"line_start":787,"line_end":787,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8880941,"byte_end":8880998,"line_start":788,"line_end":788,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881003,"byte_end":8881060,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881065,"byte_end":8881119,"line_start":790,"line_end":790,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881124,"byte_end":8881127,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881132,"byte_end":8881217,"line_start":792,"line_end":792,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881222,"byte_end":8881298,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881303,"byte_end":8881360,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881365,"byte_end":8881415,"line_start":795,"line_end":795,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881420,"byte_end":8881477,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881482,"byte_end":8881539,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881544,"byte_end":8881598,"line_start":798,"line_end":798,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881603,"byte_end":8881606,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881611,"byte_end":8881682,"line_start":800,"line_end":800,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881687,"byte_end":8881750,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881755,"byte_end":8881827,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881832,"byte_end":8881894,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881899,"byte_end":8881902,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881907,"byte_end":8881964,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8881969,"byte_end":8882023,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882028,"byte_end":8882035,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882040,"byte_end":8882047,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882052,"byte_end":8882081,"line_start":809,"line_end":809,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6380},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6381},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6581},{"krate":0,"index":7007},{"krate":0,"index":7094},{"krate":0,"index":7099},{"krate":0,"index":7148},{"krate":0,"index":7149},{"krate":0,"index":7268},{"krate":0,"index":7359},{"krate":0,"index":7497},{"krate":0,"index":7522},{"krate":0,"index":7526},{"krate":0,"index":7582},{"krate":0,"index":7586},{"krate":0,"index":7631},{"krate":0,"index":7632}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21207,"byte_end":21231,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8960767,"byte_end":8960831,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8960832,"byte_end":8960835,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8960836,"byte_end":8960911,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8960912,"byte_end":8960992,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8960993,"byte_end":8961072,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tasks to communicate together.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961073,"byte_end":8961107,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961108,"byte_end":8961111,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961112,"byte_end":8961136,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961137,"byte_end":8961140,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Message passing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961141,"byte_end":8961162,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961163,"byte_end":8961166,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961167,"byte_end":8961240,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961241,"byte_end":8961320,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961321,"byte_end":8961390,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961391,"byte_end":8961394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961395,"byte_end":8961474,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961475,"byte_end":8961552,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961553,"byte_end":8961628,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961629,"byte_end":8961701,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961702,"byte_end":8961774,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961775,"byte_end":8961852,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! messages.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961853,"byte_end":8961866,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961867,"byte_end":8961870,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961871,"byte_end":8961949,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! patterns are best handled with different implementations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8961950,"byte_end":8962011,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962012,"byte_end":8962015,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## `oneshot` channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962016,"byte_end":8962040,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962041,"byte_end":8962044,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962045,"byte_end":8962124,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962125,"byte_end":8962203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! the result of a computation to a waiter.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962204,"byte_end":8962248,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962249,"byte_end":8962252,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962253,"byte_end":8962333,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"! computation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962334,"byte_end":8962350,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962351,"byte_end":8962354,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962355,"byte_end":8962362,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962363,"byte_end":8962392,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962393,"byte_end":8962396,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962397,"byte_end":8962440,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962441,"byte_end":8962503,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962504,"byte_end":8962509,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962510,"byte_end":8962513,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962514,"byte_end":8962532,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962533,"byte_end":8962554,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962555,"byte_end":8962597,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962598,"byte_end":8962601,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962602,"byte_end":8962635,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"!         let res = some_computation().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962636,"byte_end":8962683,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"!         tx.send(res).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962684,"byte_end":8962718,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962719,"byte_end":8962730,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962731,"byte_end":8962734,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962735,"byte_end":8962812,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962813,"byte_end":8962816,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962817,"byte_end":8962859,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"!     let res = rx.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962860,"byte_end":8962896,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962897,"byte_end":8962902,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962903,"byte_end":8962910,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962911,"byte_end":8962914,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Note, if the task produces the the computation result as its final action","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962915,"byte_end":8962992,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"! before terminating, the [`JoinHandle`] can be used to receive the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8962993,"byte_end":8963062,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"! computation result instead of allocating resources for the `oneshot`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963063,"byte_end":8963135,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"! channel. Awaiting on [`JoinHandle`] returns `Result`. If the task panics,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963136,"byte_end":8963213,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"! the `Joinhandle` yields `Err` with the panic cause.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963214,"byte_end":8963269,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963270,"byte_end":8963273,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! **Example:**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963274,"byte_end":8963290,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963291,"byte_end":8963294,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963295,"byte_end":8963302,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963303,"byte_end":8963346,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"!     \"the result of the computation\".to_string()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963347,"byte_end":8963398,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963399,"byte_end":8963404,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963405,"byte_end":8963408,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963409,"byte_end":8963427,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963428,"byte_end":8963449,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"!     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963450,"byte_end":8963501,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"!         some_computation().await","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963502,"byte_end":8963538,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963539,"byte_end":8963550,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963551,"byte_end":8963554,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963555,"byte_end":8963632,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963633,"byte_end":8963636,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963637,"byte_end":8963679,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"!     let res = join_handle.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963680,"byte_end":8963725,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963726,"byte_end":8963731,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963732,"byte_end":8963739,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963740,"byte_end":8963743,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963744,"byte_end":8963787,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963788,"byte_end":8963791,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! ## `mpsc` channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963792,"byte_end":8963813,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963814,"byte_end":8963817,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963818,"byte_end":8963895,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"! producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963896,"byte_end":8963976,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"! task or to receive the result of many computations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8963977,"byte_end":8964032,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964033,"byte_end":8964036,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964037,"byte_end":8964115,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! of computations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964116,"byte_end":8964136,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964137,"byte_end":8964140,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964141,"byte_end":8964148,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964149,"byte_end":8964175,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964176,"byte_end":8964179,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964180,"byte_end":8964233,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"!     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964234,"byte_end":8964288,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964289,"byte_end":8964294,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964295,"byte_end":8964298,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964299,"byte_end":8964317,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964318,"byte_end":8964339,"line_start":106,"line_end":106,"column_start":1,"column_end":22}},{"value":"!     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964340,"byte_end":8964390,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964391,"byte_end":8964394,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964395,"byte_end":8964428,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!         for i in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964429,"byte_end":8964457,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"!             let res = some_computation(i).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964458,"byte_end":8964510,"line_start":111,"line_end":111,"column_start":1,"column_end":53}},{"value":"!             tx.send(res).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964511,"byte_end":8964555,"line_start":112,"line_end":112,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964556,"byte_end":8964569,"line_start":113,"line_end":113,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964570,"byte_end":8964581,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964582,"byte_end":8964585,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964586,"byte_end":8964633,"line_start":116,"line_end":116,"column_start":1,"column_end":48}},{"value":"!         println!(\"got = {}\", res);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964634,"byte_end":8964672,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964673,"byte_end":8964682,"line_start":118,"line_end":118,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964683,"byte_end":8964688,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964689,"byte_end":8964696,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964697,"byte_end":8964700,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964701,"byte_end":8964781,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"! number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964782,"byte_end":8964859,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"! given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964860,"byte_end":8964933,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"! programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8964934,"byte_end":8965009,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"! pressure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965010,"byte_end":8965023,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965024,"byte_end":8965027,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965028,"byte_end":8965103,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"! dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965104,"byte_end":8965183,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"! tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965184,"byte_end":8965262,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"! not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965263,"byte_end":8965342,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965343,"byte_end":8965423,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"! a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965424,"byte_end":8965489,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965490,"byte_end":8965493,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965494,"byte_end":8965574,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"! passing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965575,"byte_end":8965587,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965588,"byte_end":8965591,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965592,"byte_end":8965605,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965606,"byte_end":8965647,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"! use tokio::net::TcpStream;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965648,"byte_end":8965678,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965679,"byte_end":8965705,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965706,"byte_end":8965709,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965710,"byte_end":8965728,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965729,"byte_end":8965768,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"!     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965769,"byte_end":8965844,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965845,"byte_end":8965891,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965892,"byte_end":8965895,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965896,"byte_end":8965920,"line_start":148,"line_end":148,"column_start":1,"column_end":25}},{"value":"!         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8965921,"byte_end":8966000,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"!         // original handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966001,"byte_end":8966032,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"!         let mut tx = tx.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966033,"byte_end":8966069,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966070,"byte_end":8966073,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966074,"byte_end":8966111,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"!             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966112,"byte_end":8966174,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"!         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966175,"byte_end":8966190,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966191,"byte_end":8966200,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966201,"byte_end":8966204,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"!     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966205,"byte_end":8966284,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"!     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966285,"byte_end":8966360,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"!     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966361,"byte_end":8966439,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"!     // be a single outstanding `tx` handle.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966440,"byte_end":8966487,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"!     drop(tx);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966488,"byte_end":8966505,"line_start":162,"line_end":162,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966506,"byte_end":8966509,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966510,"byte_end":8966557,"line_start":164,"line_end":164,"column_start":1,"column_end":48}},{"value":"!         socket.write_all(res).await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966558,"byte_end":8966599,"line_start":165,"line_end":165,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966600,"byte_end":8966609,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966610,"byte_end":8966613,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966614,"byte_end":8966628,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966629,"byte_end":8966634,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966635,"byte_end":8966642,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966643,"byte_end":8966646,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966647,"byte_end":8966722,"line_start":172,"line_end":172,"column_start":1,"column_end":76}},{"value":"! provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966723,"byte_end":8966798,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"! resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966799,"byte_end":8966878,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"! received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966879,"byte_end":8966944,"line_start":175,"line_end":175,"column_start":1,"column_end":66}},{"value":"! [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8966945,"byte_end":8967022,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967023,"byte_end":8967026,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967027,"byte_end":8967105,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"! \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967106,"byte_end":8967186,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"! sent over the provided `oneshot` channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967187,"byte_end":8967232,"line_start":180,"line_end":180,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967233,"byte_end":8967236,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967237,"byte_end":8967244,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967245,"byte_end":8967282,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"! use Command::Increment;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967283,"byte_end":8967310,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967311,"byte_end":8967314,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! enum Command {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967315,"byte_end":8967333,"line_start":186,"line_end":186,"column_start":1,"column_end":19}},{"value":"!     Increment,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967334,"byte_end":8967352,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"!     // Other commands can be added here","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967353,"byte_end":8967396,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967397,"byte_end":8967402,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967403,"byte_end":8967406,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967407,"byte_end":8967425,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967426,"byte_end":8967447,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"!     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967448,"byte_end":8967537,"line_start":193,"line_end":193,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967538,"byte_end":8967541,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to manage the counter","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967542,"byte_end":8967587,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967588,"byte_end":8967621,"line_start":196,"line_end":196,"column_start":1,"column_end":34}},{"value":"!         let mut counter: u64 = 0;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967622,"byte_end":8967659,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967660,"byte_end":8967663,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"!         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967664,"byte_end":8967731,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"!             match cmd {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967732,"byte_end":8967759,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"!                 Increment => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967760,"byte_end":8967794,"line_start":201,"line_end":201,"column_start":1,"column_end":35}},{"value":"!                     let prev = counter;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967795,"byte_end":8967838,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"!                     counter += 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967839,"byte_end":8967876,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"!                     response.send(prev).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967877,"byte_end":8967930,"line_start":204,"line_end":204,"column_start":1,"column_end":54}},{"value":"!                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967931,"byte_end":8967952,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967953,"byte_end":8967970,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967971,"byte_end":8967984,"line_start":207,"line_end":207,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967985,"byte_end":8967996,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8967997,"byte_end":8968000,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"!     let mut join_handles = vec![];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968001,"byte_end":8968039,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968040,"byte_end":8968043,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968044,"byte_end":8968104,"line_start":212,"line_end":212,"column_start":1,"column_end":61}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968105,"byte_end":8968129,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"!         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968130,"byte_end":8968174,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968175,"byte_end":8968178,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"!         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968179,"byte_end":8968234,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"!             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968235,"byte_end":8968295,"line_start":217,"line_end":217,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968296,"byte_end":8968299,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"!             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968300,"byte_end":8968370,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"!             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968371,"byte_end":8968420,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968421,"byte_end":8968424,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"!             println!(\"previous value = {}\", res);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968425,"byte_end":8968478,"line_start":222,"line_end":222,"column_start":1,"column_end":54}},{"value":"!         }));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968479,"byte_end":8968495,"line_start":223,"line_end":223,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968496,"byte_end":8968505,"line_start":224,"line_end":224,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968506,"byte_end":8968509,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"!     // Wait for all tasks to complete","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968510,"byte_end":8968551,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"!     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968552,"byte_end":8968603,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"!         join_handle.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968604,"byte_end":8968643,"line_start":228,"line_end":228,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968644,"byte_end":8968653,"line_start":229,"line_end":229,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968654,"byte_end":8968659,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968660,"byte_end":8968667,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968668,"byte_end":8968671,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! ## `broadcast` channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968672,"byte_end":8968698,"line_start":233,"line_end":233,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968699,"byte_end":8968702,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968703,"byte_end":8968770,"line_start":235,"line_end":235,"column_start":1,"column_end":68}},{"value":"! **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968771,"byte_end":8968843,"line_start":236,"line_end":236,"column_start":1,"column_end":73}},{"value":"! **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968844,"byte_end":8968917,"line_start":237,"line_end":237,"column_start":1,"column_end":74}},{"value":"! patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968918,"byte_end":8968971,"line_start":238,"line_end":238,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968972,"byte_end":8968975,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"! This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8968976,"byte_end":8969056,"line_start":240,"line_end":240,"column_start":1,"column_end":81}},{"value":"! has its use cases.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969057,"byte_end":8969079,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969080,"byte_end":8969083,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969084,"byte_end":8969099,"line_start":243,"line_end":243,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969100,"byte_end":8969103,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969104,"byte_end":8969111,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969112,"byte_end":8969143,"line_start":246,"line_end":246,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969144,"byte_end":8969147,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969148,"byte_end":8969166,"line_start":248,"line_end":248,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969167,"byte_end":8969188,"line_start":249,"line_end":249,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969189,"byte_end":8969240,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969241,"byte_end":8969278,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969279,"byte_end":8969282,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969283,"byte_end":8969316,"line_start":253,"line_end":253,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969317,"byte_end":8969371,"line_start":254,"line_end":254,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969372,"byte_end":8969426,"line_start":255,"line_end":255,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969427,"byte_end":8969438,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969439,"byte_end":8969442,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969443,"byte_end":8969476,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969477,"byte_end":8969531,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969532,"byte_end":8969586,"line_start":260,"line_end":260,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969587,"byte_end":8969598,"line_start":261,"line_end":261,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969599,"byte_end":8969602,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969603,"byte_end":8969632,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969633,"byte_end":8969662,"line_start":264,"line_end":264,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969663,"byte_end":8969668,"line_start":265,"line_end":265,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969669,"byte_end":8969676,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969677,"byte_end":8969680,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969681,"byte_end":8969730,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969731,"byte_end":8969734,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"! ## `watch` channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969735,"byte_end":8969757,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969758,"byte_end":8969761,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969762,"byte_end":8969838,"line_start":272,"line_end":272,"column_start":1,"column_end":77}},{"value":"! producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969839,"byte_end":8969917,"line_start":273,"line_end":273,"column_start":1,"column_end":79}},{"value":"! stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969918,"byte_end":8969997,"line_start":274,"line_end":274,"column_start":1,"column_end":80}},{"value":"! there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8969998,"byte_end":8970063,"line_start":275,"line_end":275,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970064,"byte_end":8970067,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970068,"byte_end":8970148,"line_start":277,"line_end":277,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970149,"byte_end":8970152,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"! Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970153,"byte_end":8970227,"line_start":279,"line_end":279,"column_start":1,"column_end":75}},{"value":"! changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970228,"byte_end":8970301,"line_start":280,"line_end":280,"column_start":1,"column_end":74}},{"value":"! shutdown.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970302,"byte_end":8970315,"line_start":281,"line_end":281,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970316,"byte_end":8970319,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970320,"byte_end":8970393,"line_start":283,"line_end":283,"column_start":1,"column_end":74}},{"value":"! changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970394,"byte_end":8970474,"line_start":284,"line_end":284,"column_start":1,"column_end":81}},{"value":"! the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970475,"byte_end":8970550,"line_start":285,"line_end":285,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970551,"byte_end":8970554,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970555,"byte_end":8970562,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970563,"byte_end":8970590,"line_start":288,"line_end":288,"column_start":1,"column_end":28}},{"value":"! use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970591,"byte_end":8970638,"line_start":289,"line_end":289,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970639,"byte_end":8970642,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970643,"byte_end":8970659,"line_start":291,"line_end":291,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970660,"byte_end":8970663,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970664,"byte_end":8970706,"line_start":293,"line_end":293,"column_start":1,"column_end":43}},{"value":"! struct Config {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970707,"byte_end":8970726,"line_start":294,"line_end":294,"column_start":1,"column_end":20}},{"value":"!     timeout: Duration,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970727,"byte_end":8970753,"line_start":295,"line_end":295,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970754,"byte_end":8970759,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970760,"byte_end":8970763,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! impl Config {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970764,"byte_end":8970781,"line_start":298,"line_end":298,"column_start":1,"column_end":18}},{"value":"!     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970782,"byte_end":8970839,"line_start":299,"line_end":299,"column_start":1,"column_end":58}},{"value":"!         // file loading and deserialization logic here","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970840,"byte_end":8970898,"line_start":300,"line_end":300,"column_start":1,"column_end":59}},{"value":"! # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970899,"byte_end":8970951,"line_start":301,"line_end":301,"column_start":1,"column_end":53}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970952,"byte_end":8970961,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970962,"byte_end":8970967,"line_start":303,"line_end":303,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970968,"byte_end":8970971,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! async fn my_async_operation() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8970972,"byte_end":8971007,"line_start":305,"line_end":305,"column_start":1,"column_end":36}},{"value":"!     // Do something here","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971008,"byte_end":8971036,"line_start":306,"line_end":306,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971037,"byte_end":8971042,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971043,"byte_end":8971046,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971047,"byte_end":8971065,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971066,"byte_end":8971087,"line_start":310,"line_end":310,"column_start":1,"column_end":22}},{"value":"!     // Load initial configuration value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971088,"byte_end":8971131,"line_start":311,"line_end":311,"column_start":1,"column_end":44}},{"value":"!     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971132,"byte_end":8971197,"line_start":312,"line_end":312,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971198,"byte_end":8971201,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"!     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971202,"byte_end":8971280,"line_start":314,"line_end":314,"column_start":1,"column_end":79}},{"value":"!     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971281,"byte_end":8971335,"line_start":315,"line_end":315,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971336,"byte_end":8971339,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to monitor the file.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971340,"byte_end":8971384,"line_start":317,"line_end":317,"column_start":1,"column_end":45}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971385,"byte_end":8971418,"line_start":318,"line_end":318,"column_start":1,"column_end":34}},{"value":"!         loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971419,"byte_end":8971437,"line_start":319,"line_end":319,"column_start":1,"column_end":19}},{"value":"!             // Wait 10 seconds between checks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971438,"byte_end":8971487,"line_start":320,"line_end":320,"column_start":1,"column_end":50}},{"value":"!             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971488,"byte_end":8971551,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971552,"byte_end":8971555,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"!             // Load the configuration file","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971556,"byte_end":8971602,"line_start":323,"line_end":323,"column_start":1,"column_end":47}},{"value":"!             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971603,"byte_end":8971676,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971677,"byte_end":8971680,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"!             // If the configuration changed, send the new config value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971681,"byte_end":8971755,"line_start":326,"line_end":326,"column_start":1,"column_end":75}},{"value":"!             // on the watch channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971756,"byte_end":8971796,"line_start":327,"line_end":327,"column_start":1,"column_end":41}},{"value":"!             if new_config != config {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971797,"byte_end":8971838,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"!                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971839,"byte_end":8971901,"line_start":329,"line_end":329,"column_start":1,"column_end":63}},{"value":"!                 config = new_config;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971902,"byte_end":8971942,"line_start":330,"line_end":330,"column_start":1,"column_end":41}},{"value":"!             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971943,"byte_end":8971960,"line_start":331,"line_end":331,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971961,"byte_end":8971974,"line_start":332,"line_end":332,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971975,"byte_end":8971986,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971987,"byte_end":8971990,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"!     let mut handles = vec![];","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8971991,"byte_end":8972024,"line_start":335,"line_end":335,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972025,"byte_end":8972028,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972029,"byte_end":8972107,"line_start":337,"line_end":337,"column_start":1,"column_end":79}},{"value":"!     // the timeout elapses, restart the operation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972108,"byte_end":8972162,"line_start":338,"line_end":338,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972163,"byte_end":8972173,"line_start":339,"line_end":339,"column_start":1,"column_end":11}},{"value":"!     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972174,"byte_end":8972251,"line_start":340,"line_end":340,"column_start":1,"column_end":78}},{"value":"!     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972252,"byte_end":8972330,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"!     // the in-flight operation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972331,"byte_end":8972366,"line_start":342,"line_end":342,"column_start":1,"column_end":36}},{"value":"!     for _ in 0..5 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972367,"byte_end":8972390,"line_start":343,"line_end":343,"column_start":1,"column_end":24}},{"value":"!         // Clone a config watch handle for use in this task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972391,"byte_end":8972454,"line_start":344,"line_end":344,"column_start":1,"column_end":64}},{"value":"!         let mut rx = rx.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972455,"byte_end":8972491,"line_start":345,"line_end":345,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972492,"byte_end":8972495,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"!         let handle = tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972496,"byte_end":8972546,"line_start":347,"line_end":347,"column_start":1,"column_end":51}},{"value":"!             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972547,"byte_end":8972626,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"!             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972627,"byte_end":8972702,"line_start":349,"line_end":349,"column_start":1,"column_end":76}},{"value":"!             // across multiple calls to `select!`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972703,"byte_end":8972756,"line_start":350,"line_end":350,"column_start":1,"column_end":54}},{"value":"!             let op = my_async_operation();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972757,"byte_end":8972803,"line_start":351,"line_end":351,"column_start":1,"column_end":47}},{"value":"!             tokio::pin!(op);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972804,"byte_end":8972836,"line_start":352,"line_end":352,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972837,"byte_end":8972840,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"!             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972841,"byte_end":8972919,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"!             // first time the config is received from the watch, it will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972920,"byte_end":8972996,"line_start":355,"line_end":355,"column_start":1,"column_end":77}},{"value":"!             // always complete immediatedly.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8972997,"byte_end":8973045,"line_start":356,"line_end":356,"column_start":1,"column_end":49}},{"value":"!             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973046,"byte_end":8973102,"line_start":357,"line_end":357,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973103,"byte_end":8973106,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"!             let mut op_start = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973107,"byte_end":8973157,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"!             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973158,"byte_end":8973233,"line_start":360,"line_end":360,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973234,"byte_end":8973237,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"!             loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973238,"byte_end":8973260,"line_start":362,"line_end":362,"column_start":1,"column_end":23}},{"value":"!                 tokio::select! {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973261,"byte_end":8973297,"line_start":363,"line_end":363,"column_start":1,"column_end":37}},{"value":"!                     _ = &mut delay => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973298,"byte_end":8973341,"line_start":364,"line_end":364,"column_start":1,"column_end":44}},{"value":"!                         // The operation elapsed. Restart it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973342,"byte_end":8973406,"line_start":365,"line_end":365,"column_start":1,"column_end":65}},{"value":"!                         op.set(my_async_operation());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973407,"byte_end":8973464,"line_start":366,"line_end":366,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973465,"byte_end":8973468,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"!                         // Track the new start time","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973469,"byte_end":8973524,"line_start":368,"line_end":368,"column_start":1,"column_end":56}},{"value":"!                         op_start = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973525,"byte_end":8973579,"line_start":369,"line_end":369,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973580,"byte_end":8973583,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"!                         // Restart the timeout","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973584,"byte_end":8973634,"line_start":371,"line_end":371,"column_start":1,"column_end":51}},{"value":"!                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973635,"byte_end":8973714,"line_start":372,"line_end":372,"column_start":1,"column_end":80}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973715,"byte_end":8973740,"line_start":373,"line_end":373,"column_start":1,"column_end":26}},{"value":"!                     new_conf = rx.recv() => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973741,"byte_end":8973790,"line_start":374,"line_end":374,"column_start":1,"column_end":50}},{"value":"!                         conf = new_conf.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973791,"byte_end":8973844,"line_start":375,"line_end":375,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973845,"byte_end":8973848,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"!                         // The configuration has been updated. Update the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973849,"byte_end":8973926,"line_start":377,"line_end":377,"column_start":1,"column_end":78}},{"value":"!                         // `delay` using the new `timeout` value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973927,"byte_end":8973996,"line_start":378,"line_end":378,"column_start":1,"column_end":70}},{"value":"!                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8973997,"byte_end":8974062,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974063,"byte_end":8974088,"line_start":380,"line_end":380,"column_start":1,"column_end":26}},{"value":"!                     _ = &mut op => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974089,"byte_end":8974129,"line_start":381,"line_end":381,"column_start":1,"column_end":41}},{"value":"!                         // The operation completed!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974130,"byte_end":8974185,"line_start":382,"line_end":382,"column_start":1,"column_end":56}},{"value":"!                         return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974186,"byte_end":8974220,"line_start":383,"line_end":383,"column_start":1,"column_end":35}},{"value":"!                     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974221,"byte_end":8974246,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974247,"byte_end":8974268,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974269,"byte_end":8974286,"line_start":386,"line_end":386,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974287,"byte_end":8974302,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974303,"byte_end":8974306,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"!         handles.push(handle);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974307,"byte_end":8974340,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974341,"byte_end":8974350,"line_start":390,"line_end":390,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974351,"byte_end":8974354,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"!     for handle in handles.drain(..) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974355,"byte_end":8974396,"line_start":392,"line_end":392,"column_start":1,"column_end":42}},{"value":"!         handle.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974397,"byte_end":8974431,"line_start":393,"line_end":393,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974432,"byte_end":8974441,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974442,"byte_end":8974447,"line_start":395,"line_end":395,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974448,"byte_end":8974455,"line_start":396,"line_end":396,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974456,"byte_end":8974459,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"! [`watch` channel]: crate::sync::watch","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974460,"byte_end":8974501,"line_start":398,"line_end":398,"column_start":1,"column_end":42}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974502,"byte_end":8974551,"line_start":399,"line_end":399,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974552,"byte_end":8974555,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"! # State synchronization","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974556,"byte_end":8974583,"line_start":401,"line_end":401,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974584,"byte_end":8974587,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"! The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974588,"byte_end":8974662,"line_start":403,"line_end":403,"column_start":1,"column_end":75}},{"value":"! These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974663,"byte_end":8974737,"line_start":404,"line_end":404,"column_start":1,"column_end":75}},{"value":"! operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974738,"byte_end":8974814,"line_start":405,"line_end":405,"column_start":1,"column_end":77}},{"value":"! asynchronously instead of blocking the thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974815,"byte_end":8974865,"line_start":406,"line_end":406,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974866,"byte_end":8974869,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"! * [`Barrier`][Barrier] Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974870,"byte_end":8974947,"line_start":408,"line_end":408,"column_start":1,"column_end":78}},{"value":"!   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8974948,"byte_end":8975025,"line_start":409,"line_end":409,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975026,"byte_end":8975029,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"! * [`Mutex`][Mutex] Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975030,"byte_end":8975107,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"!   one thread at a time is able to access some data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975108,"byte_end":8975163,"line_start":412,"line_end":412,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975164,"byte_end":8975167,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"! * [`Notify`][Notify] Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975168,"byte_end":8975247,"line_start":414,"line_end":414,"column_start":1,"column_end":80}},{"value":"!   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975248,"byte_end":8975326,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"!   resumes processing.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975327,"byte_end":8975352,"line_start":416,"line_end":416,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975353,"byte_end":8975356,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"! * [`RwLock`][RwLock] Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975357,"byte_end":8975432,"line_start":418,"line_end":418,"column_start":1,"column_end":76}},{"value":"!   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975433,"byte_end":8975509,"line_start":419,"line_end":419,"column_start":1,"column_end":77}},{"value":"!   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975510,"byte_end":8975577,"line_start":420,"line_end":420,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975578,"byte_end":8975581,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"! * [`Semaphore`][Semaphore] Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975582,"byte_end":8975658,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"!   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975659,"byte_end":8975735,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"!   critical section. Semaphores are useful for implementing limiting of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975736,"byte_end":8975810,"line_start":424,"line_end":424,"column_start":1,"column_end":75}},{"value":"!   bounding of any kind.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975811,"byte_end":8975838,"line_start":425,"line_end":425,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977972,"byte_end":8977979,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7721},{"krate":0,"index":7722},{"krate":0,"index":7723}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977019,"byte_end":8977107,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977108,"byte_end":8977111,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977112,"byte_end":8977119,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977120,"byte_end":8977140,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977141,"byte_end":8977164,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977165,"byte_end":8977194,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977195,"byte_end":8977198,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977199,"byte_end":8977233,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977234,"byte_end":8977257,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977258,"byte_end":8977261,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977262,"byte_end":8977307,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977308,"byte_end":8977353,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977354,"byte_end":8977374,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977375,"byte_end":8977407,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977408,"byte_end":8977462,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977463,"byte_end":8977508,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977509,"byte_end":8977542,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977543,"byte_end":8977579,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977580,"byte_end":8977616,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977617,"byte_end":8977652,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977653,"byte_end":8977667,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977668,"byte_end":8977679,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977680,"byte_end":8977685,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977686,"byte_end":8977760,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977761,"byte_end":8977799,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977800,"byte_end":8977855,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977856,"byte_end":8977927,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977928,"byte_end":8977935,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8977936,"byte_end":8977943,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6385},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978442,"byte_end":8978445,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (mut n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978202,"byte_end":8978269,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978274,"byte_end":8978277,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978282,"byte_end":8978370,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978375,"byte_end":8978430,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6386},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979518,"byte_end":8979522,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979044,"byte_end":8979104,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979109,"byte_end":8979112,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979117,"byte_end":8979193,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979198,"byte_end":8979223,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979228,"byte_end":8979231,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979236,"byte_end":8979329,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979334,"byte_end":8979427,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8979432,"byte_end":8979500,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7732},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981444,"byte_end":8981461,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981308,"byte_end":8981408,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6390},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981709,"byte_end":8981718,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981499,"byte_end":8981566,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981571,"byte_end":8981574,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981579,"byte_end":8981671,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981676,"byte_end":8981697,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6394},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6402},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6419},{"krate":0,"index":7739},{"krate":0,"index":7743},{"krate":0,"index":7746},{"krate":0,"index":7756},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7758},{"krate":0,"index":7770},{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":6424},{"krate":0,"index":6430},{"krate":0,"index":6435},{"krate":0,"index":6441},{"krate":0,"index":6446},{"krate":0,"index":6450},{"krate":0,"index":6456},{"krate":0,"index":6460},{"krate":0,"index":6463},{"krate":0,"index":6467},{"krate":0,"index":6470},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":6493},{"krate":0,"index":6495},{"krate":0,"index":6498},{"krate":0,"index":6501},{"krate":0,"index":6505},{"krate":0,"index":6525},{"krate":0,"index":6530},{"krate":0,"index":6535},{"krate":0,"index":6540},{"krate":0,"index":7772},{"krate":0,"index":7773},{"krate":0,"index":7777},{"krate":0,"index":6545},{"krate":0,"index":6551},{"krate":0,"index":6557},{"krate":0,"index":6560},{"krate":0,"index":6563},{"krate":0,"index":6568},{"krate":0,"index":6573},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6578},{"krate":0,"index":6579}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21207,"byte_end":21231,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8981760,"byte_end":8981840,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8981841,"byte_end":8981859,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8981860,"byte_end":8981863,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8981864,"byte_end":8981942,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8981943,"byte_end":8982018,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982019,"byte_end":8982097,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982098,"byte_end":8982152,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982153,"byte_end":8982156,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982157,"byte_end":8982233,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982234,"byte_end":8982314,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982315,"byte_end":8982392,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982393,"byte_end":8982443,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982444,"byte_end":8982447,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982448,"byte_end":8982526,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982527,"byte_end":8982584,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982585,"byte_end":8982588,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982589,"byte_end":8982667,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982668,"byte_end":8982740,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982741,"byte_end":8982757,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982758,"byte_end":8982761,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982762,"byte_end":8982776,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982777,"byte_end":8982780,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982781,"byte_end":8982861,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982862,"byte_end":8982941,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8982942,"byte_end":8983019,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983020,"byte_end":8983098,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983099,"byte_end":8983106,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983107,"byte_end":8983110,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983111,"byte_end":8983188,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983189,"byte_end":8983264,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983265,"byte_end":8983345,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983346,"byte_end":8983349,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983350,"byte_end":8983422,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983423,"byte_end":8983501,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983502,"byte_end":8983578,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983579,"byte_end":8983638,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983639,"byte_end":8983642,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983643,"byte_end":8983721,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983722,"byte_end":8983796,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983797,"byte_end":8983833,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983834,"byte_end":8983837,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983838,"byte_end":8983917,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983918,"byte_end":8983995,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8983996,"byte_end":8984071,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984072,"byte_end":8984103,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984104,"byte_end":8984107,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984108,"byte_end":8984122,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984123,"byte_end":8984126,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984127,"byte_end":8984202,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984203,"byte_end":8984281,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984282,"byte_end":8984359,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984360,"byte_end":8984391,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984392,"byte_end":8984395,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984396,"byte_end":8984442,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984443,"byte_end":8984511,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984512,"byte_end":8984562,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984563,"byte_end":8984611,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984612,"byte_end":8984680,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984681,"byte_end":8984749,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984750,"byte_end":8984802,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984803,"byte_end":8984806,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984807,"byte_end":8984821,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984822,"byte_end":8984825,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984826,"byte_end":8984841,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984842,"byte_end":8984845,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984846,"byte_end":8984853,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984854,"byte_end":8984885,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984886,"byte_end":8984889,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984890,"byte_end":8984908,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984909,"byte_end":8984930,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984931,"byte_end":8984982,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8984983,"byte_end":8985020,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985021,"byte_end":8985024,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985025,"byte_end":8985058,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985059,"byte_end":8985113,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985114,"byte_end":8985168,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985169,"byte_end":8985180,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985181,"byte_end":8985184,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985185,"byte_end":8985218,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985219,"byte_end":8985273,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985274,"byte_end":8985328,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985329,"byte_end":8985340,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985341,"byte_end":8985344,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985345,"byte_end":8985374,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985375,"byte_end":8985404,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985405,"byte_end":8985410,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985411,"byte_end":8985418,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985419,"byte_end":8985422,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985423,"byte_end":8985439,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985440,"byte_end":8985443,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985444,"byte_end":8985451,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985452,"byte_end":8985483,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985484,"byte_end":8985487,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985488,"byte_end":8985506,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985507,"byte_end":8985528,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985529,"byte_end":8985578,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985579,"byte_end":8985582,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985583,"byte_end":8985612,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985613,"byte_end":8985642,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985643,"byte_end":8985672,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985673,"byte_end":8985676,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985677,"byte_end":8985714,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985715,"byte_end":8985757,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985758,"byte_end":8985761,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985762,"byte_end":8985831,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985832,"byte_end":8985835,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985836,"byte_end":8985885,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985886,"byte_end":8985935,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8985936,"byte_end":8985941,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6416},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987138,"byte_end":8987144,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6418}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986345,"byte_end":8986391,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986392,"byte_end":8986395,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986396,"byte_end":8986456,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986457,"byte_end":8986484,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986485,"byte_end":8986488,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986489,"byte_end":8986503,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986504,"byte_end":8986507,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986508,"byte_end":8986515,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986516,"byte_end":8986547,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986548,"byte_end":8986551,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986552,"byte_end":8986570,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986571,"byte_end":8986592,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986593,"byte_end":8986644,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986645,"byte_end":8986682,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986683,"byte_end":8986686,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986687,"byte_end":8986720,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986721,"byte_end":8986775,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986776,"byte_end":8986830,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986831,"byte_end":8986842,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986843,"byte_end":8986846,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986847,"byte_end":8986880,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986881,"byte_end":8986935,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986936,"byte_end":8986990,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8986991,"byte_end":8987002,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987003,"byte_end":8987006,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987007,"byte_end":8987036,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987037,"byte_end":8987066,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987067,"byte_end":8987072,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987073,"byte_end":8987080,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987081,"byte_end":8987084,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987085,"byte_end":8987126,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6419},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987984,"byte_end":8987992,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987181,"byte_end":8987229,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987230,"byte_end":8987233,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987234,"byte_end":8987300,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987301,"byte_end":8987330,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987331,"byte_end":8987334,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987335,"byte_end":8987349,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987350,"byte_end":8987353,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987354,"byte_end":8987361,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987362,"byte_end":8987393,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987394,"byte_end":8987397,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987398,"byte_end":8987416,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987417,"byte_end":8987438,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987439,"byte_end":8987490,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987491,"byte_end":8987528,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987529,"byte_end":8987532,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987533,"byte_end":8987566,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987567,"byte_end":8987621,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987622,"byte_end":8987676,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987677,"byte_end":8987688,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987689,"byte_end":8987692,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987693,"byte_end":8987726,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987727,"byte_end":8987781,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987782,"byte_end":8987836,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987837,"byte_end":8987848,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987849,"byte_end":8987852,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987853,"byte_end":8987882,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987883,"byte_end":8987912,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987913,"byte_end":8987918,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987919,"byte_end":8987926,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987927,"byte_end":8987930,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8987931,"byte_end":8987972,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7739},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988535,"byte_end":8988544,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988238,"byte_end":8988291,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988292,"byte_end":8988295,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988296,"byte_end":8988368,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988369,"byte_end":8988446,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988447,"byte_end":8988506,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7747},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988883,"byte_end":8988889,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7746},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988786,"byte_end":8988861,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988866,"byte_end":8988878,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7749},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989095,"byte_end":8989101,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7746},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988896,"byte_end":8988968,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988973,"byte_end":8989033,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989038,"byte_end":8989041,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989046,"byte_end":8989090,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7746},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988770,"byte_end":8988779,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"RecvError::{Closed, Lagged}","parent":null,"children":[{"krate":0,"index":7747},{"krate":0,"index":7749}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988557,"byte_end":8988624,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988625,"byte_end":8988628,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988629,"byte_end":8988681,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8988682,"byte_end":8988732,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7759},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989488,"byte_end":8989493,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7758},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989355,"byte_end":8989413,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989418,"byte_end":8989483,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7761},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989597,"byte_end":8989603,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7758},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989500,"byte_end":8989575,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989580,"byte_end":8989592,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7763},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989852,"byte_end":8989858,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7758},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989610,"byte_end":8989684,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989689,"byte_end":8989757,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989762,"byte_end":8989790,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989795,"byte_end":8989798,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989803,"byte_end":8989847,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7758},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989336,"byte_end":8989348,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"TryRecvError::{Empty, Closed, Lagged}","parent":null,"children":[{"krate":0,"index":7759},{"krate":0,"index":7761},{"krate":0,"index":7763}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989111,"byte_end":8989182,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989183,"byte_end":8989186,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989187,"byte_end":8989247,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8989248,"byte_end":8989298,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6474},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994159,"byte_end":8994166,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn <T> (mut capacity: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992547,"byte_end":8992623,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992624,"byte_end":8992673,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992674,"byte_end":8992677,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992678,"byte_end":8992747,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992748,"byte_end":8992798,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992799,"byte_end":8992802,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992803,"byte_end":8992877,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992878,"byte_end":8992953,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992954,"byte_end":8993022,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993023,"byte_end":8993026,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993027,"byte_end":8993103,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993104,"byte_end":8993185,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993186,"byte_end":8993225,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993226,"byte_end":8993229,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993230,"byte_end":8993276,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993277,"byte_end":8993345,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993346,"byte_end":8993396,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993397,"byte_end":8993449,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993450,"byte_end":8993502,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993503,"byte_end":8993555,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993556,"byte_end":8993559,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993560,"byte_end":8993574,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993575,"byte_end":8993578,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993579,"byte_end":8993586,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993587,"byte_end":8993618,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993619,"byte_end":8993622,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993623,"byte_end":8993641,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993642,"byte_end":8993663,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993664,"byte_end":8993715,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993716,"byte_end":8993753,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993754,"byte_end":8993757,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993758,"byte_end":8993791,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993792,"byte_end":8993846,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993847,"byte_end":8993901,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993902,"byte_end":8993913,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993914,"byte_end":8993917,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993918,"byte_end":8993951,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8993952,"byte_end":8994006,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994007,"byte_end":8994061,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994062,"byte_end":8994073,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994074,"byte_end":8994077,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994078,"byte_end":8994107,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994108,"byte_end":8994137,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994138,"byte_end":8994143,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8994144,"byte_end":8994151,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6486},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997233,"byte_end":8997237,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995383,"byte_end":8995457,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995462,"byte_end":8995498,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995503,"byte_end":8995506,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995511,"byte_end":8995586,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995591,"byte_end":8995657,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995662,"byte_end":8995713,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995718,"byte_end":8995721,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995726,"byte_end":8995738,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995743,"byte_end":8995746,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995751,"byte_end":8995825,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995830,"byte_end":8995906,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995911,"byte_end":8995964,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995969,"byte_end":8995972,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995977,"byte_end":8995987,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995992,"byte_end":8995995,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996000,"byte_end":8996072,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996077,"byte_end":8996152,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996157,"byte_end":8996218,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996223,"byte_end":8996226,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996231,"byte_end":8996304,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996309,"byte_end":8996374,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996379,"byte_end":8996397,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996402,"byte_end":8996405,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996410,"byte_end":8996460,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996465,"byte_end":8996525,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996530,"byte_end":8996533,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996538,"byte_end":8996552,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996557,"byte_end":8996560,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996565,"byte_end":8996572,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996577,"byte_end":8996608,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996613,"byte_end":8996616,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996621,"byte_end":8996639,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996644,"byte_end":8996665,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996670,"byte_end":8996721,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996726,"byte_end":8996763,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996768,"byte_end":8996771,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996776,"byte_end":8996809,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996814,"byte_end":8996868,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996873,"byte_end":8996927,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996932,"byte_end":8996943,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996948,"byte_end":8996951,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996956,"byte_end":8996989,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8996994,"byte_end":8997048,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997053,"byte_end":8997107,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997112,"byte_end":8997123,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997128,"byte_end":8997131,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997136,"byte_end":8997165,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997170,"byte_end":8997199,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997204,"byte_end":8997209,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997214,"byte_end":8997221,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6488},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997997,"byte_end":8998006,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn (&self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997402,"byte_end":8997479,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997484,"byte_end":8997513,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997518,"byte_end":8997521,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997526,"byte_end":8997540,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997545,"byte_end":8997548,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997553,"byte_end":8997560,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997565,"byte_end":8997596,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997601,"byte_end":8997604,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997609,"byte_end":8997627,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997632,"byte_end":8997653,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997658,"byte_end":8997705,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997710,"byte_end":8997713,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997718,"byte_end":8997745,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997750,"byte_end":8997779,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997784,"byte_end":8997787,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997792,"byte_end":8997828,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997833,"byte_end":8997836,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997841,"byte_end":8997870,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997875,"byte_end":8997878,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997883,"byte_end":8997928,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997933,"byte_end":8997963,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997968,"byte_end":8997973,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8997978,"byte_end":8997985,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6489},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999593,"byte_end":8999607,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998441,"byte_end":8998483,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998488,"byte_end":8998491,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998496,"byte_end":8998572,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998577,"byte_end":8998650,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998655,"byte_end":8998675,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998680,"byte_end":8998683,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998688,"byte_end":8998698,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998703,"byte_end":8998706,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998711,"byte_end":8998781,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998786,"byte_end":8998854,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998859,"byte_end":8998872,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998877,"byte_end":8998880,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998885,"byte_end":8998937,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998942,"byte_end":8998992,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8998997,"byte_end":8999043,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999048,"byte_end":8999108,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999113,"byte_end":8999161,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999166,"byte_end":8999169,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999174,"byte_end":8999188,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999193,"byte_end":8999196,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999201,"byte_end":8999208,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999213,"byte_end":8999244,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999249,"byte_end":8999252,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999257,"byte_end":8999275,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999280,"byte_end":8999301,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999306,"byte_end":8999354,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999359,"byte_end":8999362,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999367,"byte_end":8999410,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999415,"byte_end":8999418,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999423,"byte_end":8999461,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999466,"byte_end":8999469,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999474,"byte_end":8999517,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999522,"byte_end":8999525,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999530,"byte_end":8999559,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999564,"byte_end":8999569,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8999574,"byte_end":8999581,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6507},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008256,"byte_end":9008264,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006662,"byte_end":9006735,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006740,"byte_end":9006743,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006748,"byte_end":9006820,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006825,"byte_end":9006849,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006854,"byte_end":9006857,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006862,"byte_end":9006942,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006947,"byte_end":9007021,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007026,"byte_end":9007029,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007034,"byte_end":9007107,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007112,"byte_end":9007186,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007191,"byte_end":9007194,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007199,"byte_end":9007275,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007280,"byte_end":9007356,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007361,"byte_end":9007432,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007437,"byte_end":9007510,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007515,"byte_end":9007588,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007593,"byte_end":9007664,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007669,"byte_end":9007721,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007726,"byte_end":9007729,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007734,"byte_end":9007786,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007791,"byte_end":9007841,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007846,"byte_end":9007849,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007854,"byte_end":9007868,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007873,"byte_end":9007876,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007881,"byte_end":9007888,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007893,"byte_end":9007924,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007929,"byte_end":9007932,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007937,"byte_end":9007955,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007960,"byte_end":9007981,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9007986,"byte_end":9008036,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008041,"byte_end":9008044,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008049,"byte_end":9008089,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008094,"byte_end":9008097,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008102,"byte_end":9008131,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008136,"byte_end":9008139,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008144,"byte_end":9008187,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008192,"byte_end":9008222,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008227,"byte_end":9008232,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008237,"byte_end":9008244,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008506,"byte_end":9008515,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9008433,"byte_end":9008494,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6522},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012546,"byte_end":9012550,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010330,"byte_end":9010376,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010381,"byte_end":9010384,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010389,"byte_end":9010457,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010462,"byte_end":9010494,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010499,"byte_end":9010502,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010507,"byte_end":9010577,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010582,"byte_end":9010656,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010661,"byte_end":9010664,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010669,"byte_end":9010745,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010750,"byte_end":9010826,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010831,"byte_end":9010899,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010904,"byte_end":9010977,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9010982,"byte_end":9011051,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011056,"byte_end":9011101,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011106,"byte_end":9011109,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011114,"byte_end":9011164,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011169,"byte_end":9011221,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011226,"byte_end":9011229,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011234,"byte_end":9011248,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011253,"byte_end":9011256,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011261,"byte_end":9011268,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011273,"byte_end":9011304,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011309,"byte_end":9011312,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011317,"byte_end":9011335,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011340,"byte_end":9011361,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011366,"byte_end":9011417,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011422,"byte_end":9011459,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011464,"byte_end":9011467,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011472,"byte_end":9011505,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011510,"byte_end":9011564,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011569,"byte_end":9011623,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011628,"byte_end":9011639,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011644,"byte_end":9011647,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011652,"byte_end":9011685,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011690,"byte_end":9011744,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011749,"byte_end":9011803,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011808,"byte_end":9011819,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011824,"byte_end":9011827,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011832,"byte_end":9011861,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011866,"byte_end":9011895,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011900,"byte_end":9011905,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011910,"byte_end":9011917,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011922,"byte_end":9011925,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011930,"byte_end":9011946,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011951,"byte_end":9011954,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011959,"byte_end":9011966,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9011971,"byte_end":9012002,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012007,"byte_end":9012010,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012015,"byte_end":9012033,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012038,"byte_end":9012059,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012064,"byte_end":9012113,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012118,"byte_end":9012121,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012126,"byte_end":9012155,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012160,"byte_end":9012189,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012194,"byte_end":9012223,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012228,"byte_end":9012231,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012236,"byte_end":9012273,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012278,"byte_end":9012320,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012325,"byte_end":9012328,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012333,"byte_end":9012402,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012407,"byte_end":9012410,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012415,"byte_end":9012464,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012469,"byte_end":9012518,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012523,"byte_end":9012528,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":7775},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9017204,"byte_end":9017215,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"fn (self) -> impl Stream<Item = Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6581},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":6582},{"krate":0,"index":6655},{"krate":0,"index":6715},{"krate":0,"index":6719},{"krate":0,"index":6882},{"krate":0,"index":6928},{"krate":0,"index":6975},{"krate":0,"index":6979},{"krate":0,"index":7006}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21207,"byte_end":21231,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9020869,"byte_end":9020938,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9020939,"byte_end":9020962,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9020963,"byte_end":9020966,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9020967,"byte_end":9021042,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021043,"byte_end":9021121,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021122,"byte_end":9021202,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021203,"byte_end":9021281,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! is rejected and the task will be notified when additional capacity is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021282,"byte_end":9021355,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"! available. In other words, the channel provides backpressure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021356,"byte_end":9021421,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021422,"byte_end":9021425,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded_channel`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021426,"byte_end":9021497,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! constructor.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021498,"byte_end":9021514,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021515,"byte_end":9021518,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021519,"byte_end":9021538,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021539,"byte_end":9021542,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021543,"byte_end":9021609,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021610,"byte_end":9021690,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021691,"byte_end":9021768,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021769,"byte_end":9021772,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021773,"byte_end":9021843,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021844,"byte_end":9021923,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021924,"byte_end":9021947,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021948,"byte_end":9021951,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021952,"byte_end":9021972,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021973,"byte_end":9021976,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9021977,"byte_end":9022057,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022058,"byte_end":9022138,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022139,"byte_end":9022217,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022218,"byte_end":9022290,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022291,"byte_end":9022365,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022366,"byte_end":9022378,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022379,"byte_end":9022382,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022383,"byte_end":9022424,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"! [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022425,"byte_end":9022470,"line_start":36,"line_end":36,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036335,"byte_end":9036341,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6669}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036210,"byte_end":9036255,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036256,"byte_end":9036259,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036260,"byte_end":9036323,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036850,"byte_end":9036858,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6678}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036722,"byte_end":9036770,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036771,"byte_end":9036774,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036775,"byte_end":9036838,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6682},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038246,"byte_end":9038253,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037139,"byte_end":9037219,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037220,"byte_end":9037261,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037262,"byte_end":9037265,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037266,"byte_end":9037343,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037344,"byte_end":9037369,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037370,"byte_end":9037373,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037374,"byte_end":9037453,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037454,"byte_end":9037502,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037503,"byte_end":9037506,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037507,"byte_end":9037586,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037587,"byte_end":9037662,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037663,"byte_end":9037729,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037730,"byte_end":9037733,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037734,"byte_end":9037748,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037749,"byte_end":9037752,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037753,"byte_end":9037764,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037765,"byte_end":9037791,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037792,"byte_end":9037795,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037796,"byte_end":9037814,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037815,"byte_end":9037836,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037837,"byte_end":9037887,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037888,"byte_end":9037891,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037892,"byte_end":9037925,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037926,"byte_end":9037954,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9037955,"byte_end":9038005,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038006,"byte_end":9038055,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038056,"byte_end":9038083,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038084,"byte_end":9038101,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038102,"byte_end":9038115,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038116,"byte_end":9038127,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038128,"byte_end":9038131,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038132,"byte_end":9038177,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038178,"byte_end":9038214,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038215,"byte_end":9038224,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038225,"byte_end":9038230,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038231,"byte_end":9038238,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6688},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039935,"byte_end":9039939,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038853,"byte_end":9038899,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038904,"byte_end":9038907,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038912,"byte_end":9038984,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038989,"byte_end":9039043,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039048,"byte_end":9039051,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039056,"byte_end":9039070,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039075,"byte_end":9039078,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039083,"byte_end":9039090,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039095,"byte_end":9039121,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039126,"byte_end":9039129,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039134,"byte_end":9039152,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039157,"byte_end":9039178,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039183,"byte_end":9039233,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039238,"byte_end":9039241,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039246,"byte_end":9039279,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039284,"byte_end":9039328,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039333,"byte_end":9039344,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039349,"byte_end":9039352,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039357,"byte_end":9039408,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039413,"byte_end":9039455,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039460,"byte_end":9039465,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039470,"byte_end":9039477,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039482,"byte_end":9039485,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039490,"byte_end":9039514,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039519,"byte_end":9039522,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039527,"byte_end":9039534,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039539,"byte_end":9039565,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039570,"byte_end":9039573,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039578,"byte_end":9039596,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039601,"byte_end":9039622,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039627,"byte_end":9039677,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039682,"byte_end":9039685,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039690,"byte_end":9039730,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039735,"byte_end":9039775,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039780,"byte_end":9039783,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039788,"byte_end":9039839,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039844,"byte_end":9039895,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039900,"byte_end":9039905,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9039910,"byte_end":9039917,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6693},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040105,"byte_end":9040114,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040770,"byte_end":9040778,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040207,"byte_end":9040280,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040285,"byte_end":9040288,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040293,"byte_end":9040365,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040370,"byte_end":9040441,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040446,"byte_end":9040499,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040504,"byte_end":9040507,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040512,"byte_end":9040584,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040589,"byte_end":9040613,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040618,"byte_end":9040621,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040626,"byte_end":9040696,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040701,"byte_end":9040758,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6695},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041096,"byte_end":9041101,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040859,"byte_end":9040923,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040928,"byte_end":9040931,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9040936,"byte_end":9041011,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041016,"byte_end":9041084,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6701},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043191,"byte_end":9043195,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&mut self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041547,"byte_end":9041598,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041603,"byte_end":9041606,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041611,"byte_end":9041687,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041692,"byte_end":9041768,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041773,"byte_end":9041847,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041852,"byte_end":9041927,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041932,"byte_end":9042001,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042006,"byte_end":9042078,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042083,"byte_end":9042114,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042119,"byte_end":9042122,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042127,"byte_end":9042139,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042144,"byte_end":9042147,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042152,"byte_end":9042225,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042230,"byte_end":9042304,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042309,"byte_end":9042369,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042374,"byte_end":9042377,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042382,"byte_end":9042412,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042417,"byte_end":9042443,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042448,"byte_end":9042451,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042456,"byte_end":9042470,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042475,"byte_end":9042478,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042483,"byte_end":9042553,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042558,"byte_end":9042597,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042602,"byte_end":9042605,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042610,"byte_end":9042621,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042626,"byte_end":9042652,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042657,"byte_end":9042660,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042665,"byte_end":9042683,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042688,"byte_end":9042709,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042714,"byte_end":9042762,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042767,"byte_end":9042770,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042775,"byte_end":9042808,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042813,"byte_end":9042841,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042846,"byte_end":9042896,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042901,"byte_end":9042950,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042955,"byte_end":9042982,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9042987,"byte_end":9043004,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043009,"byte_end":9043022,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043027,"byte_end":9043038,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043043,"byte_end":9043046,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043051,"byte_end":9043096,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043101,"byte_end":9043137,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043142,"byte_end":9043151,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043156,"byte_end":9043161,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043166,"byte_end":9043173,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6706},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045928,"byte_end":9045936,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, message: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043616,"byte_end":9043675,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043680,"byte_end":9043683,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043688,"byte_end":9043767,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043772,"byte_end":9043847,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043852,"byte_end":9043930,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043935,"byte_end":9043977,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043982,"byte_end":9043985,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9043990,"byte_end":9044062,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044067,"byte_end":9044118,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044123,"byte_end":9044126,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044131,"byte_end":9044143,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044148,"byte_end":9044151,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044156,"byte_end":9044227,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044232,"byte_end":9044308,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044313,"byte_end":9044335,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044340,"byte_end":9044343,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044348,"byte_end":9044421,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044426,"byte_end":9044500,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044505,"byte_end":9044565,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044570,"byte_end":9044573,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044578,"byte_end":9044604,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044609,"byte_end":9044647,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044652,"byte_end":9044676,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044681,"byte_end":9044711,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044716,"byte_end":9044719,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044724,"byte_end":9044738,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044743,"byte_end":9044746,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044751,"byte_end":9044758,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044763,"byte_end":9044789,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044794,"byte_end":9044797,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044802,"byte_end":9044820,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044825,"byte_end":9044846,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044851,"byte_end":9044897,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044902,"byte_end":9044951,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044956,"byte_end":9044990,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9044995,"byte_end":9044998,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045003,"byte_end":9045036,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045041,"byte_end":9045080,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045085,"byte_end":9045124,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045129,"byte_end":9045191,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045196,"byte_end":9045207,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045212,"byte_end":9045215,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045220,"byte_end":9045253,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045258,"byte_end":9045307,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045312,"byte_end":9045359,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045364,"byte_end":9045400,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045405,"byte_end":9045416,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045421,"byte_end":9045424,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045429,"byte_end":9045449,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045454,"byte_end":9045493,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045498,"byte_end":9045543,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045548,"byte_end":9045551,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045556,"byte_end":9045595,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045600,"byte_end":9045645,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045650,"byte_end":9045653,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045658,"byte_end":9045707,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045712,"byte_end":9045743,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045748,"byte_end":9045810,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045815,"byte_end":9045880,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045885,"byte_end":9045894,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045899,"byte_end":9045904,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9045909,"byte_end":9045916,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047753,"byte_end":9047765,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"fn (&mut self, value: T, timeout: Duration) -> Result<(), SendTimeoutError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046057,"byte_end":9046137,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046142,"byte_end":9046145,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046150,"byte_end":9046227,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046232,"byte_end":9046310,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046315,"byte_end":9046363,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046368,"byte_end":9046371,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046376,"byte_end":9046402,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046407,"byte_end":9046410,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046415,"byte_end":9046427,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046432,"byte_end":9046435,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046440,"byte_end":9046513,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046518,"byte_end":9046575,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046580,"byte_end":9046661,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046666,"byte_end":9046669,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046674,"byte_end":9046704,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046709,"byte_end":9046735,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046740,"byte_end":9046743,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046748,"byte_end":9046762,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046767,"byte_end":9046770,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046775,"byte_end":9046853,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046858,"byte_end":9046929,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046934,"byte_end":9046937,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046942,"byte_end":9046953,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046958,"byte_end":9046984,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9046989,"byte_end":9047032,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047037,"byte_end":9047040,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047045,"byte_end":9047063,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047068,"byte_end":9047089,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047094,"byte_end":9047142,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047147,"byte_end":9047150,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047155,"byte_end":9047188,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047193,"byte_end":9047221,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047226,"byte_end":9047312,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047317,"byte_end":9047370,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047375,"byte_end":9047402,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047407,"byte_end":9047424,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047429,"byte_end":9047442,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047447,"byte_end":9047458,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047463,"byte_end":9047466,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047471,"byte_end":9047516,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047521,"byte_end":9047557,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047562,"byte_end":9047618,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047623,"byte_end":9047632,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047637,"byte_end":9047642,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047647,"byte_end":9047654,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9047659,"byte_end":9047683,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6712},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049549,"byte_end":9049559,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048468,"byte_end":9048550,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048555,"byte_end":9048558,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048563,"byte_end":9048655,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048660,"byte_end":9048687,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048692,"byte_end":9048695,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048700,"byte_end":9048793,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048798,"byte_end":9048893,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048898,"byte_end":9048991,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9048996,"byte_end":9049091,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049096,"byte_end":9049143,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049148,"byte_end":9049151,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049156,"byte_end":9049250,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049255,"byte_end":9049323,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049328,"byte_end":9049331,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049336,"byte_end":9049420,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049425,"byte_end":9049518,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049523,"byte_end":9049537,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6714},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052115,"byte_end":9052121,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049704,"byte_end":9049747,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049752,"byte_end":9049755,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049760,"byte_end":9049850,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049855,"byte_end":9049948,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9049953,"byte_end":9050044,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050049,"byte_end":9050137,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050142,"byte_end":9050145,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050150,"byte_end":9050242,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050247,"byte_end":9050294,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050299,"byte_end":9050302,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050307,"byte_end":9050323,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050328,"byte_end":9050331,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050336,"byte_end":9050431,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050436,"byte_end":9050530,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050535,"byte_end":9050629,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050634,"byte_end":9050708,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050713,"byte_end":9050716,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050721,"byte_end":9050739,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050744,"byte_end":9050754,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050759,"byte_end":9050792,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050797,"byte_end":9050849,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050854,"byte_end":9050881,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050886,"byte_end":9050900,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050905,"byte_end":9050919,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050924,"byte_end":9050931,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050936,"byte_end":9050941,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050946,"byte_end":9050953,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050958,"byte_end":9050961,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9050966,"byte_end":9051059,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051064,"byte_end":9051159,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051164,"byte_end":9051250,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051255,"byte_end":9051350,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051355,"byte_end":9051419,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051424,"byte_end":9051427,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051432,"byte_end":9051526,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051531,"byte_end":9051596,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051601,"byte_end":9051604,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051609,"byte_end":9051627,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051632,"byte_end":9051642,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051647,"byte_end":9051680,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051685,"byte_end":9051719,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051724,"byte_end":9051764,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051769,"byte_end":9051831,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051836,"byte_end":9051850,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051855,"byte_end":9051917,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051922,"byte_end":9051942,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051947,"byte_end":9051954,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9051959,"byte_end":9051999,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052004,"byte_end":9052031,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052036,"byte_end":9052050,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052055,"byte_end":9052069,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052074,"byte_end":9052081,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052086,"byte_end":9052091,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9052096,"byte_end":9052103,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":6765},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9054113,"byte_end":9054119,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":6764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077457,"byte_end":9077472,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":6940}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077299,"byte_end":9077353,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077354,"byte_end":9077357,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077358,"byte_end":9077390,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077391,"byte_end":9077445,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6947},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078050,"byte_end":9078067,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":6949}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077889,"byte_end":9077946,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077947,"byte_end":9077950,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077951,"byte_end":9077983,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077984,"byte_end":9078038,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":6953},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078878,"byte_end":9078895,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078366,"byte_end":9078442,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078443,"byte_end":9078453,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078454,"byte_end":9078457,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078458,"byte_end":9078538,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078539,"byte_end":9078618,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078619,"byte_end":9078632,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078633,"byte_end":9078636,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078637,"byte_end":9078716,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078717,"byte_end":9078793,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078794,"byte_end":9078870,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6959},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079343,"byte_end":9079352,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6960},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080515,"byte_end":9080519,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079445,"byte_end":9079491,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079496,"byte_end":9079499,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079504,"byte_end":9079576,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079581,"byte_end":9079635,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079640,"byte_end":9079643,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079648,"byte_end":9079662,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079667,"byte_end":9079670,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079675,"byte_end":9079682,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079687,"byte_end":9079713,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079718,"byte_end":9079721,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079726,"byte_end":9079744,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079749,"byte_end":9079770,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079775,"byte_end":9079828,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079833,"byte_end":9079836,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079841,"byte_end":9079874,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079879,"byte_end":9079917,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079922,"byte_end":9079933,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079938,"byte_end":9079941,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079946,"byte_end":9079997,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080002,"byte_end":9080044,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080049,"byte_end":9080054,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080059,"byte_end":9080066,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080071,"byte_end":9080074,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080079,"byte_end":9080103,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080108,"byte_end":9080111,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080116,"byte_end":9080123,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080128,"byte_end":9080154,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080159,"byte_end":9080162,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080167,"byte_end":9080185,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080190,"byte_end":9080211,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080216,"byte_end":9080269,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080274,"byte_end":9080277,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080282,"byte_end":9080316,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080321,"byte_end":9080355,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080360,"byte_end":9080363,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080368,"byte_end":9080419,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080424,"byte_end":9080475,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080480,"byte_end":9080485,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080490,"byte_end":9080497,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6965},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081204,"byte_end":9081212,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080641,"byte_end":9080714,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080719,"byte_end":9080722,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080727,"byte_end":9080799,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080804,"byte_end":9080875,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080880,"byte_end":9080933,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080938,"byte_end":9080941,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9080946,"byte_end":9081018,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081023,"byte_end":9081047,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081052,"byte_end":9081055,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081060,"byte_end":9081130,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081135,"byte_end":9081192,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6966},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081530,"byte_end":9081535,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081293,"byte_end":9081357,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081362,"byte_end":9081365,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081370,"byte_end":9081445,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081450,"byte_end":9081518,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6974},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082400,"byte_end":9082404,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, message: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081970,"byte_end":9082044,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082049,"byte_end":9082052,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082057,"byte_end":9082130,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082135,"byte_end":9082201,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082206,"byte_end":9082287,"line_start":168,"line_end":168,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082292,"byte_end":9082295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082300,"byte_end":9082339,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9082344,"byte_end":9082388,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":6979},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":7803},{"krate":0,"index":7807},{"krate":0,"index":6982},{"krate":0,"index":6985},{"krate":0,"index":7810},{"krate":0,"index":7818},{"krate":0,"index":6987},{"krate":0,"index":6989},{"krate":0,"index":6992},{"krate":0,"index":7821},{"krate":0,"index":7824},{"krate":0,"index":6995},{"krate":0,"index":6997},{"krate":0,"index":7826},{"krate":0,"index":7834},{"krate":0,"index":7831},{"krate":0,"index":7832},{"krate":0,"index":6998},{"krate":0,"index":7000},{"krate":0,"index":7836},{"krate":0,"index":7839},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7846},{"krate":0,"index":7854},{"krate":0,"index":7841},{"krate":0,"index":7843}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082522,"byte_end":9082545,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7803},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082649,"byte_end":9082658,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082585,"byte_end":9082620,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7812},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083211,"byte_end":9083215,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083079,"byte_end":9083147,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083152,"byte_end":9083206,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7815},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083316,"byte_end":9083322,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083225,"byte_end":9083294,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083299,"byte_end":9083311,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":7810},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083057,"byte_end":9083069,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"TrySendError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":7812},{"krate":0,"index":7815}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082911,"byte_end":9082982,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082983,"byte_end":9083030,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7821},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083960,"byte_end":9083969,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083898,"byte_end":9083931,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7827},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084474,"byte_end":9084479,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7826},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084346,"byte_end":9084413,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084418,"byte_end":9084469,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7829},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084599,"byte_end":9084605,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7826},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084485,"byte_end":9084547,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084552,"byte_end":9084594,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":7826},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084327,"byte_end":9084339,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":7827},{"krate":0,"index":7829}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084180,"byte_end":9084250,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084251,"byte_end":9084289,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7836},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085096,"byte_end":9085107,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084995,"byte_end":9085067,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7848},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085713,"byte_end":9085720,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":7846},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7851},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085833,"byte_end":9085839,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":7846},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7846},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085551,"byte_end":9085567,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"SendTimeoutError::{Timeout, Closed}","parent":null,"children":[{"krate":0,"index":7848},{"krate":0,"index":7851}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23058,"byte_end":23082,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7857},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089880,"byte_end":9089885,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7859},{"krate":0,"index":7860}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086500,"byte_end":9086538,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086539,"byte_end":9086542,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086543,"byte_end":9086621,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block. Another difference is that the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086622,"byte_end":9086699,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ lock guard can be held across await points.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086700,"byte_end":9086747,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086748,"byte_end":9086751,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ There are some situations where you should prefer the mutex from the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086752,"byte_end":9086824,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ standard library. Generally this is the case if:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086825,"byte_end":9086877,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086878,"byte_end":9086881,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/  1. The lock does not need to be held across await points.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086882,"byte_end":9086944,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/  2. The duration of any single lock is near-instant.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9086945,"byte_end":9087001,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087002,"byte_end":9087005,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ On the other hand, the Tokio mutex is for the situation where the lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087006,"byte_end":9087080,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ needs to be held for longer periods of time, or across await points.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087081,"byte_end":9087153,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087154,"byte_end":9087157,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087158,"byte_end":9087173,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087174,"byte_end":9087177,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087178,"byte_end":9087196,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087197,"byte_end":9087224,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087225,"byte_end":9087248,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087249,"byte_end":9087252,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087253,"byte_end":9087271,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087272,"byte_end":9087293,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087294,"byte_end":9087338,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087339,"byte_end":9087378,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087379,"byte_end":9087382,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087383,"byte_end":9087416,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087417,"byte_end":9087463,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087464,"byte_end":9087487,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087488,"byte_end":9087499,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087500,"byte_end":9087503,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087504,"byte_end":9087546,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087547,"byte_end":9087566,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087567,"byte_end":9087572,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087573,"byte_end":9087580,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087581,"byte_end":9087584,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087585,"byte_end":9087588,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087589,"byte_end":9087607,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087608,"byte_end":9087635,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087636,"byte_end":9087659,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087660,"byte_end":9087663,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087664,"byte_end":9087682,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087683,"byte_end":9087704,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087705,"byte_end":9087749,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087750,"byte_end":9087753,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087754,"byte_end":9087777,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087778,"byte_end":9087824,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087825,"byte_end":9087862,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087863,"byte_end":9087895,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087896,"byte_end":9087953,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087954,"byte_end":9087985,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9087986,"byte_end":9088027,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088028,"byte_end":9088045,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088046,"byte_end":9088061,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088062,"byte_end":9088071,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088072,"byte_end":9088075,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088076,"byte_end":9088090,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088091,"byte_end":9088133,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088134,"byte_end":9088156,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088157,"byte_end":9088170,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088171,"byte_end":9088180,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088181,"byte_end":9088215,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088216,"byte_end":9088221,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088222,"byte_end":9088229,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088230,"byte_end":9088306,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088307,"byte_end":9088380,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088381,"byte_end":9088396,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088397,"byte_end":9088472,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088473,"byte_end":9088549,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088550,"byte_end":9088602,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088603,"byte_end":9088606,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088607,"byte_end":9088685,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088686,"byte_end":9088766,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088767,"byte_end":9088843,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088844,"byte_end":9088921,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9088922,"byte_end":9089000,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089001,"byte_end":9089081,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089082,"byte_end":9089162,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089163,"byte_end":9089232,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089233,"byte_end":9089236,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089237,"byte_end":9089316,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089317,"byte_end":9089396,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089397,"byte_end":9089475,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089476,"byte_end":9089537,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089538,"byte_end":9089541,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089542,"byte_end":9089569,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089570,"byte_end":9089607,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089608,"byte_end":9089671,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/ [`std::sync::Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089672,"byte_end":9089750,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089751,"byte_end":9089817,"line_start":98,"line_end":98,"column_start":1,"column_end":67}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089818,"byte_end":9089850,"line_start":99,"line_end":99,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7016},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090306,"byte_end":9090316,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7019}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089945,"byte_end":9089976,"line_start":107,"line_end":107,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089977,"byte_end":9089980,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9089981,"byte_end":9090060,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090061,"byte_end":9090136,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090137,"byte_end":9090170,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090171,"byte_end":9090174,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090175,"byte_end":9090253,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090254,"byte_end":9090294,"line_start":114,"line_end":114,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7020},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091095,"byte_end":9091110,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7022}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090353,"byte_end":9090391,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090392,"byte_end":9090395,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090396,"byte_end":9090477,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090478,"byte_end":9090558,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090559,"byte_end":9090633,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090634,"byte_end":9090695,"line_start":124,"line_end":124,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090696,"byte_end":9090699,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090700,"byte_end":9090779,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090780,"byte_end":9090858,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090859,"byte_end":9090927,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090928,"byte_end":9090931,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9090932,"byte_end":9091010,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091011,"byte_end":9091051,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091052,"byte_end":9091055,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091056,"byte_end":9091083,"line_start":133,"line_end":133,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7864},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091778,"byte_end":9091790,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091570,"byte_end":9091627,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091628,"byte_end":9091631,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091632,"byte_end":9091704,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091705,"byte_end":9091708,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091709,"byte_end":9091749,"line_start":150,"line_end":150,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093004,"byte_end":9093007,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092801,"byte_end":9092859,"line_start":187,"line_end":187,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092864,"byte_end":9092867,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092872,"byte_end":9092886,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092891,"byte_end":9092894,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092899,"byte_end":9092906,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092911,"byte_end":9092938,"line_start":192,"line_end":192,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092943,"byte_end":9092946,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092951,"byte_end":9092980,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092985,"byte_end":9092992,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093600,"byte_end":9093604,"line_start":220,"line_end":220,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093140,"byte_end":9093186,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093191,"byte_end":9093237,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093242,"byte_end":9093313,"line_start":205,"line_end":205,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093318,"byte_end":9093321,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093326,"byte_end":9093340,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093345,"byte_end":9093348,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093353,"byte_end":9093360,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093365,"byte_end":9093392,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093397,"byte_end":9093400,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093405,"byte_end":9093423,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093428,"byte_end":9093449,"line_start":213,"line_end":213,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093454,"byte_end":9093488,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093493,"byte_end":9093496,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093501,"byte_end":9093540,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093545,"byte_end":9093560,"line_start":217,"line_end":217,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093565,"byte_end":9093570,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093575,"byte_end":9093582,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7041},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094631,"byte_end":9094641,"line_start":251,"line_end":251,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn (self: Arc<Self>) -> OwnedMutexGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093710,"byte_end":9093784,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093789,"byte_end":9093856,"line_start":226,"line_end":226,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093861,"byte_end":9093885,"line_start":227,"line_end":227,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093890,"byte_end":9093893,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093898,"byte_end":9093971,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9093976,"byte_end":9094049,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094054,"byte_end":9094125,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094130,"byte_end":9094205,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094210,"byte_end":9094252,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094257,"byte_end":9094260,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094265,"byte_end":9094279,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094284,"byte_end":9094287,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094292,"byte_end":9094299,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094304,"byte_end":9094331,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094336,"byte_end":9094359,"line_start":239,"line_end":239,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094364,"byte_end":9094367,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094372,"byte_end":9094390,"line_start":241,"line_end":241,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094395,"byte_end":9094416,"line_start":242,"line_end":242,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094421,"byte_end":9094465,"line_start":243,"line_end":243,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094470,"byte_end":9094473,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094478,"byte_end":9094531,"line_start":245,"line_end":245,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094536,"byte_end":9094551,"line_start":246,"line_end":246,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094556,"byte_end":9094561,"line_start":247,"line_end":247,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094566,"byte_end":9094573,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094578,"byte_end":9094581,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9094586,"byte_end":9094613,"line_start":250,"line_end":250,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7048},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095518,"byte_end":9095526,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Result<MutexGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095050,"byte_end":9095119,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095124,"byte_end":9095166,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095171,"byte_end":9095174,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095179,"byte_end":9095213,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095218,"byte_end":9095232,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095237,"byte_end":9095240,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095245,"byte_end":9095252,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095257,"byte_end":9095284,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095289,"byte_end":9095352,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095357,"byte_end":9095360,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095365,"byte_end":9095395,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095400,"byte_end":9095403,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095408,"byte_end":9095438,"line_start":276,"line_end":276,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095443,"byte_end":9095465,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095470,"byte_end":9095482,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095487,"byte_end":9095494,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095499,"byte_end":9095506,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7049},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096647,"byte_end":9096661,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn (self: Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095735,"byte_end":9095809,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095814,"byte_end":9095851,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095856,"byte_end":9095859,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095864,"byte_end":9095932,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9095937,"byte_end":9096010,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096015,"byte_end":9096091,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096096,"byte_end":9096170,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096175,"byte_end":9096223,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096228,"byte_end":9096231,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096236,"byte_end":9096270,"line_start":297,"line_end":297,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096275,"byte_end":9096302,"line_start":298,"line_end":298,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096307,"byte_end":9096321,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096326,"byte_end":9096329,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096334,"byte_end":9096341,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096346,"byte_end":9096373,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096378,"byte_end":9096401,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096406,"byte_end":9096469,"line_start":304,"line_end":304,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096474,"byte_end":9096477,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096482,"byte_end":9096522,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096527,"byte_end":9096530,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096535,"byte_end":9096579,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096584,"byte_end":9096606,"line_start":309,"line_end":309,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096611,"byte_end":9096623,"line_start":310,"line_end":310,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096628,"byte_end":9096635,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7050},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097219,"byte_end":9097229,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096886,"byte_end":9096940,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096945,"byte_end":9096959,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096964,"byte_end":9096967,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096972,"byte_end":9096979,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9096984,"byte_end":9097011,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097016,"byte_end":9097019,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097024,"byte_end":9097042,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097047,"byte_end":9097068,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097073,"byte_end":9097107,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097112,"byte_end":9097115,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097120,"byte_end":9097155,"line_start":329,"line_end":329,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097160,"byte_end":9097185,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097190,"byte_end":9097195,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097200,"byte_end":9097207,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7869},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102163,"byte_end":9102169,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":7870},{"krate":0,"index":7871}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099353,"byte_end":9099389,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099390,"byte_end":9099393,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099394,"byte_end":9099470,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099471,"byte_end":9099551,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099552,"byte_end":9099593,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099594,"byte_end":9099597,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099598,"byte_end":9099672,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099673,"byte_end":9099754,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099755,"byte_end":9099821,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099822,"byte_end":9099825,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099826,"byte_end":9099884,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099885,"byte_end":9099965,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9099966,"byte_end":9100046,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100047,"byte_end":9100126,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100127,"byte_end":9100177,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100178,"byte_end":9100181,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100182,"byte_end":9100261,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100262,"byte_end":9100337,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100338,"byte_end":9100408,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100409,"byte_end":9100412,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100413,"byte_end":9100493,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100494,"byte_end":9100567,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100568,"byte_end":9100639,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100640,"byte_end":9100643,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100644,"byte_end":9100658,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100659,"byte_end":9100662,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100663,"byte_end":9100679,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100680,"byte_end":9100683,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100684,"byte_end":9100691,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100692,"byte_end":9100720,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100721,"byte_end":9100744,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100745,"byte_end":9100748,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100749,"byte_end":9100767,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100768,"byte_end":9100789,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100790,"byte_end":9100835,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100836,"byte_end":9100873,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100874,"byte_end":9100877,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100878,"byte_end":9100911,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100912,"byte_end":9100949,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100950,"byte_end":9100996,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9100997,"byte_end":9101008,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101009,"byte_end":9101012,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101013,"byte_end":9101054,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101055,"byte_end":9101079,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101080,"byte_end":9101085,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101086,"byte_end":9101093,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101094,"byte_end":9101097,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101098,"byte_end":9101123,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101124,"byte_end":9101127,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101128,"byte_end":9101135,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101136,"byte_end":9101164,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101165,"byte_end":9101168,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101169,"byte_end":9101204,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101205,"byte_end":9101230,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101231,"byte_end":9101234,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101235,"byte_end":9101258,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101259,"byte_end":9101294,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101295,"byte_end":9101318,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101319,"byte_end":9101324,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101325,"byte_end":9101328,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101329,"byte_end":9101353,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101354,"byte_end":9101392,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101393,"byte_end":9101432,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101433,"byte_end":9101467,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101468,"byte_end":9101471,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101472,"byte_end":9101527,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101528,"byte_end":9101561,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101562,"byte_end":9101571,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101572,"byte_end":9101575,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101576,"byte_end":9101615,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101616,"byte_end":9101634,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101635,"byte_end":9101666,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101667,"byte_end":9101745,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101746,"byte_end":9101779,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101780,"byte_end":9101797,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101798,"byte_end":9101801,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101802,"byte_end":9101852,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101853,"byte_end":9101898,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101899,"byte_end":9101912,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101913,"byte_end":9101922,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101923,"byte_end":9101928,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101929,"byte_end":9101936,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101937,"byte_end":9101940,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101941,"byte_end":9101970,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9101971,"byte_end":9102012,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102013,"byte_end":9102057,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102058,"byte_end":9102092,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102093,"byte_end":9102134,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7123},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103401,"byte_end":9103404,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"fn () -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103197,"byte_end":9103253,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103258,"byte_end":9103261,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103266,"byte_end":9103280,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103285,"byte_end":9103288,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103293,"byte_end":9103300,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103305,"byte_end":9103333,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103338,"byte_end":9103341,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103346,"byte_end":9103377,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103382,"byte_end":9103389,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7124},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104476,"byte_end":9104484,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103546,"byte_end":9103574,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103579,"byte_end":9103582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103587,"byte_end":9103663,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103668,"byte_end":9103742,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103747,"byte_end":9103822,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103827,"byte_end":9103896,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103901,"byte_end":9103904,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103909,"byte_end":9103941,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103946,"byte_end":9103949,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103954,"byte_end":9103968,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103973,"byte_end":9103976,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103981,"byte_end":9103988,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103993,"byte_end":9104021,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104026,"byte_end":9104049,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104054,"byte_end":9104057,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104062,"byte_end":9104080,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104085,"byte_end":9104106,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104111,"byte_end":9104156,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104161,"byte_end":9104198,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104203,"byte_end":9104206,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104211,"byte_end":9104244,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104249,"byte_end":9104286,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104291,"byte_end":9104337,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104342,"byte_end":9104353,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104358,"byte_end":9104361,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104366,"byte_end":9104407,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104412,"byte_end":9104436,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104441,"byte_end":9104446,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104451,"byte_end":9104458,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7127},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105980,"byte_end":9105986,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104821,"byte_end":9104848,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104853,"byte_end":9104856,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104861,"byte_end":9104932,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9104937,"byte_end":9105005,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105010,"byte_end":9105086,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105091,"byte_end":9105132,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105137,"byte_end":9105140,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105145,"byte_end":9105219,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105224,"byte_end":9105298,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105303,"byte_end":9105375,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105380,"byte_end":9105394,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105399,"byte_end":9105402,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105407,"byte_end":9105451,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105456,"byte_end":9105459,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105464,"byte_end":9105478,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105483,"byte_end":9105486,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105491,"byte_end":9105498,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105503,"byte_end":9105531,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105536,"byte_end":9105559,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105564,"byte_end":9105567,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105572,"byte_end":9105590,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105595,"byte_end":9105616,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105621,"byte_end":9105666,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105671,"byte_end":9105708,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105713,"byte_end":9105716,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105721,"byte_end":9105754,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105759,"byte_end":9105796,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105801,"byte_end":9105847,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105852,"byte_end":9105863,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105868,"byte_end":9105871,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105876,"byte_end":9105917,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105922,"byte_end":9105946,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105951,"byte_end":9105956,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9105961,"byte_end":9105968,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7149},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7157},{"krate":0,"index":7161},{"krate":0,"index":7164},{"krate":0,"index":7898},{"krate":0,"index":7901},{"krate":0,"index":7904},{"krate":0,"index":7907},{"krate":0,"index":7168},{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7935},{"krate":0,"index":7939},{"krate":0,"index":7938},{"krate":0,"index":7183},{"krate":0,"index":7185},{"krate":0,"index":7198},{"krate":0,"index":7201},{"krate":0,"index":7205},{"krate":0,"index":7208},{"krate":0,"index":7212},{"krate":0,"index":7236},{"krate":0,"index":7238},{"krate":0,"index":7240},{"krate":0,"index":7244},{"krate":0,"index":7248},{"krate":0,"index":7249},{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7266}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21207,"byte_end":21231,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9117762,"byte_end":9117832,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7898},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118311,"byte_end":9118317,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7900}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118164,"byte_end":9118211,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118212,"byte_end":9118215,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118216,"byte_end":9118282,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7904},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118509,"byte_end":9118517,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7906}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118360,"byte_end":9118409,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118410,"byte_end":9118413,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118414,"byte_end":9118480,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7168},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118568,"byte_end":9118573,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7169},{"krate":0,"index":7910},{"krate":0,"index":7920},{"krate":0,"index":7917},{"krate":0,"index":7918},{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7922},{"krate":0,"index":7933},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7170},{"krate":0,"index":7172},{"krate":0,"index":7173},{"krate":0,"index":7175}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118580,"byte_end":9118603,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7910},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118745,"byte_end":9118754,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118628,"byte_end":9118693,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7923},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118976,"byte_end":9118981,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7922},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118909,"byte_end":9118967,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7925},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119070,"byte_end":9119076,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7922},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118992,"byte_end":9119061,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7922},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118886,"byte_end":9118898,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7925}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9118776,"byte_end":9118836,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7183},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121073,"byte_end":9121080,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120258,"byte_end":9120337,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120338,"byte_end":9120348,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120349,"byte_end":9120352,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120353,"byte_end":9120429,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120430,"byte_end":9120508,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120509,"byte_end":9120555,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120556,"byte_end":9120559,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120560,"byte_end":9120606,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120607,"byte_end":9120610,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120611,"byte_end":9120625,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120626,"byte_end":9120629,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120630,"byte_end":9120637,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120638,"byte_end":9120667,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120668,"byte_end":9120671,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120672,"byte_end":9120690,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120691,"byte_end":9120712,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120713,"byte_end":9120755,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120756,"byte_end":9120759,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120760,"byte_end":9120793,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120794,"byte_end":9120834,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120835,"byte_end":9120884,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120885,"byte_end":9120898,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120899,"byte_end":9120910,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120911,"byte_end":9120914,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120915,"byte_end":9120939,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120940,"byte_end":9120987,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9120988,"byte_end":9121041,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121042,"byte_end":9121051,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121052,"byte_end":9121057,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121058,"byte_end":9121065,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7187},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122879,"byte_end":9122883,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (mut self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121545,"byte_end":9121620,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121625,"byte_end":9121641,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121646,"byte_end":9121649,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The function consumes `self` as only one value may ever be sent on a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121654,"byte_end":9121726,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ one-shot channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121731,"byte_end":9121752,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121757,"byte_end":9121760,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121765,"byte_end":9121841,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121846,"byte_end":9121922,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121927,"byte_end":9121999,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122004,"byte_end":9122077,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122082,"byte_end":9122156,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122161,"byte_end":9122233,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122238,"byte_end":9122275,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122280,"byte_end":9122283,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122288,"byte_end":9122302,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122307,"byte_end":9122310,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122315,"byte_end":9122347,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122352,"byte_end":9122355,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122360,"byte_end":9122367,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122372,"byte_end":9122401,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122406,"byte_end":9122409,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122414,"byte_end":9122432,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122437,"byte_end":9122458,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122463,"byte_end":9122505,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122510,"byte_end":9122513,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122518,"byte_end":9122551,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122556,"byte_end":9122596,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122601,"byte_end":9122650,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122655,"byte_end":9122668,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122673,"byte_end":9122684,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122689,"byte_end":9122692,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122697,"byte_end":9122721,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122726,"byte_end":9122773,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122778,"byte_end":9122831,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122836,"byte_end":9122845,"line_start":178,"line_end":178,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122850,"byte_end":9122855,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9122860,"byte_end":9122867,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7190},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9123284,"byte_end":9123295,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7192},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126412,"byte_end":9126418,"line_start":310,"line_end":310,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124527,"byte_end":9124585,"line_start":243,"line_end":243,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124590,"byte_end":9124593,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124598,"byte_end":9124672,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124677,"byte_end":9124711,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124716,"byte_end":9124719,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124724,"byte_end":9124789,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124794,"byte_end":9124866,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124871,"byte_end":9124874,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124879,"byte_end":9124891,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124896,"byte_end":9124899,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124904,"byte_end":9124952,"line_start":253,"line_end":253,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124957,"byte_end":9124960,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124965,"byte_end":9124991,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9124996,"byte_end":9125026,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125031,"byte_end":9125034,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125039,"byte_end":9125053,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125058,"byte_end":9125061,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125066,"byte_end":9125081,"line_start":260,"line_end":260,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125086,"byte_end":9125089,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125094,"byte_end":9125101,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125106,"byte_end":9125135,"line_start":263,"line_end":263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125140,"byte_end":9125143,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125148,"byte_end":9125166,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125171,"byte_end":9125192,"line_start":266,"line_end":266,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125197,"byte_end":9125249,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125254,"byte_end":9125257,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125262,"byte_end":9125295,"line_start":269,"line_end":269,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125300,"byte_end":9125321,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125326,"byte_end":9125337,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125342,"byte_end":9125345,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125350,"byte_end":9125376,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125381,"byte_end":9125422,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125427,"byte_end":9125432,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125437,"byte_end":9125444,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125449,"byte_end":9125452,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125457,"byte_end":9125479,"line_start":278,"line_end":278,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125484,"byte_end":9125487,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125492,"byte_end":9125499,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125504,"byte_end":9125533,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125538,"byte_end":9125576,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125581,"byte_end":9125584,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125589,"byte_end":9125626,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125631,"byte_end":9125634,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125639,"byte_end":9125673,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125678,"byte_end":9125729,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125734,"byte_end":9125759,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125764,"byte_end":9125769,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125774,"byte_end":9125777,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125782,"byte_end":9125800,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125805,"byte_end":9125826,"line_start":292,"line_end":292,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125831,"byte_end":9125877,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125882,"byte_end":9125885,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125890,"byte_end":9125923,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125928,"byte_end":9125949,"line_start":296,"line_end":296,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9125954,"byte_end":9125997,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126002,"byte_end":9126077,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126082,"byte_end":9126099,"line_start":299,"line_end":299,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126104,"byte_end":9126149,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126154,"byte_end":9126197,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126202,"byte_end":9126219,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126224,"byte_end":9126237,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126242,"byte_end":9126253,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126258,"byte_end":9126261,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126266,"byte_end":9126302,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126307,"byte_end":9126372,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126377,"byte_end":9126382,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126387,"byte_end":9126394,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7197},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127288,"byte_end":9127297,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126529,"byte_end":9126603,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126608,"byte_end":9126611,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126616,"byte_end":9126690,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126695,"byte_end":9126729,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126734,"byte_end":9126737,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126742,"byte_end":9126817,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126822,"byte_end":9126825,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126830,"byte_end":9126856,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126861,"byte_end":9126891,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126896,"byte_end":9126899,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126904,"byte_end":9126918,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126923,"byte_end":9126926,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126931,"byte_end":9126938,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126943,"byte_end":9126972,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126977,"byte_end":9126980,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9126985,"byte_end":9127003,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127008,"byte_end":9127029,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127034,"byte_end":9127076,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127081,"byte_end":9127084,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127089,"byte_end":9127122,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127127,"byte_end":9127130,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127135,"byte_end":9127152,"line_start":337,"line_end":337,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127157,"byte_end":9127160,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127165,"byte_end":9127197,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127202,"byte_end":9127254,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127259,"byte_end":9127264,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127269,"byte_end":9127276,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7203},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129239,"byte_end":9129244,"line_start":415,"line_end":415,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127637,"byte_end":9127704,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127709,"byte_end":9127712,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127717,"byte_end":9127791,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, `Receiver::poll`] should be called to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127796,"byte_end":9127869,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127874,"byte_end":9127940,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127945,"byte_end":9127959,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127964,"byte_end":9127967,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127972,"byte_end":9128048,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128053,"byte_end":9128116,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128121,"byte_end":9128124,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128129,"byte_end":9128151,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128156,"byte_end":9128159,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128164,"byte_end":9128178,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128183,"byte_end":9128186,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128191,"byte_end":9128226,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128231,"byte_end":9128234,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128239,"byte_end":9128246,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128251,"byte_end":9128280,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128285,"byte_end":9128335,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128340,"byte_end":9128343,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128348,"byte_end":9128366,"line_start":380,"line_end":380,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128371,"byte_end":9128392,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128397,"byte_end":9128443,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128448,"byte_end":9128451,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128456,"byte_end":9128489,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128494,"byte_end":9128497,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128502,"byte_end":9128521,"line_start":386,"line_end":386,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128526,"byte_end":9128529,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128534,"byte_end":9128566,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128571,"byte_end":9128623,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128628,"byte_end":9128631,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128636,"byte_end":9128665,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128670,"byte_end":9128713,"line_start":392,"line_end":392,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128718,"byte_end":9128750,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128755,"byte_end":9128764,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128769,"byte_end":9128774,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128779,"byte_end":9128786,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128791,"byte_end":9128794,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128799,"byte_end":9128850,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128855,"byte_end":9128858,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128863,"byte_end":9128870,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128875,"byte_end":9128904,"line_start":401,"line_end":401,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128909,"byte_end":9128912,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128917,"byte_end":9128935,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128940,"byte_end":9128961,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9128966,"byte_end":9129012,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129017,"byte_end":9129020,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129025,"byte_end":9129074,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129079,"byte_end":9129082,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129087,"byte_end":9129106,"line_start":409,"line_end":409,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129111,"byte_end":9129114,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129119,"byte_end":9129160,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129165,"byte_end":9129205,"line_start":412,"line_end":412,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129210,"byte_end":9129215,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129220,"byte_end":9129227,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7204},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131227,"byte_end":9131235,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129342,"byte_end":9129374,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129379,"byte_end":9129382,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129387,"byte_end":9129460,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129465,"byte_end":9129531,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129536,"byte_end":9129560,"line_start":424,"line_end":424,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129565,"byte_end":9129568,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129573,"byte_end":9129639,"line_start":426,"line_end":426,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129644,"byte_end":9129666,"line_start":427,"line_end":427,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129671,"byte_end":9129674,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129679,"byte_end":9129691,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129696,"byte_end":9129699,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129704,"byte_end":9129755,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129760,"byte_end":9129823,"line_start":432,"line_end":432,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129828,"byte_end":9129903,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129908,"byte_end":9129922,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129927,"byte_end":9129930,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129935,"byte_end":9129949,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129954,"byte_end":9129957,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9129962,"byte_end":9130012,"line_start":438,"line_end":438,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130017,"byte_end":9130020,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130025,"byte_end":9130032,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130037,"byte_end":9130066,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130071,"byte_end":9130121,"line_start":442,"line_end":442,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130126,"byte_end":9130129,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130134,"byte_end":9130152,"line_start":444,"line_end":444,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130157,"byte_end":9130178,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130183,"byte_end":9130229,"line_start":446,"line_end":446,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130234,"byte_end":9130237,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130242,"byte_end":9130271,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130276,"byte_end":9130321,"line_start":449,"line_end":449,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130326,"byte_end":9130368,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130373,"byte_end":9130405,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130410,"byte_end":9130419,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130424,"byte_end":9130427,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130432,"byte_end":9130455,"line_start":454,"line_end":454,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130460,"byte_end":9130494,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130499,"byte_end":9130502,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130507,"byte_end":9130536,"line_start":457,"line_end":457,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130541,"byte_end":9130593,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130598,"byte_end":9130630,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130635,"byte_end":9130644,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130649,"byte_end":9130654,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130659,"byte_end":9130666,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130671,"byte_end":9130674,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130679,"byte_end":9130740,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130745,"byte_end":9130748,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130753,"byte_end":9130760,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130765,"byte_end":9130794,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130799,"byte_end":9130849,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130854,"byte_end":9130857,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130862,"byte_end":9130880,"line_start":470,"line_end":470,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130885,"byte_end":9130906,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130911,"byte_end":9130963,"line_start":472,"line_end":472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130968,"byte_end":9130971,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130976,"byte_end":9130993,"line_start":474,"line_end":474,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9130998,"byte_end":9131001,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131006,"byte_end":9131035,"line_start":476,"line_end":476,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131040,"byte_end":9131094,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131099,"byte_end":9131142,"line_start":478,"line_end":478,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131147,"byte_end":9131179,"line_start":479,"line_end":479,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131184,"byte_end":9131193,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131198,"byte_end":9131203,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131208,"byte_end":9131215,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199023,"byte_end":9199032,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8003}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198372,"byte_end":9198437,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198438,"byte_end":9198441,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198442,"byte_end":9198517,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198518,"byte_end":9198594,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198595,"byte_end":9198675,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198676,"byte_end":9198685,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198686,"byte_end":9198689,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198690,"byte_end":9198763,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198764,"byte_end":9198843,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198844,"byte_end":9198922,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9198923,"byte_end":9198994,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8006},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199281,"byte_end":9199296,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8008},{"krate":0,"index":8009}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199097,"byte_end":9199129,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199130,"byte_end":9199133,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199134,"byte_end":9199185,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199186,"byte_end":9199189,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199190,"byte_end":9199240,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199241,"byte_end":9199252,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8013},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199557,"byte_end":9199577,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8014},{"krate":0,"index":8015}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199348,"byte_end":9199387,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199388,"byte_end":9199391,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199392,"byte_end":9199449,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199450,"byte_end":9199453,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199454,"byte_end":9199516,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199517,"byte_end":9199528,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8018},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199873,"byte_end":9199888,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199626,"byte_end":9199690,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199691,"byte_end":9199694,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199695,"byte_end":9199772,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199773,"byte_end":9199785,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199786,"byte_end":9199789,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9199790,"byte_end":9199844,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7501},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200442,"byte_end":9200445,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn (permits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200367,"byte_end":9200430,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7502},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200621,"byte_end":9200638,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200557,"byte_end":9200609,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7503},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200762,"byte_end":9200773,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn (&self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.\n","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200708,"byte_end":9200750,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7504},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200893,"byte_end":9200900,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"fn (&self) -> SemaphorePermit<'_>","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200836,"byte_end":9200875,"line_start":87,"line_end":87,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7507},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201136,"byte_end":9201147,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201075,"byte_end":9201124,"line_start":96,"line_end":96,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7508},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201608,"byte_end":9201621,"line_start":112,"line_end":112,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"fn (self: Arc<Self>) -> OwnedSemaphorePermit","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201430,"byte_end":9201469,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201474,"byte_end":9201477,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201482,"byte_end":9201550,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201555,"byte_end":9201558,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201563,"byte_end":9201590,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7511},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202001,"byte_end":9202018,"line_start":125,"line_end":125,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"fn (self: Arc<Self>) -> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201819,"byte_end":9201868,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201873,"byte_end":9201876,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201881,"byte_end":9201949,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201954,"byte_end":9201957,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9201962,"byte_end":9201989,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7514},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202533,"byte_end":9202539,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202358,"byte_end":9202428,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202433,"byte_end":9202502,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202507,"byte_end":9202521,"line_start":139,"line_end":139,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7516},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202794,"byte_end":9202800,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202619,"byte_end":9202689,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202694,"byte_end":9202763,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202768,"byte_end":9202782,"line_start":148,"line_end":148,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8023},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205910,"byte_end":9205916,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8025},{"krate":0,"index":8026}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203293,"byte_end":9203331,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203332,"byte_end":9203335,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203336,"byte_end":9203413,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203414,"byte_end":9203493,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203494,"byte_end":9203573,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203574,"byte_end":9203632,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203633,"byte_end":9203636,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203637,"byte_end":9203715,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203716,"byte_end":9203794,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203795,"byte_end":9203873,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203874,"byte_end":9203939,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203940,"byte_end":9203943,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9203944,"byte_end":9204008,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204009,"byte_end":9204081,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204082,"byte_end":9204162,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204163,"byte_end":9204243,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204244,"byte_end":9204324,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204325,"byte_end":9204394,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204395,"byte_end":9204465,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204466,"byte_end":9204504,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204505,"byte_end":9204508,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204509,"byte_end":9204586,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204587,"byte_end":9204672,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](https://doc.rust-lang.org/std/ops/trait.Deref.html)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204673,"byte_end":9204782,"line_start":34,"line_end":34,"column_start":1,"column_end":110}},{"value":"/ (and [`DerefMut`](https://doc.rust-lang.org/std/ops/trait.DerefMut.html)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204783,"byte_end":9204859,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204860,"byte_end":9204932,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204933,"byte_end":9204936,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204937,"byte_end":9204951,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204952,"byte_end":9204955,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204956,"byte_end":9204963,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204964,"byte_end":9204992,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204993,"byte_end":9204996,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9204997,"byte_end":9205015,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205016,"byte_end":9205037,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205038,"byte_end":9205072,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205073,"byte_end":9205076,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205077,"byte_end":9205125,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205126,"byte_end":9205135,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205136,"byte_end":9205175,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205176,"byte_end":9205215,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205216,"byte_end":9205247,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205248,"byte_end":9205279,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205280,"byte_end":9205329,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205330,"byte_end":9205333,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205334,"byte_end":9205385,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205386,"byte_end":9205395,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205396,"byte_end":9205439,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205440,"byte_end":9205460,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205461,"byte_end":9205491,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205492,"byte_end":9205531,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205532,"byte_end":9205537,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205538,"byte_end":9205545,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205546,"byte_end":9205549,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205550,"byte_end":9205584,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205585,"byte_end":9205614,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205615,"byte_end":9205662,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205663,"byte_end":9205712,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205713,"byte_end":9205779,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9205780,"byte_end":9205881,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8030},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206270,"byte_end":9206285,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8033},{"krate":0,"index":8034}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206042,"byte_end":9206114,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206115,"byte_end":9206127,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206128,"byte_end":9206131,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206132,"byte_end":9206187,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206188,"byte_end":9206203,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206204,"byte_end":9206207,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206208,"byte_end":9206241,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8039},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206628,"byte_end":9206644,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8042},{"krate":0,"index":8043}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206359,"byte_end":9206435,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206436,"byte_end":9206448,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206449,"byte_end":9206452,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206453,"byte_end":9206510,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206511,"byte_end":9206529,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206530,"byte_end":9206533,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206534,"byte_end":9206569,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206570,"byte_end":9206599,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7555},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208638,"byte_end":9208641,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (value: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208428,"byte_end":9208491,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208496,"byte_end":9208499,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208504,"byte_end":9208518,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208523,"byte_end":9208526,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208531,"byte_end":9208538,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208543,"byte_end":9208571,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208576,"byte_end":9208579,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208584,"byte_end":9208614,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208619,"byte_end":9208626,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7556},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209824,"byte_end":9209828,"line_start":209,"line_end":209,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208786,"byte_end":9208857,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208862,"byte_end":9208908,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208913,"byte_end":9208916,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208921,"byte_end":9208990,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208995,"byte_end":9209071,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209076,"byte_end":9209100,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209105,"byte_end":9209108,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209113,"byte_end":9209127,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209132,"byte_end":9209135,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209140,"byte_end":9209147,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209152,"byte_end":9209175,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209180,"byte_end":9209208,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209213,"byte_end":9209216,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209221,"byte_end":9209239,"line_start":191,"line_end":191,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209244,"byte_end":9209265,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209270,"byte_end":9209314,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209319,"byte_end":9209353,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209358,"byte_end":9209361,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209366,"byte_end":9209400,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209405,"byte_end":9209431,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209436,"byte_end":9209439,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209444,"byte_end":9209477,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209482,"byte_end":9209552,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209557,"byte_end":9209597,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209602,"byte_end":9209632,"line_start":202,"line_end":202,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209637,"byte_end":9209693,"line_start":203,"line_end":203,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209698,"byte_end":9209701,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209706,"byte_end":9209764,"line_start":205,"line_end":205,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209769,"byte_end":9209785,"line_start":206,"line_end":206,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209790,"byte_end":9209794,"line_start":207,"line_end":207,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9209799,"byte_end":9209806,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7560},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210859,"byte_end":9210864,"line_start":240,"line_end":240,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210218,"byte_end":9210293,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210298,"byte_end":9210344,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210349,"byte_end":9210352,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210357,"byte_end":9210427,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210432,"byte_end":9210470,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210475,"byte_end":9210478,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210483,"byte_end":9210556,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210561,"byte_end":9210578,"line_start":225,"line_end":225,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210583,"byte_end":9210586,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210591,"byte_end":9210605,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210610,"byte_end":9210613,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210618,"byte_end":9210625,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210630,"byte_end":9210658,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210663,"byte_end":9210666,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210671,"byte_end":9210689,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210694,"byte_end":9210715,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210720,"byte_end":9210752,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210757,"byte_end":9210760,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210765,"byte_end":9210802,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210807,"byte_end":9210820,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210825,"byte_end":9210829,"line_start":238,"line_end":238,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9210834,"byte_end":9210841,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7564},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211379,"byte_end":9211389,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211314,"byte_end":9211367,"line_start":252,"line_end":252,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7632},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7633},{"krate":0,"index":7634},{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7638},{"krate":0,"index":7641},{"krate":0,"index":7647},{"krate":0,"index":7650},{"krate":0,"index":8057},{"krate":0,"index":8061},{"krate":0,"index":8064},{"krate":0,"index":8067},{"krate":0,"index":8070},{"krate":0,"index":8074},{"krate":0,"index":7653},{"krate":0,"index":8084},{"krate":0,"index":8090},{"krate":0,"index":7660},{"krate":0,"index":8093},{"krate":0,"index":8098},{"krate":0,"index":8096},{"krate":0,"index":8100},{"krate":0,"index":8103},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7666},{"krate":0,"index":7671},{"krate":0,"index":7678},{"krate":0,"index":7683},{"krate":0,"index":7686},{"krate":0,"index":7689},{"krate":0,"index":7697},{"krate":0,"index":7699},{"krate":0,"index":7702},{"krate":0,"index":7706},{"krate":0,"index":7709},{"krate":0,"index":7711},{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7717}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21207,"byte_end":21231,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9224848,"byte_end":9224927,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9224928,"byte_end":9224938,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9224939,"byte_end":9224942,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9224943,"byte_end":9225019,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225020,"byte_end":9225094,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225095,"byte_end":9225098,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225099,"byte_end":9225110,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225111,"byte_end":9225114,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225115,"byte_end":9225182,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225183,"byte_end":9225248,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225249,"byte_end":9225314,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225315,"byte_end":9225385,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! the latest value that has been sent by `Sender`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225386,"byte_end":9225438,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225439,"byte_end":9225442,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225443,"byte_end":9225510,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225511,"byte_end":9225514,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225515,"byte_end":9225529,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225530,"byte_end":9225533,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225534,"byte_end":9225541,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225542,"byte_end":9225569,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225570,"byte_end":9225573,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225574,"byte_end":9225638,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225639,"byte_end":9225690,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225691,"byte_end":9225694,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225695,"byte_end":9225728,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225729,"byte_end":9225782,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"!             println!(\"received = {:?}\", value);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225783,"byte_end":9225834,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"!         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225835,"byte_end":9225848,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225849,"byte_end":9225860,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225861,"byte_end":9225864,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!     tx.broadcast(\"world\")?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225865,"byte_end":9225896,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"! # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225897,"byte_end":9225909,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225910,"byte_end":9225917,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225918,"byte_end":9225925,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225926,"byte_end":9225929,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225930,"byte_end":9225943,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225944,"byte_end":9225947,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9225948,"byte_end":9226022,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226023,"byte_end":9226102,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! in the values being produced and work can be stopped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226103,"byte_end":9226160,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226161,"byte_end":9226164,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226165,"byte_end":9226184,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226185,"byte_end":9226188,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226189,"byte_end":9226269,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226270,"byte_end":9226349,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226350,"byte_end":9226422,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226423,"byte_end":9226426,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226427,"byte_end":9226469,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226470,"byte_end":9226516,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226517,"byte_end":9226575,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226576,"byte_end":9226620,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9226621,"byte_end":9226679,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8057},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227167,"byte_end":9227175,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8060}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227001,"byte_end":9227067,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227068,"byte_end":9227071,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227072,"byte_end":9227138,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8064},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227482,"byte_end":9227488,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8066}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227317,"byte_end":9227382,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227383,"byte_end":9227386,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227387,"byte_end":9227453,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8070},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227809,"byte_end":9227812,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8073}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227526,"byte_end":9227568,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227569,"byte_end":9227572,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227573,"byte_end":9227649,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227650,"byte_end":9227729,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227730,"byte_end":9227780,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":7653},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227868,"byte_end":9227873,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7654},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":7655},{"krate":0,"index":7658}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227880,"byte_end":9227901,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8078},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9228009,"byte_end":9228018,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8080}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9227926,"byte_end":9227972,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7662},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229797,"byte_end":9229804,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn <T> (init: T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229029,"byte_end":9229105,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229106,"byte_end":9229109,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229110,"byte_end":9229192,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229193,"byte_end":9229269,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229270,"byte_end":9229306,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229307,"byte_end":9229310,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229311,"byte_end":9229325,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229326,"byte_end":9229329,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229330,"byte_end":9229337,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229338,"byte_end":9229365,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229366,"byte_end":9229369,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229370,"byte_end":9229434,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229435,"byte_end":9229486,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229487,"byte_end":9229490,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229491,"byte_end":9229524,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229525,"byte_end":9229578,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229579,"byte_end":9229630,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229631,"byte_end":9229644,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229645,"byte_end":9229656,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229657,"byte_end":9229660,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229661,"byte_end":9229692,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229693,"byte_end":9229705,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229706,"byte_end":9229713,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229714,"byte_end":9229721,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229722,"byte_end":9229725,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229726,"byte_end":9229755,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9229756,"byte_end":9229789,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7668},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230973,"byte_end":9230979,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230511,"byte_end":9230566,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230571,"byte_end":9230574,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230579,"byte_end":9230655,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230660,"byte_end":9230736,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230741,"byte_end":9230772,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230777,"byte_end":9230780,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230785,"byte_end":9230799,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230804,"byte_end":9230807,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230812,"byte_end":9230819,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230824,"byte_end":9230851,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230856,"byte_end":9230859,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230864,"byte_end":9230906,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230911,"byte_end":9230949,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230954,"byte_end":9230961,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7669},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231139,"byte_end":9231152,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"fn <'a> (&'a mut self, cx: &mut Context<'_>) -> Poll<Option<Ref<'a, T>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7673},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232873,"byte_end":9232877,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231791,"byte_end":9231851,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231856,"byte_end":9231859,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231864,"byte_end":9231932,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231937,"byte_end":9232011,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232016,"byte_end":9232089,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232094,"byte_end":9232133,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232138,"byte_end":9232141,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232146,"byte_end":9232201,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232206,"byte_end":9232209,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232214,"byte_end":9232228,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232233,"byte_end":9232236,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232241,"byte_end":9232248,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232253,"byte_end":9232280,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232285,"byte_end":9232288,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232293,"byte_end":9232311,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232316,"byte_end":9232337,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232342,"byte_end":9232393,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232398,"byte_end":9232401,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232406,"byte_end":9232447,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232452,"byte_end":9232483,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232488,"byte_end":9232491,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232496,"byte_end":9232529,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232534,"byte_end":9232579,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232584,"byte_end":9232595,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232600,"byte_end":9232603,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232608,"byte_end":9232670,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232675,"byte_end":9232716,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232721,"byte_end":9232754,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232759,"byte_end":9232762,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232767,"byte_end":9232799,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232804,"byte_end":9232833,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232838,"byte_end":9232843,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9232848,"byte_end":9232855,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7691},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233943,"byte_end":9233952,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"fn (&self, value: T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233863,"byte_end":9233931,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7692},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9234815,"byte_end":9234821,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9234604,"byte_end":9234650,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9234655,"byte_end":9234658,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9234663,"byte_end":9234737,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9234742,"byte_end":9234797,"line_start":348,"line_end":348,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":8105},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8107},{"krate":0,"index":8109},{"krate":0,"index":8116},{"krate":0,"index":8117},{"krate":0,"index":8120},{"krate":0,"index":8124},{"krate":0,"index":8125},{"krate":0,"index":8131},{"krate":0,"index":8142},{"krate":0,"index":8220},{"krate":0,"index":8223},{"krate":0,"index":8284}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21519,"byte_end":21546,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236567,"byte_end":9236598,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236599,"byte_end":9236602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236603,"byte_end":9236625,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236626,"byte_end":9236629,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236630,"byte_end":9236711,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236712,"byte_end":9236792,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236793,"byte_end":9236873,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236874,"byte_end":9236948,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9236949,"byte_end":9237024,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237025,"byte_end":9237047,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237048,"byte_end":9237051,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237052,"byte_end":9237087,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237088,"byte_end":9237091,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237092,"byte_end":9237166,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237167,"byte_end":9237246,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237247,"byte_end":9237319,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237320,"byte_end":9237395,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237396,"byte_end":9237449,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237450,"byte_end":9237453,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237454,"byte_end":9237531,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237532,"byte_end":9237605,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237606,"byte_end":9237685,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237686,"byte_end":9237764,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237765,"byte_end":9237837,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237838,"byte_end":9237913,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237914,"byte_end":9237988,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9237989,"byte_end":9238064,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238065,"byte_end":9238095,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238096,"byte_end":9238099,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238100,"byte_end":9238178,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238179,"byte_end":9238254,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238255,"byte_end":9238332,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238333,"byte_end":9238412,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238413,"byte_end":9238491,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238492,"byte_end":9238567,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238568,"byte_end":9238643,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238644,"byte_end":9238705,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238706,"byte_end":9238709,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238710,"byte_end":9238734,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238735,"byte_end":9238799,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238800,"byte_end":9238860,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238861,"byte_end":9238950,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9238951,"byte_end":9239039,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239040,"byte_end":9239043,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239044,"byte_end":9239069,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239070,"byte_end":9239073,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239074,"byte_end":9239141,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239142,"byte_end":9239145,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239146,"byte_end":9239162,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239163,"byte_end":9239166,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239167,"byte_end":9239246,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239247,"byte_end":9239326,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239327,"byte_end":9239406,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239407,"byte_end":9239474,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239475,"byte_end":9239478,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239479,"byte_end":9239486,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239487,"byte_end":9239507,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239508,"byte_end":9239511,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239512,"byte_end":9239534,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239535,"byte_end":9239558,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239559,"byte_end":9239595,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239596,"byte_end":9239603,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239604,"byte_end":9239611,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239612,"byte_end":9239619,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239620,"byte_end":9239623,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239624,"byte_end":9239703,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239704,"byte_end":9239782,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239783,"byte_end":9239817,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239818,"byte_end":9239821,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239822,"byte_end":9239829,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239830,"byte_end":9239850,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239851,"byte_end":9239854,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239855,"byte_end":9239935,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239936,"byte_end":9239970,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239971,"byte_end":9239985,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9239986,"byte_end":9240008,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240009,"byte_end":9240016,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240017,"byte_end":9240020,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240021,"byte_end":9240031,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240032,"byte_end":9240035,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240036,"byte_end":9240080,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240081,"byte_end":9240110,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240111,"byte_end":9240150,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240151,"byte_end":9240163,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240164,"byte_end":9240171,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240172,"byte_end":9240179,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240180,"byte_end":9240183,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240184,"byte_end":9240264,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240265,"byte_end":9240341,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240342,"byte_end":9240354,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240355,"byte_end":9240358,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240359,"byte_end":9240366,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240367,"byte_end":9240387,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240388,"byte_end":9240391,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240392,"byte_end":9240430,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240431,"byte_end":9240465,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240466,"byte_end":9240507,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240508,"byte_end":9240515,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240516,"byte_end":9240519,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240520,"byte_end":9240578,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240579,"byte_end":9240612,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240613,"byte_end":9240620,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240621,"byte_end":9240628,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240629,"byte_end":9240632,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240633,"byte_end":9240706,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240707,"byte_end":9240735,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240736,"byte_end":9240739,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240740,"byte_end":9240781,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240782,"byte_end":9240815,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240816,"byte_end":9240862,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240863,"byte_end":9240906,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240907,"byte_end":9240949,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240950,"byte_end":9240991,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240992,"byte_end":9240995,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9240996,"byte_end":9241025,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241026,"byte_end":9241029,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241030,"byte_end":9241110,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241111,"byte_end":9241190,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241191,"byte_end":9241270,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241271,"byte_end":9241311,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241312,"byte_end":9241315,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241316,"byte_end":9241390,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241391,"byte_end":9241471,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241472,"byte_end":9241475,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241476,"byte_end":9241499,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241500,"byte_end":9241503,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241504,"byte_end":9241584,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241585,"byte_end":9241651,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241652,"byte_end":9241719,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241720,"byte_end":9241794,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241795,"byte_end":9241807,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241808,"byte_end":9241811,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241812,"byte_end":9241819,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241820,"byte_end":9241840,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241841,"byte_end":9241844,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241845,"byte_end":9241868,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241869,"byte_end":9241898,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241899,"byte_end":9241961,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241962,"byte_end":9241969,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241970,"byte_end":9241977,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241978,"byte_end":9241985,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241986,"byte_end":9241989,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9241990,"byte_end":9242064,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242065,"byte_end":9242132,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242133,"byte_end":9242136,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242137,"byte_end":9242148,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242149,"byte_end":9242171,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242172,"byte_end":9242236,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242237,"byte_end":9242277,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242278,"byte_end":9242340,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242341,"byte_end":9242369,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242370,"byte_end":9242377,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242378,"byte_end":9242381,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242382,"byte_end":9242411,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242412,"byte_end":9242457,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242458,"byte_end":9242470,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242471,"byte_end":9242478,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242479,"byte_end":9242486,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242487,"byte_end":9242490,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242491,"byte_end":9242514,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242515,"byte_end":9242518,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242519,"byte_end":9242599,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242600,"byte_end":9242674,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242675,"byte_end":9242751,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242752,"byte_end":9242826,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242827,"byte_end":9242906,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242907,"byte_end":9242989,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9242990,"byte_end":9243011,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243012,"byte_end":9243015,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243016,"byte_end":9243032,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243033,"byte_end":9243036,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243037,"byte_end":9243044,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243045,"byte_end":9243065,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243066,"byte_end":9243069,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243070,"byte_end":9243093,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243094,"byte_end":9243136,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243137,"byte_end":9243199,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243200,"byte_end":9243228,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243229,"byte_end":9243236,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243237,"byte_end":9243240,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243241,"byte_end":9243286,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243287,"byte_end":9243294,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243295,"byte_end":9243302,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243303,"byte_end":9243306,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243307,"byte_end":9243325,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243326,"byte_end":9243329,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243330,"byte_end":9243404,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243405,"byte_end":9243483,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243484,"byte_end":9243560,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243561,"byte_end":9243618,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243619,"byte_end":9243697,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243698,"byte_end":9243726,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243727,"byte_end":9243730,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243731,"byte_end":9243742,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243743,"byte_end":9243763,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243764,"byte_end":9243767,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243768,"byte_end":9243806,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243807,"byte_end":9243818,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243819,"byte_end":9243846,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243847,"byte_end":9243865,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243866,"byte_end":9243908,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243909,"byte_end":9243920,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243921,"byte_end":9243924,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243925,"byte_end":9243992,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9243993,"byte_end":9244025,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244026,"byte_end":9244062,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244063,"byte_end":9244068,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244069,"byte_end":9244082,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244083,"byte_end":9244090,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244091,"byte_end":9244098,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244099,"byte_end":9244102,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244103,"byte_end":9244160,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244161,"byte_end":9244218,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244219,"byte_end":9244278,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244279,"byte_end":9244328,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9244329,"byte_end":9244378,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8110},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/blocking.rs","byte_start":9246986,"byte_end":9247000,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21989,"byte_end":22020,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8113},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/blocking.rs","byte_start":9249889,"byte_end":9249903,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"fn <F, R> (f: F) -> JoinHandle<R>","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":16524,"byte_end":16552,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":8132},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/spawn.rs","byte_start":9253700,"byte_end":9253705,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <T> (task: T) -> JoinHandle<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8134},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9254719,"byte_end":9254728,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9254638,"byte_end":9254701,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8285},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9259155,"byte_end":9259163,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8286},{"krate":0,"index":8287},{"krate":0,"index":8288}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22202,"byte_end":22229,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8294},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9261175,"byte_end":9261186,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"fn <F> (future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22202,"byte_end":22229,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8175},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262019,"byte_end":9262022,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"fn () -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9261974,"byte_end":9262007,"line_start":221,"line_end":221,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8176},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263727,"byte_end":9263738,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262564,"byte_end":9262614,"line_start":239,"line_end":239,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262619,"byte_end":9262622,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262627,"byte_end":9262687,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262692,"byte_end":9262695,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262700,"byte_end":9262772,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262777,"byte_end":9262847,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262852,"byte_end":9262863,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262868,"byte_end":9262888,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262893,"byte_end":9262896,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262901,"byte_end":9262919,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262924,"byte_end":9262945,"line_start":249,"line_end":249,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262950,"byte_end":9262992,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9262997,"byte_end":9263000,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263005,"byte_end":9263077,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263082,"byte_end":9263135,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263140,"byte_end":9263173,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263178,"byte_end":9263195,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263200,"byte_end":9263211,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263216,"byte_end":9263219,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263224,"byte_end":9263258,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263263,"byte_end":9263299,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263304,"byte_end":9263322,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263327,"byte_end":9263344,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263349,"byte_end":9263352,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263357,"byte_end":9263428,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263433,"byte_end":9263483,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263488,"byte_end":9263521,"line_start":265,"line_end":265,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263526,"byte_end":9263543,"line_start":266,"line_end":266,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263548,"byte_end":9263559,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263564,"byte_end":9263567,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263572,"byte_end":9263608,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263613,"byte_end":9263631,"line_start":270,"line_end":270,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263636,"byte_end":9263653,"line_start":271,"line_end":271,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263658,"byte_end":9263663,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263668,"byte_end":9263675,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9263680,"byte_end":9263715,"line_start":274,"line_end":274,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8178},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266409,"byte_end":9266417,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"fn <F> (&self, rt: &mut crate::runtime::Runtime, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264017,"byte_end":9264091,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264096,"byte_end":9264155,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264160,"byte_end":9264163,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264168,"byte_end":9264235,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264240,"byte_end":9264313,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264318,"byte_end":9264394,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264399,"byte_end":9264479,"line_start":291,"line_end":291,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264484,"byte_end":9264503,"line_start":292,"line_end":292,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264508,"byte_end":9264511,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264516,"byte_end":9264582,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264587,"byte_end":9264590,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264595,"byte_end":9264607,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264612,"byte_end":9264615,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264620,"byte_end":9264692,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264697,"byte_end":9264770,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264775,"byte_end":9264778,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264783,"byte_end":9264794,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264799,"byte_end":9264802,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264807,"byte_end":9264881,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264886,"byte_end":9264961,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9264966,"byte_end":9265041,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265046,"byte_end":9265123,"line_start":306,"line_end":306,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265128,"byte_end":9265131,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265136,"byte_end":9265169,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265174,"byte_end":9265193,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265198,"byte_end":9265230,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265235,"byte_end":9265255,"line_start":311,"line_end":311,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265260,"byte_end":9265263,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265268,"byte_end":9265309,"line_start":313,"line_end":313,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265314,"byte_end":9265352,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265357,"byte_end":9265392,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265397,"byte_end":9265441,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265446,"byte_end":9265505,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265510,"byte_end":9265532,"line_start":318,"line_end":318,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265537,"byte_end":9265552,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265557,"byte_end":9265575,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265580,"byte_end":9265591,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265596,"byte_end":9265624,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265629,"byte_end":9265635,"line_start":323,"line_end":323,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265640,"byte_end":9265647,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265652,"byte_end":9265686,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265691,"byte_end":9265698,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265703,"byte_end":9265735,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265740,"byte_end":9265760,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265765,"byte_end":9265768,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265773,"byte_end":9265814,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265819,"byte_end":9265857,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265862,"byte_end":9265897,"line_start":332,"line_end":332,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265902,"byte_end":9265946,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9265951,"byte_end":9266010,"line_start":334,"line_end":334,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266015,"byte_end":9266037,"line_start":335,"line_end":335,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266042,"byte_end":9266063,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266068,"byte_end":9266086,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266091,"byte_end":9266102,"line_start":338,"line_end":338,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266107,"byte_end":9266135,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266140,"byte_end":9266146,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266151,"byte_end":9266158,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266163,"byte_end":9266166,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266171,"byte_end":9266206,"line_start":343,"line_end":343,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266211,"byte_end":9266278,"line_start":344,"line_end":344,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266283,"byte_end":9266338,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266343,"byte_end":9266397,"line_start":346,"line_end":346,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8180},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267668,"byte_end":9267677,"line_start":382,"line_end":382,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266576,"byte_end":9266646,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266651,"byte_end":9266654,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266659,"byte_end":9266729,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266734,"byte_end":9266810,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266815,"byte_end":9266883,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266888,"byte_end":9266968,"line_start":359,"line_end":359,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9266973,"byte_end":9267045,"line_start":360,"line_end":360,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267050,"byte_end":9267125,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267130,"byte_end":9267186,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267191,"byte_end":9267194,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267199,"byte_end":9267213,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267218,"byte_end":9267221,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267226,"byte_end":9267237,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267242,"byte_end":9267262,"line_start":367,"line_end":367,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267267,"byte_end":9267270,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267275,"byte_end":9267293,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267298,"byte_end":9267319,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267324,"byte_end":9267371,"line_start":371,"line_end":371,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267376,"byte_end":9267418,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267423,"byte_end":9267445,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267450,"byte_end":9267480,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267485,"byte_end":9267503,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267508,"byte_end":9267525,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267530,"byte_end":9267535,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267540,"byte_end":9267547,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267552,"byte_end":9267555,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267560,"byte_end":9267595,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9267600,"byte_end":9267650,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8237},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276623,"byte_end":9276631,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8239}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275761,"byte_end":9275791,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275792,"byte_end":9275795,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275796,"byte_end":9275850,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275851,"byte_end":9275854,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275855,"byte_end":9275921,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275922,"byte_end":9275989,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9275990,"byte_end":9276047,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276048,"byte_end":9276117,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276118,"byte_end":9276121,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276122,"byte_end":9276136,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276137,"byte_end":9276140,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276141,"byte_end":9276148,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276149,"byte_end":9276171,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276172,"byte_end":9276196,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276197,"byte_end":9276224,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276225,"byte_end":9276230,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276231,"byte_end":9276234,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276235,"byte_end":9276267,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276268,"byte_end":9276304,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276305,"byte_end":9276318,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276319,"byte_end":9276322,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276323,"byte_end":9276355,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276356,"byte_end":9276392,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276393,"byte_end":9276396,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276397,"byte_end":9276433,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276434,"byte_end":9276474,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276475,"byte_end":9276492,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276493,"byte_end":9276506,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276507,"byte_end":9276514,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276515,"byte_end":9276522,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: https://doc.rust-lang.org/std/thread/struct.LocalKey.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276523,"byte_end":9276611,"line_start":92,"line_end":92,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":8239},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276673,"byte_end":9276678,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8242},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277206,"byte_end":9277211,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"fn <F> (&'static self, value: T, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276756,"byte_end":9276820,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276825,"byte_end":9276828,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276833,"byte_end":9276894,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276899,"byte_end":9276902,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276907,"byte_end":9276923,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276928,"byte_end":9276931,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276936,"byte_end":9276943,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276948,"byte_end":9276970,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276975,"byte_end":9276999,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277004,"byte_end":9277031,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277036,"byte_end":9277041,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277046,"byte_end":9277049,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277054,"byte_end":9277086,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277091,"byte_end":9277146,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277151,"byte_end":9277164,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277169,"byte_end":9277176,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277181,"byte_end":9277188,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8246},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277685,"byte_end":9277689,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277436,"byte_end":9277502,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277507,"byte_end":9277510,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277515,"byte_end":9277527,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277532,"byte_end":9277535,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277540,"byte_end":9277601,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277606,"byte_end":9277673,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8249},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278177,"byte_end":9278185,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9277930,"byte_end":9277996,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278001,"byte_end":9278004,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278009,"byte_end":9278075,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278080,"byte_end":9278145,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278150,"byte_end":9278165,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8255},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278645,"byte_end":9278648,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"fn (&'static self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278540,"byte_end":9278582,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278587,"byte_end":9278633,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8297},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280137,"byte_end":9280148,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280012,"byte_end":9280087,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8309},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8310},{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8409},{"krate":0,"index":8413},{"krate":0,"index":8589},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8639},{"krate":0,"index":8640},{"krate":0,"index":8663},{"krate":0,"index":8667},{"krate":0,"index":8702},{"krate":0,"index":8949},{"krate":0,"index":8973},{"krate":0,"index":8707},{"krate":0,"index":8771},{"krate":0,"index":8772},{"krate":0,"index":8777}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23058,"byte_end":23082,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280521,"byte_end":9280553,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280554,"byte_end":9280557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280558,"byte_end":9280638,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280639,"byte_end":9280651,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280652,"byte_end":9280655,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280656,"byte_end":9280737,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280738,"byte_end":9280752,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280753,"byte_end":9280756,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280757,"byte_end":9280827,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280828,"byte_end":9280908,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280909,"byte_end":9280923,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280924,"byte_end":9280927,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9280928,"byte_end":9281007,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281008,"byte_end":9281080,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281081,"byte_end":9281150,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281151,"byte_end":9281154,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281155,"byte_end":9281232,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281233,"byte_end":9281251,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281252,"byte_end":9281255,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281256,"byte_end":9281327,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281328,"byte_end":9281347,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281348,"byte_end":9281351,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281352,"byte_end":9281422,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281423,"byte_end":9281426,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281427,"byte_end":9281441,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281442,"byte_end":9281445,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"Hello World!\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281446,"byte_end":9281485,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281486,"byte_end":9281489,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281490,"byte_end":9281497,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281498,"byte_end":9281529,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281530,"byte_end":9281533,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281534,"byte_end":9281562,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281563,"byte_end":9281566,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281567,"byte_end":9281570,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281571,"byte_end":9281589,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281590,"byte_end":9281611,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281612,"byte_end":9281664,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281665,"byte_end":9281705,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281706,"byte_end":9281711,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281712,"byte_end":9281719,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281720,"byte_end":9281723,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281724,"byte_end":9281803,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281804,"byte_end":9281882,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281883,"byte_end":9281895,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281896,"byte_end":9281899,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281900,"byte_end":9281907,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281908,"byte_end":9281949,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281950,"byte_end":9281953,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281954,"byte_end":9281982,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9281983,"byte_end":9282006,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282007,"byte_end":9282012,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282013,"byte_end":9282016,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282017,"byte_end":9282039,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282040,"byte_end":9282107,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282108,"byte_end":9282111,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282112,"byte_end":9282133,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282134,"byte_end":9282174,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282175,"byte_end":9282180,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282181,"byte_end":9282188,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282189,"byte_end":9282196,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":8312},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":8313},{"krate":0,"index":8316},{"krate":0,"index":8322},{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325},{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8794},{"krate":0,"index":8802},{"krate":0,"index":8805},{"krate":0,"index":8810},{"krate":0,"index":8813},{"krate":0,"index":8817},{"krate":0,"index":8815},{"krate":0,"index":8819},{"krate":0,"index":8823},{"krate":0,"index":8826},{"krate":0,"index":8833},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8358},{"krate":0,"index":8360},{"krate":0,"index":8363},{"krate":0,"index":8367},{"krate":0,"index":8377},{"krate":0,"index":8380},{"krate":0,"index":8382}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288212,"byte_end":9288244,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288245,"byte_end":9288248,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288249,"byte_end":9288289,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288290,"byte_end":9288293,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288294,"byte_end":9288331,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":8794},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292576,"byte_end":9292586,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288572,"byte_end":9288604,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288605,"byte_end":9288608,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288609,"byte_end":9288686,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288687,"byte_end":9288727,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288728,"byte_end":9288731,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288732,"byte_end":9288743,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288744,"byte_end":9288747,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288748,"byte_end":9288815,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288816,"byte_end":9288896,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288897,"byte_end":9288975,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9288976,"byte_end":9289012,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289013,"byte_end":9289016,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289017,"byte_end":9289087,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289088,"byte_end":9289166,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289167,"byte_end":9289240,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289241,"byte_end":9289310,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289311,"byte_end":9289314,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289315,"byte_end":9289344,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289345,"byte_end":9289348,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289349,"byte_end":9289427,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289428,"byte_end":9289508,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289509,"byte_end":9289585,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289586,"byte_end":9289598,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289599,"byte_end":9289602,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289603,"byte_end":9289682,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289683,"byte_end":9289760,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289761,"byte_end":9289837,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289838,"byte_end":9289871,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289872,"byte_end":9289875,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289876,"byte_end":9289954,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9289955,"byte_end":9290031,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290032,"byte_end":9290110,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290111,"byte_end":9290150,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290151,"byte_end":9290154,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290155,"byte_end":9290175,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290176,"byte_end":9290179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290180,"byte_end":9290278,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290279,"byte_end":9290376,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290377,"byte_end":9290418,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290419,"byte_end":9290422,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290423,"byte_end":9290523,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290524,"byte_end":9290589,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290590,"byte_end":9290593,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290594,"byte_end":9290676,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290677,"byte_end":9290704,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290705,"byte_end":9290708,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290709,"byte_end":9290720,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290721,"byte_end":9290724,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290725,"byte_end":9290772,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290773,"byte_end":9290776,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290777,"byte_end":9290795,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290796,"byte_end":9290850,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290851,"byte_end":9290854,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290855,"byte_end":9290878,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290879,"byte_end":9290913,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290914,"byte_end":9290949,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290950,"byte_end":9290978,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9290979,"byte_end":9291008,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291009,"byte_end":9291035,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291036,"byte_end":9291039,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291040,"byte_end":9291058,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291059,"byte_end":9291121,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291122,"byte_end":9291164,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291165,"byte_end":9291170,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291171,"byte_end":9291174,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291175,"byte_end":9291204,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291205,"byte_end":9291208,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291209,"byte_end":9291225,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291226,"byte_end":9291285,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291286,"byte_end":9291326,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291327,"byte_end":9291395,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291396,"byte_end":9291399,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291400,"byte_end":9291453,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291454,"byte_end":9291463,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291464,"byte_end":9291467,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291468,"byte_end":9291525,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291526,"byte_end":9291559,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291560,"byte_end":9291597,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291598,"byte_end":9291607,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291608,"byte_end":9291611,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291612,"byte_end":9291658,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291659,"byte_end":9291727,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291728,"byte_end":9291780,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291781,"byte_end":9291794,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291795,"byte_end":9291804,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291805,"byte_end":9291808,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291809,"byte_end":9291892,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291893,"byte_end":9291970,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9291971,"byte_end":9292004,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292005,"byte_end":9292058,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292059,"byte_end":9292072,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292073,"byte_end":9292076,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292077,"byte_end":9292108,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292109,"byte_end":9292118,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292119,"byte_end":9292124,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292125,"byte_end":9292132,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292133,"byte_end":9292136,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: #method.insert","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292137,"byte_end":9292167,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ [`insert_at`]: #method.insert_at","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292168,"byte_end":9292204,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292205,"byte_end":9292228,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292229,"byte_end":9292305,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292306,"byte_end":9292332,"line_start":118,"line_end":118,"column_start":1,"column_end":27}},{"value":"/ [`Stream::poll`]: #method.poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292333,"byte_end":9292367,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292368,"byte_end":9292405,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292406,"byte_end":9292444,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: https://docs.rs/slab","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292445,"byte_end":9292479,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`capacity`]: #method.capacity","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292480,"byte_end":9292514,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9292515,"byte_end":9292547,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8805},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293277,"byte_end":9293284,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":8807},{"krate":0,"index":8808},{"krate":0,"index":8809}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293083,"byte_end":9293141,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293142,"byte_end":9293145,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293146,"byte_end":9293194,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293195,"byte_end":9293198,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293199,"byte_end":9293248,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8813},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293752,"byte_end":9293755,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":8814}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293452,"byte_end":9293498,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293499,"byte_end":9293502,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293503,"byte_end":9293584,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293585,"byte_end":9293620,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293621,"byte_end":9293624,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293625,"byte_end":9293662,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9293663,"byte_end":9293716,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8333},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294733,"byte_end":9294736,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn () -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294433,"byte_end":9294471,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294476,"byte_end":9294479,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294484,"byte_end":9294557,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294562,"byte_end":9294565,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294570,"byte_end":9294584,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294589,"byte_end":9294592,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294597,"byte_end":9294608,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294613,"byte_end":9294647,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294652,"byte_end":9294709,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294714,"byte_end":9294721,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8334},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295654,"byte_end":9295667,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn (capacity: usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294806,"byte_end":9294873,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294878,"byte_end":9294881,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294886,"byte_end":9294957,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294962,"byte_end":9295031,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295036,"byte_end":9295048,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295053,"byte_end":9295056,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295061,"byte_end":9295075,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295080,"byte_end":9295083,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295088,"byte_end":9295099,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295104,"byte_end":9295138,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295143,"byte_end":9295173,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295178,"byte_end":9295181,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295186,"byte_end":9295206,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295211,"byte_end":9295234,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295239,"byte_end":9295299,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295304,"byte_end":9295307,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295312,"byte_end":9295375,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295380,"byte_end":9295404,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295409,"byte_end":9295467,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295472,"byte_end":9295481,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295486,"byte_end":9295489,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295494,"byte_end":9295557,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295562,"byte_end":9295618,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295623,"byte_end":9295630,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295635,"byte_end":9295642,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8335},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297688,"byte_end":9297697,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn (&mut self, value: T, when: Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9295966,"byte_end":9296039,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296044,"byte_end":9296053,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296058,"byte_end":9296061,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296066,"byte_end":9296140,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296145,"byte_end":9296165,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296170,"byte_end":9296173,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296178,"byte_end":9296253,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296258,"byte_end":9296328,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296333,"byte_end":9296397,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296402,"byte_end":9296405,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296410,"byte_end":9296485,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296490,"byte_end":9296565,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296570,"byte_end":9296640,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296645,"byte_end":9296718,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296723,"byte_end":9296799,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296804,"byte_end":9296838,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296843,"byte_end":9296846,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296851,"byte_end":9296903,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296908,"byte_end":9296911,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296916,"byte_end":9296928,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296933,"byte_end":9296936,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9296941,"byte_end":9297001,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297006,"byte_end":9297009,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297014,"byte_end":9297028,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297033,"byte_end":9297036,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297041,"byte_end":9297056,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297061,"byte_end":9297064,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297069,"byte_end":9297080,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297085,"byte_end":9297138,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297143,"byte_end":9297146,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297151,"byte_end":9297171,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297176,"byte_end":9297199,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297204,"byte_end":9297252,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297257,"byte_end":9297297,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297302,"byte_end":9297362,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297367,"byte_end":9297370,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297375,"byte_end":9297402,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297407,"byte_end":9297451,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297456,"byte_end":9297499,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297504,"byte_end":9297511,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297516,"byte_end":9297523,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297528,"byte_end":9297531,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297536,"byte_end":9297562,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297567,"byte_end":9297597,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297602,"byte_end":9297630,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297635,"byte_end":9297658,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9297663,"byte_end":9297676,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8336},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299057,"byte_end":9299069,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn (&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9298849,"byte_end":9298924,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9298929,"byte_end":9299005,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299010,"byte_end":9299045,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8339},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301426,"byte_end":9301432,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn (&mut self, value: T, timeout: Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299686,"byte_end":9299763,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299768,"byte_end":9299780,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299785,"byte_end":9299788,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299793,"byte_end":9299862,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299867,"byte_end":9299895,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299900,"byte_end":9299903,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299908,"byte_end":9299983,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9299988,"byte_end":9300058,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300063,"byte_end":9300127,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300132,"byte_end":9300135,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300140,"byte_end":9300215,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300220,"byte_end":9300295,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300300,"byte_end":9300370,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300375,"byte_end":9300448,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300453,"byte_end":9300529,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300534,"byte_end":9300568,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300573,"byte_end":9300576,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300581,"byte_end":9300633,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300638,"byte_end":9300641,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300646,"byte_end":9300658,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300663,"byte_end":9300666,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300671,"byte_end":9300746,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300751,"byte_end":9300764,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300769,"byte_end":9300772,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300777,"byte_end":9300791,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300796,"byte_end":9300799,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300804,"byte_end":9300819,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300824,"byte_end":9300827,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300832,"byte_end":9300843,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300848,"byte_end":9300880,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300885,"byte_end":9300913,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300918,"byte_end":9300921,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300926,"byte_end":9300946,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300951,"byte_end":9300974,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9300979,"byte_end":9301027,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301032,"byte_end":9301100,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301105,"byte_end":9301108,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301113,"byte_end":9301140,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301145,"byte_end":9301189,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301194,"byte_end":9301237,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301242,"byte_end":9301249,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301254,"byte_end":9301261,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301266,"byte_end":9301269,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301274,"byte_end":9301300,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301305,"byte_end":9301335,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301340,"byte_end":9301368,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301373,"byte_end":9301396,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9301401,"byte_end":9301414,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8344},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302977,"byte_end":9302983,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn (&mut self, key: &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302123,"byte_end":9302181,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302186,"byte_end":9302189,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302194,"byte_end":9302267,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302272,"byte_end":9302345,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302350,"byte_end":9302367,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302372,"byte_end":9302375,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302380,"byte_end":9302392,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302397,"byte_end":9302400,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302405,"byte_end":9302468,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302473,"byte_end":9302476,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302481,"byte_end":9302495,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302500,"byte_end":9302503,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302508,"byte_end":9302523,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302528,"byte_end":9302531,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302536,"byte_end":9302547,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302552,"byte_end":9302584,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302589,"byte_end":9302617,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302622,"byte_end":9302625,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302630,"byte_end":9302650,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302655,"byte_end":9302678,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302683,"byte_end":9302731,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302736,"byte_end":9302804,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302809,"byte_end":9302812,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302817,"byte_end":9302844,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302849,"byte_end":9302893,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302898,"byte_end":9302941,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302946,"byte_end":9302953,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9302958,"byte_end":9302965,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8346},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304635,"byte_end":9304643,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn (&mut self, key: &Key, when: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303521,"byte_end":9303594,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303599,"byte_end":9303602,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303607,"byte_end":9303682,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303687,"byte_end":9303704,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303709,"byte_end":9303712,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303717,"byte_end":9303792,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303797,"byte_end":9303873,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303878,"byte_end":9303893,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303898,"byte_end":9303901,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303906,"byte_end":9303918,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303923,"byte_end":9303926,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9303931,"byte_end":9304005,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304010,"byte_end":9304041,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304046,"byte_end":9304049,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304054,"byte_end":9304068,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304073,"byte_end":9304076,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304081,"byte_end":9304096,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304101,"byte_end":9304104,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304109,"byte_end":9304120,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304125,"byte_end":9304178,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304183,"byte_end":9304186,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304191,"byte_end":9304211,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304216,"byte_end":9304239,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304244,"byte_end":9304292,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304297,"byte_end":9304365,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304370,"byte_end":9304373,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304378,"byte_end":9304435,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304440,"byte_end":9304443,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304448,"byte_end":9304525,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304530,"byte_end":9304533,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304538,"byte_end":9304599,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304604,"byte_end":9304611,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9304616,"byte_end":9304623,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8349},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306536,"byte_end":9306541,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn (&mut self, key: &Key, timeout: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305386,"byte_end":9305454,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305459,"byte_end":9305473,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305478,"byte_end":9305481,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305486,"byte_end":9305561,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305566,"byte_end":9305586,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305591,"byte_end":9305594,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305599,"byte_end":9305669,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305674,"byte_end":9305744,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305749,"byte_end":9305777,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305782,"byte_end":9305785,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305790,"byte_end":9305802,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305807,"byte_end":9305810,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305815,"byte_end":9305890,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305895,"byte_end":9305950,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305955,"byte_end":9305958,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305963,"byte_end":9305977,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305982,"byte_end":9305985,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9305990,"byte_end":9306005,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306010,"byte_end":9306013,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306018,"byte_end":9306029,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306034,"byte_end":9306066,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306071,"byte_end":9306099,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306104,"byte_end":9306107,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306112,"byte_end":9306132,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306137,"byte_end":9306160,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306165,"byte_end":9306213,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306218,"byte_end":9306286,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306291,"byte_end":9306294,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306299,"byte_end":9306356,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306361,"byte_end":9306364,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306369,"byte_end":9306426,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306431,"byte_end":9306434,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306439,"byte_end":9306500,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306505,"byte_end":9306512,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306517,"byte_end":9306524,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8350},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307378,"byte_end":9307383,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306650,"byte_end":9306691,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306696,"byte_end":9306699,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306704,"byte_end":9306770,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306775,"byte_end":9306778,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306783,"byte_end":9306849,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306854,"byte_end":9306857,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306862,"byte_end":9306888,"line_start":577,"line_end":577,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306893,"byte_end":9306896,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306901,"byte_end":9306915,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306920,"byte_end":9306923,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306928,"byte_end":9306939,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306944,"byte_end":9306976,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9306981,"byte_end":9307009,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307014,"byte_end":9307017,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307022,"byte_end":9307042,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307047,"byte_end":9307070,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307075,"byte_end":9307123,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307128,"byte_end":9307131,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307136,"byte_end":9307194,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307199,"byte_end":9307202,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307207,"byte_end":9307248,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307253,"byte_end":9307256,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307261,"byte_end":9307289,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307294,"byte_end":9307297,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307302,"byte_end":9307342,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307347,"byte_end":9307354,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307359,"byte_end":9307366,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8351},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307855,"byte_end":9307863,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307538,"byte_end":9307613,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307618,"byte_end":9307621,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307626,"byte_end":9307640,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307645,"byte_end":9307648,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307653,"byte_end":9307664,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307669,"byte_end":9307701,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307706,"byte_end":9307709,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307714,"byte_end":9307783,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307788,"byte_end":9307831,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307836,"byte_end":9307843,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8352},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308431,"byte_end":9308434,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307922,"byte_end":9307980,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307985,"byte_end":9307988,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9307993,"byte_end":9308007,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308012,"byte_end":9308015,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308020,"byte_end":9308031,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308036,"byte_end":9308068,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308073,"byte_end":9308101,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308106,"byte_end":9308109,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308114,"byte_end":9308134,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308139,"byte_end":9308162,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308167,"byte_end":9308244,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308249,"byte_end":9308290,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308295,"byte_end":9308349,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308354,"byte_end":9308395,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308400,"byte_end":9308407,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308412,"byte_end":9308419,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8353},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309643,"byte_end":9309650,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308488,"byte_end":9308559,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308564,"byte_end":9308587,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308592,"byte_end":9308595,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308600,"byte_end":9308675,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308680,"byte_end":9308756,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308761,"byte_end":9308837,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308842,"byte_end":9308918,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308923,"byte_end":9308946,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308951,"byte_end":9308954,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9308959,"byte_end":9309031,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309036,"byte_end":9309069,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309074,"byte_end":9309077,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309082,"byte_end":9309094,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309099,"byte_end":9309102,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309107,"byte_end":9309179,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309184,"byte_end":9309206,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309211,"byte_end":9309214,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309219,"byte_end":9309233,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309238,"byte_end":9309241,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309246,"byte_end":9309253,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309258,"byte_end":9309290,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309295,"byte_end":9309323,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309328,"byte_end":9309331,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309336,"byte_end":9309356,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309361,"byte_end":9309384,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309389,"byte_end":9309437,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309442,"byte_end":9309445,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309450,"byte_end":9309511,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309516,"byte_end":9309548,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309553,"byte_end":9309556,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309561,"byte_end":9309607,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309612,"byte_end":9309619,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309624,"byte_end":9309631,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8354},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310366,"byte_end":9310374,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309733,"byte_end":9309787,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309792,"byte_end":9309795,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309800,"byte_end":9309874,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309879,"byte_end":9309935,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309940,"byte_end":9309943,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309948,"byte_end":9309962,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309967,"byte_end":9309970,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309975,"byte_end":9309982,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9309987,"byte_end":9310019,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310024,"byte_end":9310052,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310057,"byte_end":9310060,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310065,"byte_end":9310085,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310090,"byte_end":9310113,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310118,"byte_end":9310166,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310171,"byte_end":9310211,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310216,"byte_end":9310219,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310224,"byte_end":9310284,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310289,"byte_end":9310330,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310335,"byte_end":9310342,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9310347,"byte_end":9310354,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8384},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315037,"byte_end":9315044,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314982,"byte_end":9315025,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8385},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315153,"byte_end":9315160,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315090,"byte_end":9315141,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8386},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315278,"byte_end":9315288,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315218,"byte_end":9315266,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8387},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315399,"byte_end":9315407,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9315331,"byte_end":9315387,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8399},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315985,"byte_end":9315996,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"fn (deadline: Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315611,"byte_end":9315649,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315650,"byte_end":9315653,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315654,"byte_end":9315729,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315730,"byte_end":9315807,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315808,"byte_end":9315843,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315844,"byte_end":9315847,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315848,"byte_end":9315866,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315867,"byte_end":9315870,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315871,"byte_end":9315947,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9315948,"byte_end":9315977,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8400},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316626,"byte_end":9316635,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"fn (duration: Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316135,"byte_end":9316174,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316175,"byte_end":9316178,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316179,"byte_end":9316254,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316255,"byte_end":9316290,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316291,"byte_end":9316294,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316295,"byte_end":9316370,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316371,"byte_end":9316448,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316449,"byte_end":9316484,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316485,"byte_end":9316488,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316489,"byte_end":9316507,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316508,"byte_end":9316511,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316512,"byte_end":9316588,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316589,"byte_end":9316618,"line_start":35,"line_end":35,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8836},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316895,"byte_end":9316900,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":8837}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316713,"byte_end":9316768,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316769,"byte_end":9316798,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9316816,"byte_end":9316883,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8403},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317340,"byte_end":9317348,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317270,"byte_end":9317328,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8404},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317552,"byte_end":9317562,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317417,"byte_end":9317462,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317467,"byte_end":9317470,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317475,"byte_end":9317540,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8405},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317951,"byte_end":9317956,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"fn (&mut self, deadline: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317630,"byte_end":9317680,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317685,"byte_end":9317688,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317693,"byte_end":9317767,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317772,"byte_end":9317839,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317844,"byte_end":9317847,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317852,"byte_end":9317920,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317925,"byte_end":9317939,"line_start":75,"line_end":75,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8893},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351046,"byte_end":9351051,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9349933,"byte_end":9349984,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9349985,"byte_end":9349988,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9349989,"byte_end":9350050,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350051,"byte_end":9350054,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350055,"byte_end":9350129,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350130,"byte_end":9350209,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350210,"byte_end":9350285,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350286,"byte_end":9350361,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350362,"byte_end":9350390,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350391,"byte_end":9350394,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350395,"byte_end":9350472,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350473,"byte_end":9350551,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350552,"byte_end":9350628,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350629,"byte_end":9350709,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350710,"byte_end":9350787,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350788,"byte_end":9350869,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350870,"byte_end":9350952,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350953,"byte_end":9350956,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9350957,"byte_end":9351017,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8594},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351202,"byte_end":9351210,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351139,"byte_end":9351190,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8595},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351342,"byte_end":9351353,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351259,"byte_end":9351330,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8596},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351541,"byte_end":9351552,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351475,"byte_end":9351529,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8597},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351689,"byte_end":9351703,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351603,"byte_end":9351677,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":8905},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352543,"byte_end":9352550,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":8906}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352347,"byte_end":9352407,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352408,"byte_end":9352470,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8608},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352797,"byte_end":9352800,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352604,"byte_end":9352650,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352655,"byte_end":9352658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352663,"byte_end":9352677,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352682,"byte_end":9352685,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352690,"byte_end":9352697,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352702,"byte_end":9352731,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352736,"byte_end":9352739,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352744,"byte_end":9352773,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352778,"byte_end":9352785,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8609},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352926,"byte_end":9352934,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"fn (std: std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352850,"byte_end":9352914,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8610},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353070,"byte_end":9353078,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"fn (self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353008,"byte_end":9353058,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8611},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353322,"byte_end":9353336,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353137,"byte_end":9353209,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353214,"byte_end":9353217,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353222,"byte_end":9353234,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353239,"byte_end":9353242,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353247,"byte_end":9353310,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8612},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354027,"byte_end":9354049,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"fn (&self, earlier: Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353432,"byte_end":9353507,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353512,"byte_end":9353560,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353565,"byte_end":9353568,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353573,"byte_end":9353587,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353592,"byte_end":9353595,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353600,"byte_end":9353607,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353612,"byte_end":9353664,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353669,"byte_end":9353672,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353677,"byte_end":9353695,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353700,"byte_end":9353721,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353726,"byte_end":9353759,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353764,"byte_end":9353809,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353814,"byte_end":9353851,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353856,"byte_end":9353918,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353923,"byte_end":9353993,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9353998,"byte_end":9354003,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354008,"byte_end":9354015,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8613},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354772,"byte_end":9354797,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354161,"byte_end":9354236,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354241,"byte_end":9354300,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354305,"byte_end":9354308,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354313,"byte_end":9354327,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354332,"byte_end":9354335,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354340,"byte_end":9354347,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354352,"byte_end":9354404,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354409,"byte_end":9354412,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354417,"byte_end":9354435,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354440,"byte_end":9354461,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354466,"byte_end":9354499,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354504,"byte_end":9354549,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354554,"byte_end":9354591,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354596,"byte_end":9354661,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354666,"byte_end":9354738,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354743,"byte_end":9354748,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354753,"byte_end":9354760,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8614},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355568,"byte_end":9355575,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354904,"byte_end":9354974,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354979,"byte_end":9354982,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9354987,"byte_end":9354999,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355004,"byte_end":9355007,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355012,"byte_end":9355080,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355085,"byte_end":9355151,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355156,"byte_end":9355183,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355188,"byte_end":9355191,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355196,"byte_end":9355210,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355215,"byte_end":9355218,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355223,"byte_end":9355230,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355235,"byte_end":9355287,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355292,"byte_end":9355295,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355300,"byte_end":9355318,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355323,"byte_end":9355344,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355349,"byte_end":9355386,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355391,"byte_end":9355439,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355444,"byte_end":9355480,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355485,"byte_end":9355534,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355539,"byte_end":9355544,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355549,"byte_end":9355556,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8615},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355856,"byte_end":9355867,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355639,"byte_end":9355714,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355719,"byte_end":9355790,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355795,"byte_end":9355844,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8616},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356206,"byte_end":9356217,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9355989,"byte_end":9356064,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356069,"byte_end":9356140,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356145,"byte_end":9356194,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":8652},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358670,"byte_end":9358678,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"fn (period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9357939,"byte_end":9358016,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358017,"byte_end":9358048,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358049,"byte_end":9358052,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358053,"byte_end":9358133,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358134,"byte_end":9358173,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358174,"byte_end":9358177,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358178,"byte_end":9358251,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358252,"byte_end":9358255,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358256,"byte_end":9358268,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358269,"byte_end":9358272,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358273,"byte_end":9358318,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358319,"byte_end":9358322,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358323,"byte_end":9358337,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358338,"byte_end":9358341,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358342,"byte_end":9358349,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358350,"byte_end":9358388,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358389,"byte_end":9358392,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358393,"byte_end":9358411,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358412,"byte_end":9358433,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358434,"byte_end":9358503,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358504,"byte_end":9358507,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358508,"byte_end":9358538,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358539,"byte_end":9358569,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358570,"byte_end":9358600,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358601,"byte_end":9358604,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358605,"byte_end":9358648,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358649,"byte_end":9358654,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358655,"byte_end":9358662,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8653},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359564,"byte_end":9359575,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"fn (start: Instant, period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358828,"byte_end":9358901,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358902,"byte_end":9358936,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358937,"byte_end":9358940,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9358941,"byte_end":9359021,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359022,"byte_end":9359061,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359062,"byte_end":9359065,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359066,"byte_end":9359078,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359079,"byte_end":9359082,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359083,"byte_end":9359128,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359129,"byte_end":9359132,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359133,"byte_end":9359147,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359148,"byte_end":9359151,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359152,"byte_end":9359159,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359160,"byte_end":9359214,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359215,"byte_end":9359218,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359219,"byte_end":9359237,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359238,"byte_end":9359259,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359260,"byte_end":9359323,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359324,"byte_end":9359397,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359398,"byte_end":9359401,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359402,"byte_end":9359432,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359433,"byte_end":9359463,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359464,"byte_end":9359494,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359495,"byte_end":9359498,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359499,"byte_end":9359542,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359543,"byte_end":9359548,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359549,"byte_end":9359556,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8928},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359881,"byte_end":9359889,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":8929},{"krate":0,"index":8930}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9359773,"byte_end":9359852,"line_start":78,"line_end":78,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8655},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360134,"byte_end":9360143,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8656},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361235,"byte_end":9361239,"line_start":127,"line_end":127,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"fn (&mut self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360630,"byte_end":9360699,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360704,"byte_end":9360707,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360712,"byte_end":9360726,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360731,"byte_end":9360734,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360739,"byte_end":9360746,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360751,"byte_end":9360771,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360776,"byte_end":9360779,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360784,"byte_end":9360812,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360817,"byte_end":9360820,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360825,"byte_end":9360843,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360848,"byte_end":9360869,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360874,"byte_end":9360943,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360948,"byte_end":9360951,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360956,"byte_end":9360986,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360991,"byte_end":9361021,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361026,"byte_end":9361056,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361061,"byte_end":9361064,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361069,"byte_end":9361112,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361117,"byte_end":9361122,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361127,"byte_end":9361134,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361139,"byte_end":9361179,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":8679},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362886,"byte_end":9362893,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"fn <T> (duration: Duration, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9361871,"byte_end":9361948,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9361949,"byte_end":9361952,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9361953,"byte_end":9362032,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362033,"byte_end":9362105,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362106,"byte_end":9362119,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362120,"byte_end":9362123,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362124,"byte_end":9362141,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362142,"byte_end":9362145,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362146,"byte_end":9362224,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362225,"byte_end":9362255,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362256,"byte_end":9362259,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362260,"byte_end":9362340,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362341,"byte_end":9362368,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362369,"byte_end":9362372,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362373,"byte_end":9362387,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362388,"byte_end":9362391,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362392,"byte_end":9362452,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362453,"byte_end":9362456,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362457,"byte_end":9362468,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362469,"byte_end":9362498,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362499,"byte_end":9362528,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362529,"byte_end":9362532,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362533,"byte_end":9362561,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362562,"byte_end":9362565,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362566,"byte_end":9362588,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362589,"byte_end":9362627,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362628,"byte_end":9362655,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362656,"byte_end":9362659,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362660,"byte_end":9362733,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362734,"byte_end":9362800,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362801,"byte_end":9362856,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362857,"byte_end":9362862,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362863,"byte_end":9362870,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9362871,"byte_end":9362878,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8681},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364115,"byte_end":9364125,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"fn <T> (deadline: Instant, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363084,"byte_end":9363156,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363157,"byte_end":9363160,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363161,"byte_end":9363238,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363239,"byte_end":9363294,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363295,"byte_end":9363298,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363299,"byte_end":9363316,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363317,"byte_end":9363320,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363321,"byte_end":9363399,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363400,"byte_end":9363430,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363431,"byte_end":9363434,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363435,"byte_end":9363515,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363516,"byte_end":9363543,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363544,"byte_end":9363547,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363548,"byte_end":9363562,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363563,"byte_end":9363566,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363567,"byte_end":9363627,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363628,"byte_end":9363631,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363632,"byte_end":9363643,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363644,"byte_end":9363687,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363688,"byte_end":9363717,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363718,"byte_end":9363721,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363722,"byte_end":9363750,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363751,"byte_end":9363754,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363755,"byte_end":9363777,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363778,"byte_end":9363816,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363817,"byte_end":9363844,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363845,"byte_end":9363848,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363849,"byte_end":9363927,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363928,"byte_end":9363942,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9363943,"byte_end":9364029,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364030,"byte_end":9364085,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364086,"byte_end":9364091,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364092,"byte_end":9364099,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364100,"byte_end":9364107,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8933},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364469,"byte_end":9364476,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8935},{"krate":0,"index":8936}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"/ Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364297,"byte_end":9364372,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364373,"byte_end":9364440,"line_start":103,"line_end":103,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8940},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364589,"byte_end":9364596,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364517,"byte_end":9364549,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8688},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364947,"byte_end":9364954,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364874,"byte_end":9364935,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8689},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365082,"byte_end":9365089,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365001,"byte_end":9365070,"line_start":132,"line_end":132,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8690},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365218,"byte_end":9365228,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365148,"byte_end":9365206,"line_start":137,"line_end":137,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":8962},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383584,"byte_end":9383592,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"fn <T> (duration: Duration, stream: T) -> Throttle<T>","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383010,"byte_end":9383069,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383070,"byte_end":9383139,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383140,"byte_end":9383143,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383144,"byte_end":9383157,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383158,"byte_end":9383161,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383162,"byte_end":9383192,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383193,"byte_end":9383211,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383212,"byte_end":9383240,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383241,"byte_end":9383274,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383275,"byte_end":9383305,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383306,"byte_end":9383309,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383310,"byte_end":9383332,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383333,"byte_end":9383424,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383425,"byte_end":9383428,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383429,"byte_end":9383439,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383440,"byte_end":9383502,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383503,"byte_end":9383554,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383555,"byte_end":9383560,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383561,"byte_end":9383568,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9383569,"byte_end":9383576,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9352},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384087,"byte_end":9384095,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9354},{"krate":0,"index":9355},{"krate":0,"index":9356},{"krate":0,"index":9357}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8014626,"byte_end":8014635,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8966},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384562,"byte_end":9384569,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384455,"byte_end":9384528,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384533,"byte_end":9384550,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":8967},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384878,"byte_end":9384885,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384617,"byte_end":9384695,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384700,"byte_end":9384720,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384725,"byte_end":9384728,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384733,"byte_end":9384813,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384818,"byte_end":9384866,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8968},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385180,"byte_end":9385190,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384945,"byte_end":9385007,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385012,"byte_end":9385015,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385020,"byte_end":9385097,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385102,"byte_end":9385168,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":8739},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382143,"byte_end":9382148,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":8738},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382093,"byte_end":9382133,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8740},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382206,"byte_end":9382214,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":8738},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382179,"byte_end":9382196,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":8741},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382303,"byte_end":9382308,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":8738},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382221,"byte_end":9382293,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":771},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175036,"byte_end":175042,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174945,"byte_end":174974,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174979,"byte_end":174982,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174987,"byte_end":175026,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":772},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175072,"byte_end":175078,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175049,"byte_end":175062,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":191663,"byte_end":191675,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"fn (n: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":191528,"byte_end":191579,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29358,"byte_end":29367,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29383,"byte_end":29392,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29742,"byte_end":29747,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243791,"byte_end":8243795,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":965},{"krate":0,"index":969},{"krate":0,"index":973},{"krate":0,"index":980},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8257020,"byte_end":8257024,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8259274,"byte_end":8259278,"line_start":601,"line_end":601,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8261703,"byte_end":8261707,"line_start":671,"line_end":671,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8264678,"byte_end":8264682,"line_start":759,"line_end":759,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8264780,"byte_end":8264784,"line_start":765,"line_end":765,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8265013,"byte_end":8265017,"line_start":774,"line_end":774,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269942,"byte_end":8269953,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8280226,"byte_end":8280237,"line_start":387,"line_end":387,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8280355,"byte_end":8280366,"line_start":393,"line_end":393,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8284136,"byte_end":8284143,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285378,"byte_end":8285385,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286212,"byte_end":8286220,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8290002,"byte_end":8290010,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31503,"byte_end":31512,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31675,"byte_end":31684,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32871,"byte_end":32880,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33634,"byte_end":33640,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33854,"byte_end":33860,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":34002,"byte_end":34008,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34545,"byte_end":34550,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34577,"byte_end":34582,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","byte_start":35779,"byte_end":35787,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8296072,"byte_end":8296080,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8296353,"byte_end":8296361,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8297966,"byte_end":8297974,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8300699,"byte_end":8300702,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8302517,"byte_end":8302520,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47990,"byte_end":47993,"line_start":73,"line_end":73,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48153,"byte_end":48156,"line_start":81,"line_end":81,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48785,"byte_end":48791,"line_start":105,"line_end":105,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54745,"byte_end":54748,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54891,"byte_end":54894,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":55690,"byte_end":55696,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58122,"byte_end":58125,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58268,"byte_end":58271,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58725,"byte_end":58731,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66636,"byte_end":66639,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66787,"byte_end":66790,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67359,"byte_end":67362,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67870,"byte_end":67876,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68389,"byte_end":68395,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68911,"byte_end":68917,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":69428,"byte_end":69434,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8314793,"byte_end":8314804,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8315563,"byte_end":8315574,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8315781,"byte_end":8315792,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8318414,"byte_end":8318425,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8304162,"byte_end":8304168,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307029,"byte_end":8307035,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307403,"byte_end":8307409,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307545,"byte_end":8307551,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308694,"byte_end":8308700,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308778,"byte_end":8308784,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308919,"byte_end":8308924,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8310468,"byte_end":8310477,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325049,"byte_end":8325060,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332841,"byte_end":8332852,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8333345,"byte_end":8333356,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8334437,"byte_end":8334448,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8334621,"byte_end":8334632,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336767,"byte_end":8336779,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347717,"byte_end":8347729,"line_start":325,"line_end":325,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347754,"byte_end":8347766,"line_start":326,"line_end":326,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347785,"byte_end":8347797,"line_start":328,"line_end":328,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8350356,"byte_end":8350362,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8350670,"byte_end":8350676,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8353084,"byte_end":8353089,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8353393,"byte_end":8353398,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8355942,"byte_end":8355948,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8356256,"byte_end":8356262,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358382,"byte_end":8358390,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359307,"byte_end":8359316,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359566,"byte_end":8359574,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8360129,"byte_end":8360138,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361087,"byte_end":8361092,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361485,"byte_end":8361490,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361743,"byte_end":8361748,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361871,"byte_end":8361879,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361916,"byte_end":8361925,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361962,"byte_end":8361970,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362007,"byte_end":8362016,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362059,"byte_end":8362067,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362235,"byte_end":8362244,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8362934,"byte_end":8362938,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8374888,"byte_end":8374889,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8403439,"byte_end":8403440,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8405198,"byte_end":8405199,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8429225,"byte_end":8429226,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430626,"byte_end":8430635,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432814,"byte_end":8432823,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8433799,"byte_end":8433808,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8434639,"byte_end":8434648,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8435159,"byte_end":8435168,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436675,"byte_end":8436684,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438521,"byte_end":8438530,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438672,"byte_end":8438681,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8439393,"byte_end":8439402,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8439932,"byte_end":8439941,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8440420,"byte_end":8440429,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442383,"byte_end":8442392,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444670,"byte_end":8444679,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8445569,"byte_end":8445578,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8446060,"byte_end":8446069,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8446356,"byte_end":8446365,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447534,"byte_end":8447539,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448679,"byte_end":8448684,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448963,"byte_end":8448968,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8449485,"byte_end":8449490,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8452520,"byte_end":8452524,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8455634,"byte_end":8455639,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8455848,"byte_end":8455853,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8456086,"byte_end":8456091,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8456856,"byte_end":8456861,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458041,"byte_end":8458046,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459298,"byte_end":8459303,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8460011,"byte_end":8460016,"line_start":112,"line_end":112,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8461414,"byte_end":8461418,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8462460,"byte_end":8462467,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8463859,"byte_end":8463868,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8469929,"byte_end":8469937,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8471160,"byte_end":8471165,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8472841,"byte_end":8472850,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8474914,"byte_end":8474926,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8477341,"byte_end":8477350,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8479174,"byte_end":8479180,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8480117,"byte_end":8480125,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8481958,"byte_end":8481962,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8482472,"byte_end":8482476,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483441,"byte_end":8483446,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484185,"byte_end":8484190,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484848,"byte_end":8484853,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8498170,"byte_end":8498182,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2839},{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8498687,"byte_end":8498699,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2847}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8500238,"byte_end":8500250,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486021,"byte_end":8486025,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487653,"byte_end":8487657,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8488314,"byte_end":8488318,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8489875,"byte_end":8489880,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8490673,"byte_end":8490681,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8492181,"byte_end":8492189,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72535,"byte_end":72545,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72585,"byte_end":72595,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72876,"byte_end":72888,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72928,"byte_end":72940,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73200,"byte_end":73212,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73252,"byte_end":73264,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":76593,"byte_end":76599,"line_start":192,"line_end":192,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":76643,"byte_end":76649,"line_start":194,"line_end":194,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":78015,"byte_end":78025,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":78673,"byte_end":78682,"line_start":263,"line_end":263,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505172,"byte_end":8505183,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515191,"byte_end":8515202,"line_start":375,"line_end":375,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515517,"byte_end":8515528,"line_start":387,"line_end":387,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515968,"byte_end":8515979,"line_start":401,"line_end":401,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3075},{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8516305,"byte_end":8516316,"line_start":413,"line_end":413,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8516532,"byte_end":8516543,"line_start":424,"line_end":424,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517375,"byte_end":8517383,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8518021,"byte_end":8518029,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520179,"byte_end":8520187,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522642,"byte_end":8522650,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522970,"byte_end":8522979,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8523792,"byte_end":8523800,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8523894,"byte_end":8523903,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8526964,"byte_end":8526976,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527179,"byte_end":8527191,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527201,"byte_end":8527214,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530048,"byte_end":8530061,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530366,"byte_end":8530380,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8531044,"byte_end":8531058,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8531217,"byte_end":8531231,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8532052,"byte_end":8532065,"line_start":258,"line_end":258,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8532161,"byte_end":8532175,"line_start":264,"line_end":264,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534310,"byte_end":8534319,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3229},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558163,"byte_end":8558172,"line_start":807,"line_end":807,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3272},{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558608,"byte_end":8558617,"line_start":821,"line_end":821,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558970,"byte_end":8558979,"line_start":835,"line_end":835,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8559293,"byte_end":8559302,"line_start":849,"line_end":849,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3284},{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8560046,"byte_end":8560055,"line_start":878,"line_end":878,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8560269,"byte_end":8560278,"line_start":889,"line_end":889,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561284,"byte_end":8561293,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3371},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574804,"byte_end":8574813,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575249,"byte_end":8575258,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575578,"byte_end":8575587,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575806,"byte_end":8575815,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577881,"byte_end":8577893,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578096,"byte_end":8578108,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578635,"byte_end":8578643,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580275,"byte_end":8580283,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581603,"byte_end":8581611,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581702,"byte_end":8581710,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582526,"byte_end":8582538,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3507},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589161,"byte_end":8589173,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589615,"byte_end":8589627,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589956,"byte_end":8589968,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8590093,"byte_end":8590105,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590463,"byte_end":8590471,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8591203,"byte_end":8591211,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3556}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593338,"byte_end":8593350,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597854,"byte_end":8597866,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598182,"byte_end":8598194,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598636,"byte_end":8598648,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3598},{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598968,"byte_end":8598980,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3601}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8599105,"byte_end":8599117,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600109,"byte_end":8600117,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3619},{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600437,"byte_end":8600446,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600930,"byte_end":8600938,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3626}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8601034,"byte_end":8601043,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8601981,"byte_end":8601991,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605324,"byte_end":8605334,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605772,"byte_end":8605782,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606095,"byte_end":8606105,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606419,"byte_end":8606429,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606916,"byte_end":8606926,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3693},{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8608443,"byte_end":8608453,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8608578,"byte_end":8608588,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82089,"byte_end":82098,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82272,"byte_end":82281,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82430,"byte_end":82439,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82783,"byte_end":82792,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82817,"byte_end":82826,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82836,"byte_end":82845,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83331,"byte_end":83340,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83625,"byte_end":83634,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":83975,"byte_end":83984,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84009,"byte_end":84018,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84028,"byte_end":84037,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84216,"byte_end":84225,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84510,"byte_end":84519,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86634,"byte_end":86642,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86667,"byte_end":86675,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86685,"byte_end":86693,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86868,"byte_end":86876,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":87160,"byte_end":87168,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87508,"byte_end":87519,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87544,"byte_end":87555,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87565,"byte_end":87576,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88259,"byte_end":88270,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88560,"byte_end":88571,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88735,"byte_end":88746,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs","byte_start":88934,"byte_end":88944,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8612945,"byte_end":8612951,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8613757,"byte_end":8613763,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8613977,"byte_end":8613983,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94048,"byte_end":94058,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94323,"byte_end":94333,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94792,"byte_end":94797,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99522,"byte_end":99532,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99641,"byte_end":99653,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100040,"byte_end":100056,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100903,"byte_end":100919,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101460,"byte_end":101472,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101684,"byte_end":101689,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3853},{"krate":0,"index":3854}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93150,"byte_end":93153,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93242,"byte_end":93245,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/orphan.rs","byte_start":8654071,"byte_end":8654086,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/orphan.rs","byte_start":8654330,"byte_end":8654345,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3899},{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8658926,"byte_end":8658932,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659076,"byte_end":8659082,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659249,"byte_end":8659255,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659722,"byte_end":8659728,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8662023,"byte_end":8662029,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8662205,"byte_end":8662211,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8648687,"byte_end":8648692,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8648870,"byte_end":8648875,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649120,"byte_end":8649137,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649286,"byte_end":8649303,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649650,"byte_end":8649655,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650324,"byte_end":8650329,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650416,"byte_end":8650421,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650518,"byte_end":8650523,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4000},{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650786,"byte_end":8650788,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650943,"byte_end":8650945,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8651175,"byte_end":8651177,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8651300,"byte_end":8651302,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619379,"byte_end":8619386,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4073},{"krate":0,"index":4075},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4082},{"krate":0,"index":4087},{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635537,"byte_end":8635544,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4094}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635874,"byte_end":8635888,"line_start":676,"line_end":676,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636094,"byte_end":8636108,"line_start":688,"line_end":688,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4100}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636245,"byte_end":8636259,"line_start":696,"line_end":696,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4105},{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638024,"byte_end":8638029,"line_start":749,"line_end":749,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640542,"byte_end":8640547,"line_start":821,"line_end":821,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641512,"byte_end":8641522,"line_start":856,"line_end":856,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642047,"byte_end":8642058,"line_start":874,"line_end":874,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4129}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642283,"byte_end":8642294,"line_start":884,"line_end":884,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642646,"byte_end":8642656,"line_start":900,"line_end":900,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642781,"byte_end":8642792,"line_start":906,"line_end":906,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642917,"byte_end":8642928,"line_start":912,"line_end":912,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4145}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs","byte_start":123157,"byte_end":123166,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8678140,"byte_end":8678154,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4269}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8681693,"byte_end":8681698,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4287}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8682385,"byte_end":8682399,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683286,"byte_end":8683300,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683466,"byte_end":8683473,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4297},{"krate":0,"index":4299}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683931,"byte_end":8683938,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8684106,"byte_end":8684109,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8685207,"byte_end":8685213,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4311},{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8692896,"byte_end":8692902,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8692927,"byte_end":8692933,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8693292,"byte_end":8693296,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8694074,"byte_end":8694078,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8699829,"byte_end":8699835,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700460,"byte_end":8700469,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703548,"byte_end":8703557,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703800,"byte_end":8703809,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4417}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8704086,"byte_end":8704095,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8704129,"byte_end":8704134,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8704812,"byte_end":8704819,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8705296,"byte_end":8705303,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4466},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8707474,"byte_end":8707479,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719783,"byte_end":8719793,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719830,"byte_end":8719840,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719856,"byte_end":8719866,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8720042,"byte_end":8720052,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8720079,"byte_end":8720089,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4509},{"krate":0,"index":4510}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8721231,"byte_end":8721241,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8721507,"byte_end":8721517,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4516}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8722764,"byte_end":8722771,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4542},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8724302,"byte_end":8724309,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8724399,"byte_end":8724406,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8727088,"byte_end":8727093,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4616},{"krate":0,"index":4618},{"krate":0,"index":4621},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8735949,"byte_end":8735957,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8737834,"byte_end":8737839,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8737998,"byte_end":8738006,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/waker.rs","byte_start":8739824,"byte_end":8739832,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8741580,"byte_end":8741593,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4797}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8742751,"byte_end":8742755,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8743155,"byte_end":8743159,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4811}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686226,"byte_end":8686230,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686261,"byte_end":8686265,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686402,"byte_end":8686410,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686451,"byte_end":8686459,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688383,"byte_end":8688387,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688684,"byte_end":8688692,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4819},{"krate":0,"index":4820}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688943,"byte_end":8688947,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689140,"byte_end":8689148,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689279,"byte_end":8689283,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689452,"byte_end":8689460,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4733}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689746,"byte_end":8689750,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689990,"byte_end":8689994,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8690146,"byte_end":8690154,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8690370,"byte_end":8690374,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8745467,"byte_end":8745479,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747115,"byte_end":8747127,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747213,"byte_end":8747225,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4879}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747386,"byte_end":8747393,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4881},{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8749557,"byte_end":8749562,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8752231,"byte_end":8752238,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4888}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/schedule.rs","byte_start":8752741,"byte_end":8752753,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/shutdown.rs","byte_start":8753626,"byte_end":8753634,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs","byte_start":8754868,"byte_end":8754880,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs","byte_start":8755075,"byte_end":8755087,"line_start":17,"line_end":17,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126573,"byte_end":126580,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134500,"byte_end":134507,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135056,"byte_end":135063,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135583,"byte_end":135590,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4967},{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":137533,"byte_end":137540,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4973},{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139486,"byte_end":139493,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139572,"byte_end":139579,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":140374,"byte_end":140386,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":142039,"byte_end":142044,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":143264,"byte_end":143285,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":144115,"byte_end":144120,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5008}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":145273,"byte_end":145278,"line_start":177,"line_end":177,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5020}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146714,"byte_end":146719,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146849,"byte_end":146854,"line_start":224,"line_end":224,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147912,"byte_end":147918,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150433,"byte_end":150439,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5045},{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":156229,"byte_end":156235,"line_start":272,"line_end":272,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5051}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159799,"byte_end":159814,"line_start":347,"line_end":347,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159962,"byte_end":159977,"line_start":353,"line_end":353,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":160135,"byte_end":160150,"line_start":359,"line_end":359,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757079,"byte_end":8757085,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5085}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757554,"byte_end":8757560,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5087}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757876,"byte_end":8757882,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8758534,"byte_end":8758542,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8758611,"byte_end":8758616,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":162439,"byte_end":162444,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":163050,"byte_end":163056,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/spawner.rs","byte_start":163672,"byte_end":163679,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5133}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765664,"byte_end":8765669,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765700,"byte_end":8765705,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765736,"byte_end":8765742,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765773,"byte_end":8765779,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8766638,"byte_end":8766643,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8773177,"byte_end":8773182,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778350,"byte_end":8778355,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778451,"byte_end":8778456,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778615,"byte_end":8778620,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5216}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778808,"byte_end":8778814,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8782319,"byte_end":8782325,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786479,"byte_end":8786489,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786526,"byte_end":8786536,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786552,"byte_end":8786562,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8787349,"byte_end":8787359,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8788165,"byte_end":8788169,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8792042,"byte_end":8792047,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8793525,"byte_end":8793530,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5295}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8793703,"byte_end":8793708,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5299}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8799472,"byte_end":8799477,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5454}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8803047,"byte_end":8803053,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5358}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8803828,"byte_end":8803835,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8808101,"byte_end":8808105,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8812895,"byte_end":8812901,"line_start":596,"line_end":596,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8813341,"byte_end":8813344,"line_start":612,"line_end":612,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5390},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8815915,"byte_end":8815921,"line_start":690,"line_end":690,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5398},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8784377,"byte_end":8784387,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785542,"byte_end":8785552,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785691,"byte_end":8785701,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785808,"byte_end":8785815,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8786160,"byte_end":8786167,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5433}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113303,"byte_end":113310,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":168318,"byte_end":168324,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169092,"byte_end":169098,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5495}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169865,"byte_end":169875,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":171125,"byte_end":171131,"line_start":170,"line_end":170,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8823772,"byte_end":8823775,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5538},{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8824497,"byte_end":8824505,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8824595,"byte_end":8824603,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8826756,"byte_end":8826763,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5559},{"krate":0,"index":5560}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8826871,"byte_end":8826878,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832950,"byte_end":8832959,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833073,"byte_end":8833082,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5606},{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833470,"byte_end":8833481,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833767,"byte_end":8833777,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837573,"byte_end":8837583,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5632}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8839932,"byte_end":8839938,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5639}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8840223,"byte_end":8840229,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5641},{"krate":0,"index":5642}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846443,"byte_end":8846449,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5646},{"krate":0,"index":5651}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848307,"byte_end":8848313,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5689},{"krate":0,"index":5690}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883076,"byte_end":8883085,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883231,"byte_end":8883240,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883279,"byte_end":8883288,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5711}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884239,"byte_end":8884248,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884394,"byte_end":8884403,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884442,"byte_end":8884451,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5731},{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8885374,"byte_end":8885379,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8885559,"byte_end":8885564,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887142,"byte_end":8887149,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5774}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887433,"byte_end":8887440,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888416,"byte_end":8888422,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888477,"byte_end":8888483,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888872,"byte_end":8888875,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888921,"byte_end":8888924,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889307,"byte_end":8889310,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889358,"byte_end":8889361,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889876,"byte_end":8889882,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889971,"byte_end":8889977,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891055,"byte_end":8891060,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891108,"byte_end":8891113,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891513,"byte_end":8891521,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891569,"byte_end":8891577,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892838,"byte_end":8892843,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892874,"byte_end":8892879,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892910,"byte_end":8892915,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893458,"byte_end":8893463,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894077,"byte_end":8894083,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894301,"byte_end":8894307,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5886}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894426,"byte_end":8894432,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895518,"byte_end":8895527,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895748,"byte_end":8895757,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5909}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895879,"byte_end":8895888,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8896960,"byte_end":8896970,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8897166,"byte_end":8897176,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5935},{"krate":0,"index":5936}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8898075,"byte_end":8898079,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5947}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8898239,"byte_end":8898243,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899177,"byte_end":8899181,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899843,"byte_end":8899847,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5968}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900552,"byte_end":8900555,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900744,"byte_end":8900747,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5987}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900868,"byte_end":8900871,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5996}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8901716,"byte_end":8901721,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6010}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8901975,"byte_end":8901980,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6016}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903492,"byte_end":8903496,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903530,"byte_end":8903534,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903675,"byte_end":8903679,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904166,"byte_end":8904170,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904797,"byte_end":8904801,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905336,"byte_end":8905343,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905374,"byte_end":8905381,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905412,"byte_end":8905419,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8906112,"byte_end":8906119,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911784,"byte_end":8911793,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6114}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918794,"byte_end":8918803,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6119}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8920342,"byte_end":8920351,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6124},{"krate":0,"index":6125},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921567,"byte_end":8921571,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921781,"byte_end":8921785,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921918,"byte_end":8921922,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923148,"byte_end":8923157,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6160}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923378,"byte_end":8923387,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923572,"byte_end":8923581,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924930,"byte_end":8924937,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924971,"byte_end":8924978,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8925185,"byte_end":8925192,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6191},{"krate":0,"index":6192}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8925802,"byte_end":8925806,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6205}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8926016,"byte_end":8926020,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8926153,"byte_end":8926157,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8927676,"byte_end":8927685,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8927945,"byte_end":8927954,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8928147,"byte_end":8928156,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6239}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":8959381,"byte_end":8959388,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6372}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":8959743,"byte_end":8959750,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882306,"byte_end":8882308,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978188,"byte_end":8978195,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981475,"byte_end":8981492,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6390}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992059,"byte_end":8992065,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6462}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992192,"byte_end":8992198,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6466}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992359,"byte_end":8992363,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992433,"byte_end":8992437,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995211,"byte_end":8995217,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995254,"byte_end":8995260,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995298,"byte_end":8995306,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995343,"byte_end":8995351,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995367,"byte_end":8995373,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001009,"byte_end":9001013,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6494}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001405,"byte_end":9001411,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001591,"byte_end":9001597,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6500}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001751,"byte_end":9001759,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6503}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006624,"byte_end":9006632,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6522}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9009385,"byte_end":9009390,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012804,"byte_end":9012812,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6527},{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9013262,"byte_end":9013270,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6532}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9014454,"byte_end":9014458,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9015300,"byte_end":9015304,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6543},{"krate":0,"index":6544}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9016034,"byte_end":9016042,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7775}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9017354,"byte_end":9017358,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7780},{"krate":0,"index":7781}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9018082,"byte_end":9018086,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6548}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9018884,"byte_end":9018890,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6556}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019305,"byte_end":9019311,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6559}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019455,"byte_end":9019463,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6562}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019598,"byte_end":9019607,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6566}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019780,"byte_end":9019789,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020080,"byte_end":9020089,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6574}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020362,"byte_end":9020371,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020398,"byte_end":9020410,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020752,"byte_end":9020764,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9025283,"byte_end":9025288,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6633},{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9035270,"byte_end":9035276,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9035758,"byte_end":9035764,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036402,"byte_end":9036408,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6672}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036540,"byte_end":9036546,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6675}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036953,"byte_end":9036961,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6681}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038733,"byte_end":9038741,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041169,"byte_end":9041177,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041237,"byte_end":9041245,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7788},{"krate":0,"index":7789}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041433,"byte_end":9041439,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6712},{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9052829,"byte_end":9052831,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6749}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053232,"byte_end":9053234,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053541,"byte_end":9053550,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053812,"byte_end":9053824,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6763}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9055519,"byte_end":9055523,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6785}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056156,"byte_end":9056164,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6792}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056430,"byte_end":9056434,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056483,"byte_end":9056487,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056966,"byte_end":9056968,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6805},{"krate":0,"index":6806},{"krate":0,"index":6807},{"krate":0,"index":6808}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057666,"byte_end":9057668,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057816,"byte_end":9057818,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057996,"byte_end":9057998,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6818}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9058398,"byte_end":9058400,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6822}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9058809,"byte_end":9058811,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6827},{"krate":0,"index":6829},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9061782,"byte_end":9061784,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9062220,"byte_end":9062224,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9062688,"byte_end":9062692,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6849}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9063241,"byte_end":9063253,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6854}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9064743,"byte_end":9064754,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9067471,"byte_end":9067473,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9073177,"byte_end":9073179,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6918}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9073456,"byte_end":9073458,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9076857,"byte_end":9076859,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6927}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077533,"byte_end":9077548,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6943}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077689,"byte_end":9077704,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078162,"byte_end":9078179,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6952}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079157,"byte_end":9079174,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6965},{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081646,"byte_end":9081663,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6969},{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081829,"byte_end":9081844,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6973},{"krate":0,"index":6974}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082696,"byte_end":9082705,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6984}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082865,"byte_end":9082874,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083360,"byte_end":9083372,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083405,"byte_end":9083417,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6991}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083757,"byte_end":9083769,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6994}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083998,"byte_end":9084007,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6996}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084137,"byte_end":9084146,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084632,"byte_end":9084644,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6999}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084950,"byte_end":9084962,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085119,"byte_end":9085130,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7002}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085229,"byte_end":9085240,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7004}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085370,"byte_end":9085381,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085885,"byte_end":9085901,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085938,"byte_end":9085954,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091356,"byte_end":9091361,"line_start":141,"line_end":141,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091406,"byte_end":9091411,"line_start":142,"line_end":142,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091460,"byte_end":9091470,"line_start":143,"line_end":143,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091526,"byte_end":9091541,"line_start":144,"line_end":144,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091819,"byte_end":9091831,"line_start":154,"line_end":154,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7033}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091974,"byte_end":9091986,"line_start":160,"line_end":160,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092786,"byte_end":9092791,"line_start":186,"line_end":186,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097300,"byte_end":9097305,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7053}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097389,"byte_end":9097394,"line_start":344,"line_end":344,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097539,"byte_end":9097549,"line_start":355,"line_end":355,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7060}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097646,"byte_end":9097656,"line_start":361,"line_end":361,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7064},{"krate":0,"index":7065}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097799,"byte_end":9097809,"line_start":368,"line_end":368,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7069}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097961,"byte_end":9097971,"line_start":374,"line_end":374,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098132,"byte_end":9098142,"line_start":380,"line_end":380,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7077}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098312,"byte_end":9098327,"line_start":388,"line_end":388,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7080}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098416,"byte_end":9098431,"line_start":394,"line_end":394,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098566,"byte_end":9098581,"line_start":401,"line_end":401,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098725,"byte_end":9098740,"line_start":407,"line_end":407,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098893,"byte_end":9098908,"line_start":413,"line_end":413,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7093}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102872,"byte_end":9102880,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102913,"byte_end":9102921,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103184,"byte_end":9103190,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7127}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9107198,"byte_end":9107204,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7129}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9108942,"byte_end":9108950,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7132}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9109460,"byte_end":9109468,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7134},{"krate":0,"index":7135}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9114298,"byte_end":9114306,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7138}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9117264,"byte_end":9117270,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7141},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7144},{"krate":0,"index":7145}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119146,"byte_end":9119155,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119317,"byte_end":9119326,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119395,"byte_end":9119407,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7174}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119706,"byte_end":9119718,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121529,"byte_end":9121535,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7190},{"krate":0,"index":7192},{"krate":0,"index":7197}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127474,"byte_end":9127480,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7200}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127619,"byte_end":9127627,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7203},{"krate":0,"index":7204}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131982,"byte_end":9131990,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7207}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9132137,"byte_end":9132145,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9132608,"byte_end":9132613,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215},{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7220},{"krate":0,"index":7224},{"krate":0,"index":7228},{"krate":0,"index":7230},{"krate":0,"index":7232},{"krate":0,"index":7234}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136818,"byte_end":9136823,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136860,"byte_end":9136865,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136890,"byte_end":9136895,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7242}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9137264,"byte_end":9137269,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7246}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9137664,"byte_end":9137669,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7253},{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7257},{"krate":0,"index":7258},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7262},{"krate":0,"index":7263},{"krate":0,"index":7264},{"krate":0,"index":7265}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9139382,"byte_end":9139387,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7267}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9142865,"byte_end":9142874,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7308},{"krate":0,"index":7309},{"krate":0,"index":7310},{"krate":0,"index":7311},{"krate":0,"index":7312},{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9152406,"byte_end":9152415,"line_start":348,"line_end":348,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9152616,"byte_end":9152622,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7328},{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9153488,"byte_end":9153495,"line_start":385,"line_end":385,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7331},{"krate":0,"index":7332}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9154124,"byte_end":9154131,"line_start":408,"line_end":408,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7335},{"krate":0,"index":7336}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9154930,"byte_end":9154937,"line_start":438,"line_end":438,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7340}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156579,"byte_end":9156586,"line_start":475,"line_end":475,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156633,"byte_end":9156645,"line_start":479,"line_end":479,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7343}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156738,"byte_end":9156750,"line_start":485,"line_end":485,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156894,"byte_end":9156906,"line_start":491,"line_end":491,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156953,"byte_end":9156968,"line_start":495,"line_end":495,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7348},{"krate":0,"index":7349}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9157590,"byte_end":9157605,"line_start":516,"line_end":516,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7351}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9157903,"byte_end":9157918,"line_start":525,"line_end":525,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9158011,"byte_end":9158017,"line_start":530,"line_end":530,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7356},{"krate":0,"index":7357},{"krate":0,"index":7358}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163286,"byte_end":9163295,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7407},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7419},{"krate":0,"index":7420},{"krate":0,"index":7421},{"krate":0,"index":7422}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179367,"byte_end":9179376,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7424}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179455,"byte_end":9179464,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7426}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179842,"byte_end":9179851,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179876,"byte_end":9179885,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179923,"byte_end":9179929,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7431},{"krate":0,"index":7433},{"krate":0,"index":7434},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7441}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186335,"byte_end":9186341,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7444}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186414,"byte_end":9186420,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186842,"byte_end":9186854,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187034,"byte_end":9187046,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7451}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187190,"byte_end":9187202,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187249,"byte_end":9187264,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7454},{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187794,"byte_end":9187809,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7457}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9188107,"byte_end":9188122,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9188160,"byte_end":9188166,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7460},{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":7465},{"krate":0,"index":7466},{"krate":0,"index":7467},{"krate":0,"index":7468}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9193579,"byte_end":9193587,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7473},{"krate":0,"index":7474},{"krate":0,"index":7475},{"krate":0,"index":7476},{"krate":0,"index":7477},{"krate":0,"index":7478},{"krate":0,"index":7479},{"krate":0,"index":7480},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9197250,"byte_end":9197258,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9197611,"byte_end":9197622,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200351,"byte_end":9200360,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7503},{"krate":0,"index":7504},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202332,"byte_end":9202347,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7514}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202592,"byte_end":9202612,"line_start":145,"line_end":145,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7516}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202866,"byte_end":9202881,"line_start":154,"line_end":154,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7519}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202989,"byte_end":9203009,"line_start":160,"line_end":160,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7521}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206877,"byte_end":9206892,"line_start":113,"line_end":113,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7536}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9207148,"byte_end":9207163,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7542}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208167,"byte_end":9208173,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208218,"byte_end":9208224,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208280,"byte_end":9208295,"line_start":158,"line_end":158,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208355,"byte_end":9208371,"line_start":159,"line_end":159,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208412,"byte_end":9208418,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7555},{"krate":0,"index":7556},{"krate":0,"index":7560},{"krate":0,"index":7564}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211463,"byte_end":9211478,"line_start":258,"line_end":258,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7567},{"krate":0,"index":7568}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211609,"byte_end":9211625,"line_start":266,"line_end":266,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7572}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211759,"byte_end":9211775,"line_start":274,"line_end":274,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211897,"byte_end":9211903,"line_start":280,"line_end":280,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211987,"byte_end":9211993,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7581}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9218268,"byte_end":9218279,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7612},{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224206,"byte_end":9224217,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7616}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224303,"byte_end":9224314,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7618}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224447,"byte_end":9224458,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224483,"byte_end":9224494,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224590,"byte_end":9224595,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7625},{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9228136,"byte_end":9228145,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7657}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9228325,"byte_end":9228334,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230493,"byte_end":9230501,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7668},{"krate":0,"index":7669}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231773,"byte_end":9231781,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7673}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233147,"byte_end":9233155,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7680},{"krate":0,"index":7681}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233414,"byte_end":9233422,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7685}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233725,"byte_end":9233733,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7688}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233847,"byte_end":9233853,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7691},{"krate":0,"index":7692},{"krate":0,"index":7696}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235420,"byte_end":9235426,"line_start":374,"line_end":374,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7701}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235665,"byte_end":9235668,"line_start":385,"line_end":385,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7704},{"krate":0,"index":7705}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235809,"byte_end":9235815,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7708}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235917,"byte_end":9235924,"line_start":403,"line_end":403,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7710}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236147,"byte_end":9236154,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7712}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236271,"byte_end":9236278,"line_start":418,"line_end":418,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236308,"byte_end":9236315,"line_start":420,"line_end":420,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7715}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236462,"byte_end":9236469,"line_start":426,"line_end":426,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7718},{"krate":0,"index":7719}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9254854,"byte_end":9254862,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9261959,"byte_end":9261967,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8178},{"krate":0,"index":8180},{"krate":0,"index":8184},{"krate":0,"index":8186},{"krate":0,"index":8189}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9269745,"byte_end":9269753,"line_start":444,"line_end":444,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8193}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9269892,"byte_end":9269900,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8195},{"krate":0,"index":8196}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9270865,"byte_end":9270873,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8199}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9270954,"byte_end":9270962,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8201}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9271829,"byte_end":9271837,"line_start":510,"line_end":510,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8205},{"krate":0,"index":8206}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9272722,"byte_end":9272728,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8210},{"krate":0,"index":8212}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9273291,"byte_end":9273294,"line_start":560,"line_end":560,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8214},{"krate":0,"index":8216},{"krate":0,"index":8219}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276738,"byte_end":9276746,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8242},{"krate":0,"index":8246},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278522,"byte_end":9278530,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8255}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278738,"byte_end":9278746,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8259}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9279067,"byte_end":9279082,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8263},{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9279383,"byte_end":9279388,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8273}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280006,"byte_end":9280007,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280192,"byte_end":9280203,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8280}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280347,"byte_end":9280358,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8282}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280505,"byte_end":9280516,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/clock.rs","byte_start":9284035,"byte_end":9284040,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8788}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294413,"byte_end":9294423,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8339},{"krate":0,"index":8340},{"krate":0,"index":8344},{"krate":0,"index":8346},{"krate":0,"index":8347},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8357}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312031,"byte_end":9312041,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312069,"byte_end":9312079,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8362}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312216,"byte_end":9312226,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8365},{"krate":0,"index":8366}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312608,"byte_end":9312613,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8369},{"krate":0,"index":8370},{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314740,"byte_end":9314745,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8379}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314875,"byte_end":9314878,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314965,"byte_end":9314972,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386},{"krate":0,"index":8387}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317074,"byte_end":9317079,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8402},{"krate":0,"index":8403},{"krate":0,"index":8404},{"krate":0,"index":8405}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9318057,"byte_end":9318062,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8407},{"krate":0,"index":8408}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9331112,"byte_end":9331123,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9333101,"byte_end":9333119,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8428},{"krate":0,"index":8429}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9333691,"byte_end":9333709,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9337661,"byte_end":9337666,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9343894,"byte_end":9343899,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8473}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9344107,"byte_end":9344112,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9344137,"byte_end":9344142,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9344519,"byte_end":9344525,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8485},{"krate":0,"index":8486},{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9345170,"byte_end":9345176,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8489}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9345621,"byte_end":9345633,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9346458,"byte_end":9346470,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9346754,"byte_end":9346759,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8518}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9346850,"byte_end":9346855,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9322680,"byte_end":9322686,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9326333,"byte_end":9326339,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8575}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9328328,"byte_end":9328334,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8578}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9328811,"byte_end":9328816,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9330433,"byte_end":9330438,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8588}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351127,"byte_end":9351132,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595},{"krate":0,"index":8596},{"krate":0,"index":8597}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351847,"byte_end":9351852,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351879,"byte_end":9351884,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8600}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352590,"byte_end":9352597,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356371,"byte_end":9356378,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8618}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356507,"byte_end":9356514,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8620}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356629,"byte_end":9356636,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8622},{"krate":0,"index":8623}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356801,"byte_end":9356808,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8625}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356913,"byte_end":9356920,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8627},{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357061,"byte_end":9357068,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8630},{"krate":0,"index":8631}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357229,"byte_end":9357236,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8633}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357343,"byte_end":9357350,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8635}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360075,"byte_end":9360083,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361378,"byte_end":9361386,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8661},{"krate":0,"index":8662}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364608,"byte_end":9364615,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8684}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364744,"byte_end":9364751,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8687},{"krate":0,"index":8688},{"krate":0,"index":8689},{"krate":0,"index":8690}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365289,"byte_end":9365296,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8693},{"krate":0,"index":8694}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366097,"byte_end":9366104,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8698}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366248,"byte_end":9366255,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366292,"byte_end":9366297,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8701}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384437,"byte_end":9384445,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385260,"byte_end":9385268,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9376201,"byte_end":9376206,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8720},{"krate":0,"index":8722},{"krate":0,"index":8723},{"krate":0,"index":8724},{"krate":0,"index":8725},{"krate":0,"index":8726}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9380958,"byte_end":9380963,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8729}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9368022,"byte_end":9368027,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8760},{"krate":0,"index":8762},{"krate":0,"index":8763},{"krate":0,"index":8764},{"krate":0,"index":8765},{"krate":0,"index":8766},{"krate":0,"index":8767}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9373735,"byte_end":9373739,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8770}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9386101,"byte_end":9386105,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9007},{"krate":0,"index":9008},{"krate":0,"index":9009},{"krate":0,"index":9010},{"krate":0,"index":9011},{"krate":0,"index":9012},{"krate":0,"index":9013}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9387579,"byte_end":9387583,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9015}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/addr.rs","byte_start":9394802,"byte_end":9394809,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9034},{"krate":0,"index":9035},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/generation.rs","byte_start":9397838,"byte_end":9397848,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9053},{"krate":0,"index":9054},{"krate":0,"index":9055},{"krate":0,"index":9056},{"krate":0,"index":9057}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9398987,"byte_end":9398992,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9081}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9399334,"byte_end":9399340,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9085},{"krate":0,"index":9086},{"krate":0,"index":9088},{"krate":0,"index":9091},{"krate":0,"index":9094},{"krate":0,"index":9097}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9403292,"byte_end":9403297,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9102}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9403603,"byte_end":9403609,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9106}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9405752,"byte_end":9405757,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9120},{"krate":0,"index":9123},{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126},{"krate":0,"index":9127}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9407436,"byte_end":9407441,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9130}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/slot.rs","byte_start":9407818,"byte_end":9407822,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9143},{"krate":0,"index":9144},{"krate":0,"index":9145},{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9149}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9408793,"byte_end":9408806,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9409634,"byte_end":9409647,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9166}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389181,"byte_end":9389185,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389222,"byte_end":9389226,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389249,"byte_end":9389253,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9183},{"krate":0,"index":9184},{"krate":0,"index":9185},{"krate":0,"index":9186}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9390768,"byte_end":9390772,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9189}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174394,"byte_end":174404,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174463,"byte_end":174473,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175762,"byte_end":175770,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175807,"byte_end":175815,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175869,"byte_end":175879,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":178883,"byte_end":178893,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179138,"byte_end":179148,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9238}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179548,"byte_end":179558,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9246}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179780,"byte_end":179784,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9250},{"krate":0,"index":9251}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180231,"byte_end":180239,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180438,"byte_end":180446,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":190518,"byte_end":190526,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192388,"byte_end":192396,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410459,"byte_end":9410466,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410503,"byte_end":9410510,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410548,"byte_end":9410557,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410743,"byte_end":9410750,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9295},{"krate":0,"index":9296}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411384,"byte_end":9411393,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9299},{"krate":0,"index":9300}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411525,"byte_end":9411534,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9303}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411656,"byte_end":9411665,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9306}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":194854,"byte_end":194862,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195112,"byte_end":195120,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195225,"byte_end":195233,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195542,"byte_end":195552,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14118,"byte_end":14124,"line_start":346,"line_end":346,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","byte_start":16235,"byte_end":16242,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14149,"byte_end":14151,"line_start":349,"line_end":349,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":887}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/mod.rs","byte_start":8234386,"byte_end":8234388,"line_start":48,"line_end":48,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1067}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/os/mod.rs","byte_start":8280478,"byte_end":8280482,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1068}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14179,"byte_end":14185,"line_start":353,"line_end":353,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14196,"byte_end":14198,"line_start":355,"line_end":355,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14208,"byte_end":14211,"line_start":356,"line_end":356,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":306}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70934,"byte_end":70937,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3032}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71041,"byte_end":71044,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3335}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71108,"byte_end":71112,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3480}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14243,"byte_end":14250,"line_start":361,"line_end":361,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":549}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14280,"byte_end":14287,"line_start":364,"line_end":364,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3872}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14300,"byte_end":14307,"line_start":367,"line_end":367,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":555}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14358,"byte_end":14364,"line_start":372,"line_end":372,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5510}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8820942,"byte_end":8820946,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5571}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14395,"byte_end":14401,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5691}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14430,"byte_end":14434,"line_start":380,"line_end":380,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6380}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8975933,"byte_end":8975942,"line_start":431,"line_end":431,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6394}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976100,"byte_end":8976104,"line_start":438,"line_end":438,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6581}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/mod.rs","byte_start":9022700,"byte_end":9022705,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6979}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976251,"byte_end":8976258,"line_start":446,"line_end":446,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7149}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mod.rs","byte_start":8976572,"byte_end":8976577,"line_start":459,"line_end":459,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7632}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14498,"byte_end":14502,"line_start":387,"line_end":387,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8105}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14556,"byte_end":14560,"line_start":392,"line_end":392,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8309}},{"kind":"Mod","span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9282324,"byte_end":9282335,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8312}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29358,"byte_end":29367,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29383,"byte_end":29392,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29742,"byte_end":29747,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8243791,"byte_end":8243795,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8257020,"byte_end":8257024,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8259274,"byte_end":8259278,"line_start":601,"line_end":601,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8261703,"byte_end":8261707,"line_start":671,"line_end":671,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8264678,"byte_end":8264682,"line_start":759,"line_end":759,"column_start":26,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8264780,"byte_end":8264784,"line_start":765,"line_end":765,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/file.rs","byte_start":8265013,"byte_end":8265017,"line_start":774,"line_end":774,"column_start":37,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":945},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8269942,"byte_end":8269953,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8280226,"byte_end":8280237,"line_start":387,"line_end":387,"column_start":37,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1281},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/open_options.rs","byte_start":8280355,"byte_end":8280366,"line_start":393,"line_end":393,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1281},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8284136,"byte_end":8284143,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8285378,"byte_end":8285385,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1288},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8286212,"byte_end":8286220,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/fs/read_dir.rs","byte_start":8290002,"byte_end":8290010,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1302},"to":{"krate":1,"index":8203}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31503,"byte_end":31512,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31675,"byte_end":31684,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32871,"byte_end":32880,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33634,"byte_end":33640,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33854,"byte_end":33860,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":34002,"byte_end":34008,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34545,"byte_end":34550,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34577,"byte_end":34582,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","byte_start":35779,"byte_end":35787,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8296072,"byte_end":8296080,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8296353,"byte_end":8296361,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1426},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8297966,"byte_end":8297974,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1426},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8300699,"byte_end":8300702,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/blocking.rs","byte_start":8302517,"byte_end":8302520,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45531,"byte_end":45540,"line_start":19,"line_end":19,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47990,"byte_end":47993,"line_start":73,"line_end":73,"column_start":57,"column_end":60},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48153,"byte_end":48156,"line_start":81,"line_end":81,"column_start":26,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":29841},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48785,"byte_end":48791,"line_start":105,"line_end":105,"column_start":51,"column_end":57},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54745,"byte_end":54748,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54891,"byte_end":54894,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":29841},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":55690,"byte_end":55696,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58122,"byte_end":58125,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58268,"byte_end":58271,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":29841},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58725,"byte_end":58731,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66636,"byte_end":66639,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66787,"byte_end":66790,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":29841},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67359,"byte_end":67362,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":4181},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67870,"byte_end":67876,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68389,"byte_end":68395,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68911,"byte_end":68917,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":69428,"byte_end":69434,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":6543},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8314793,"byte_end":8314804,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":9045}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8315563,"byte_end":8315574,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8315781,"byte_end":8315792,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8318414,"byte_end":8318425,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8304162,"byte_end":8304168,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307029,"byte_end":8307035,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1525},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307403,"byte_end":8307409,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1525},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8307545,"byte_end":8307551,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308694,"byte_end":8308700,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1661},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308778,"byte_end":8308784,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1661},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8308919,"byte_end":8308924,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8310468,"byte_end":8310477,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8325049,"byte_end":8325060,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8332841,"byte_end":8332852,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1681},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8333345,"byte_end":8333356,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1681},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8334437,"byte_end":8334448,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8334621,"byte_end":8334632,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8336767,"byte_end":8336779,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347717,"byte_end":8347729,"line_start":325,"line_end":325,"column_start":22,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347754,"byte_end":8347766,"line_start":326,"line_end":326,"column_start":22,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8347785,"byte_end":8347797,"line_start":328,"line_end":328,"column_start":15,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8350356,"byte_end":8350362,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1737},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stderr.rs","byte_start":8350670,"byte_end":8350676,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1737},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8353084,"byte_end":8353089,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1742},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdin.rs","byte_start":8353393,"byte_end":8353398,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1742},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8355942,"byte_end":8355948,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1747},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/stdout.rs","byte_start":8356256,"byte_end":8356262,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1747},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8358382,"byte_end":8358390,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359307,"byte_end":8359316,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8359566,"byte_end":8359574,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1865},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8360129,"byte_end":8360138,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1868},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361087,"byte_end":8361092,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361485,"byte_end":8361490,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361743,"byte_end":8361748,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1774},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361871,"byte_end":8361879,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1865},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361916,"byte_end":8361925,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8361962,"byte_end":8361970,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1865},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362007,"byte_end":8362016,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362059,"byte_end":8362067,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1865},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8362235,"byte_end":8362244,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8362934,"byte_end":8362938,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1873},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8365855,"byte_end":8365867,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":184},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8374888,"byte_end":8374889,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1897},"to":{"krate":0,"index":2542}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8376812,"byte_end":8376821,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8403439,"byte_end":8403440,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1936},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8404319,"byte_end":8404328,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":244},"to":{"krate":0,"index":1944}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8405198,"byte_end":8405199,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1947},"to":{"krate":0,"index":1944}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8407136,"byte_end":8407146,"line_start":62,"line_end":62,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":269},"to":{"krate":0,"index":2586}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8429225,"byte_end":8429226,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1980},"to":{"krate":0,"index":2586}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8430626,"byte_end":8430635,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8432814,"byte_end":8432823,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11247},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8433799,"byte_end":8433808,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11247},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8434639,"byte_end":8434648,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11247},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8435159,"byte_end":8435168,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11247},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8436675,"byte_end":8436684,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438521,"byte_end":8438530,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11233},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8438672,"byte_end":8438681,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11233},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8439393,"byte_end":8439402,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8439932,"byte_end":8439941,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8440420,"byte_end":8440429,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8442383,"byte_end":8442392,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8444670,"byte_end":8444679,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11170},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8445569,"byte_end":8445578,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11170},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8446060,"byte_end":8446069,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11170},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8446356,"byte_end":8446365,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11170},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8447534,"byte_end":8447539,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448679,"byte_end":8448684,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11121},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8448963,"byte_end":8448968,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11121},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8449485,"byte_end":8449490,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11121},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8452520,"byte_end":8452524,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2621},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8455634,"byte_end":8455639,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2637},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8455848,"byte_end":8455853,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2637},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8456086,"byte_end":8456091,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8456856,"byte_end":8456861,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2640},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8458041,"byte_end":8458046,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8459298,"byte_end":8459303,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8460011,"byte_end":8460016,"line_start":112,"line_end":112,"column_start":49,"column_end":54},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11098},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8461414,"byte_end":8461418,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2648},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8462460,"byte_end":8462467,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2657},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8463859,"byte_end":8463868,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2668},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8469929,"byte_end":8469937,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8471160,"byte_end":8471165,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2327},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8472841,"byte_end":8472850,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2769},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8474914,"byte_end":8474926,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2780},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8477341,"byte_end":8477350,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2791},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8479174,"byte_end":8479180,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2803},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8480117,"byte_end":8480125,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8481958,"byte_end":8481962,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8482472,"byte_end":8482476,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8483441,"byte_end":8483446,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484185,"byte_end":8484190,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8484848,"byte_end":8484853,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10624},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8498170,"byte_end":8498182,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8498687,"byte_end":8498699,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10578},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8500238,"byte_end":8500250,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10578},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8486021,"byte_end":8486025,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8487653,"byte_end":8487657,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10533},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8488314,"byte_end":8488318,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10533},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8489875,"byte_end":8489880,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8490673,"byte_end":8490681,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8492181,"byte_end":8492189,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2874},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72068,"byte_end":72085,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":361},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72535,"byte_end":72545,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":1,"index":6697},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72585,"byte_end":72595,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":1,"index":6697},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72876,"byte_end":72888,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":1,"index":6719},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72928,"byte_end":72940,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":6719},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73200,"byte_end":73212,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":6722},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73252,"byte_end":73264,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":6722},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":76593,"byte_end":76599,"line_start":192,"line_end":192,"column_start":28,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":5,"index":4871},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":76643,"byte_end":76649,"line_start":194,"line_end":194,"column_start":40,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":4871},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":78015,"byte_end":78025,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":78673,"byte_end":78682,"line_start":263,"line_end":263,"column_start":27,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":4844}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8505172,"byte_end":8505183,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515191,"byte_end":8515202,"line_start":375,"line_end":375,"column_start":32,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3296},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515517,"byte_end":8515528,"line_start":387,"line_end":387,"column_start":41,"column_end":52},"kind":{"Impl":{"id":158}},"from":{"krate":19,"index":1033},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8515968,"byte_end":8515979,"line_start":401,"line_end":401,"column_start":36,"column_end":47},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8516305,"byte_end":8516316,"line_start":413,"line_end":413,"column_start":21,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8516532,"byte_end":8516543,"line_start":424,"line_end":424,"column_start":22,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3296},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8517375,"byte_end":8517383,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8518021,"byte_end":8518029,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3298},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8520179,"byte_end":8520187,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522642,"byte_end":8522650,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3304},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8522970,"byte_end":8522979,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3311},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8523792,"byte_end":8523800,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3304},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8523894,"byte_end":8523903,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8526964,"byte_end":8526976,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3327},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527179,"byte_end":8527191,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3327},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8527201,"byte_end":8527214,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530048,"byte_end":8530061,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8530366,"byte_end":8530380,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8531044,"byte_end":8531058,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3322},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8531217,"byte_end":8531231,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3322},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8532052,"byte_end":8532065,"line_start":258,"line_end":258,"column_start":27,"column_end":40},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3318},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8532161,"byte_end":8532175,"line_start":264,"line_end":264,"column_start":27,"column_end":41},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3322},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8534310,"byte_end":8534319,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558163,"byte_end":8558172,"line_start":807,"line_end":807,"column_start":39,"column_end":48},"kind":{"Impl":{"id":179}},"from":{"krate":19,"index":977},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558608,"byte_end":8558617,"line_start":821,"line_end":821,"column_start":34,"column_end":43},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8558970,"byte_end":8558979,"line_start":835,"line_end":835,"column_start":20,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3333},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8559293,"byte_end":8559302,"line_start":849,"line_end":849,"column_start":21,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3333},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8560046,"byte_end":8560055,"line_start":878,"line_end":878,"column_start":21,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8560269,"byte_end":8560278,"line_start":889,"line_end":889,"column_start":22,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3333},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8561284,"byte_end":8561293,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8574804,"byte_end":8574813,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":186}},"from":{"krate":19,"index":1091},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575249,"byte_end":8575258,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575578,"byte_end":8575587,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8575806,"byte_end":8575815,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3462},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8577881,"byte_end":8577893,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578096,"byte_end":8578108,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3474},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8578635,"byte_end":8578643,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8580275,"byte_end":8580283,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581603,"byte_end":8581611,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3464},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8581702,"byte_end":8581710,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8582526,"byte_end":8582538,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589161,"byte_end":8589173,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":197}},"from":{"krate":26,"index":182},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589615,"byte_end":8589627,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8589956,"byte_end":8589968,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8590093,"byte_end":8590105,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3723},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8590463,"byte_end":8590471,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8591203,"byte_end":8591211,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3725},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8593338,"byte_end":8593350,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8597854,"byte_end":8597866,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3731},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598182,"byte_end":8598194,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":205}},"from":{"krate":26,"index":186},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598636,"byte_end":8598648,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8598968,"byte_end":8598980,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8599105,"byte_end":8599117,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3731},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600109,"byte_end":8600117,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3733},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600437,"byte_end":8600446,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8600930,"byte_end":8600938,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8601034,"byte_end":8601043,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3740},"to":{"krate":2,"index":1808}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8601981,"byte_end":8601991,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605324,"byte_end":8605334,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":214}},"from":{"krate":26,"index":190},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8605772,"byte_end":8605782,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3747},"to":{"krate":2,"index":1824}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606095,"byte_end":8606105,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3747},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606419,"byte_end":8606429,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3747},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8606916,"byte_end":8606926,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8608443,"byte_end":8608453,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3747},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8608578,"byte_end":8608588,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3747},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82089,"byte_end":82098,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82272,"byte_end":82281,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82430,"byte_end":82439,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82783,"byte_end":82792,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82817,"byte_end":82826,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82836,"byte_end":82845,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83331,"byte_end":83340,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83625,"byte_end":83634,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":83975,"byte_end":83984,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84009,"byte_end":84018,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84028,"byte_end":84037,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84216,"byte_end":84225,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84510,"byte_end":84519,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86634,"byte_end":86642,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86667,"byte_end":86675,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86685,"byte_end":86693,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86868,"byte_end":86876,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":87160,"byte_end":87168,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87508,"byte_end":87519,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87544,"byte_end":87555,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87565,"byte_end":87576,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88259,"byte_end":88270,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88560,"byte_end":88571,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88735,"byte_end":88746,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs","byte_start":88934,"byte_end":88944,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8612945,"byte_end":8612951,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3780},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8613757,"byte_end":8613763,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3780},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8613977,"byte_end":8613983,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94048,"byte_end":94058,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94323,"byte_end":94333,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3806},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94792,"byte_end":94797,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99522,"byte_end":99532,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3806},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99641,"byte_end":99653,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3810},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100040,"byte_end":100056,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100903,"byte_end":100919,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3860},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101460,"byte_end":101472,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101684,"byte_end":101689,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":92670,"byte_end":92674,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":92677,"byte_end":92681,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1896},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93150,"byte_end":93153,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93242,"byte_end":93245,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":259}},"from":{"krate":5,"index":3855},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/orphan.rs","byte_start":8654071,"byte_end":8654086,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/orphan.rs","byte_start":8654330,"byte_end":8654345,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4146},"to":{"krate":0,"index":3885}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8658828,"byte_end":8658833,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1935},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8658926,"byte_end":8658932,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5683},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659076,"byte_end":8659082,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659249,"byte_end":8659255,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8659722,"byte_end":8659728,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8662023,"byte_end":8662029,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":4024}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/reap.rs","byte_start":8662205,"byte_end":8662211,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8648687,"byte_end":8648692,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":268}},"from":{"krate":1,"index":4172},"to":{"krate":0,"index":3878}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8648870,"byte_end":8648875,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":269}},"from":{"krate":1,"index":4172},"to":{"krate":0,"index":4024}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649120,"byte_end":8649137,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649286,"byte_end":8649303,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3983},"to":{"krate":0,"index":3885}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8649650,"byte_end":8649655,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3990},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650324,"byte_end":8650329,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650416,"byte_end":8650421,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3990},"to":{"krate":0,"index":4024}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650518,"byte_end":8650523,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3990},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650786,"byte_end":8650788,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4175},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8650943,"byte_end":8650945,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4175},"to":{"krate":1,"index":2974}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8651175,"byte_end":8651177,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4175},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/unix/mod.rs","byte_start":8651300,"byte_end":8651302,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4175},"to":{"krate":19,"index":16}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8619379,"byte_end":8619386,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635537,"byte_end":8635544,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4181},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8635874,"byte_end":8635888,"line_start":676,"line_end":676,"column_start":24,"column_end":38},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4186},"to":{"krate":0,"index":4024}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636094,"byte_end":8636108,"line_start":688,"line_end":688,"column_start":24,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8636245,"byte_end":8636259,"line_start":696,"line_end":696,"column_start":26,"column_end":40},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8638024,"byte_end":8638029,"line_start":749,"line_end":749,"column_start":6,"column_end":11},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8640542,"byte_end":8640547,"line_start":821,"line_end":821,"column_start":17,"column_end":22},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4193},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8641512,"byte_end":8641522,"line_start":856,"line_end":856,"column_start":21,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4200},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642047,"byte_end":8642058,"line_start":874,"line_end":874,"column_start":20,"column_end":31},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4204},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642283,"byte_end":8642294,"line_start":884,"line_end":884,"column_start":20,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4208},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642646,"byte_end":8642656,"line_start":900,"line_end":900,"column_start":22,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4200},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642781,"byte_end":8642792,"line_start":906,"line_end":906,"column_start":22,"column_end":33},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4204},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/process/mod.rs","byte_start":8642917,"byte_end":8642928,"line_start":912,"line_end":912,"column_start":22,"column_end":33},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4208},"to":{"krate":1,"index":8224}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs","byte_start":123157,"byte_end":123166,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8678140,"byte_end":8678154,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8681693,"byte_end":8681698,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4280},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8682385,"byte_end":8682399,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4245},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683286,"byte_end":8683300,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4245},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683466,"byte_end":8683473,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8683931,"byte_end":8683938,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4751},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8684106,"byte_end":8684109,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":300}},"from":{"krate":5,"index":3855},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8685207,"byte_end":8685213,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4254},"to":{"krate":0,"index":817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8692896,"byte_end":8692902,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4345},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8692927,"byte_end":8692933,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4345},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8693292,"byte_end":8693296,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8694074,"byte_end":8694078,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8699829,"byte_end":8699835,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8700460,"byte_end":8700469,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703548,"byte_end":8703557,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8703800,"byte_end":8703809,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8704086,"byte_end":8704095,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4763},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8704129,"byte_end":8704134,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":1,"index":2515},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8704812,"byte_end":8704819,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8705296,"byte_end":8705303,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8707474,"byte_end":8707479,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719783,"byte_end":8719793,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719830,"byte_end":8719840,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8719856,"byte_end":8719866,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8720042,"byte_end":8720052,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8720079,"byte_end":8720089,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8721231,"byte_end":8721241,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8721507,"byte_end":8721517,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4765},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8722764,"byte_end":8722771,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8724302,"byte_end":8724309,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4530},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8724399,"byte_end":8724406,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4530},"to":{"krate":2,"index":1906}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8727088,"byte_end":8727093,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8735949,"byte_end":8735957,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8737834,"byte_end":8737839,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4579},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8737998,"byte_end":8738006,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4769},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/waker.rs","byte_start":8739824,"byte_end":8739832,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4663},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8741580,"byte_end":8741593,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8742751,"byte_end":8742755,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4799},"to":{"krate":2,"index":4844}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/stack.rs","byte_start":8743155,"byte_end":8743159,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4799},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686226,"byte_end":8686230,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686261,"byte_end":8686265,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686402,"byte_end":8686410,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4705},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686451,"byte_end":8686459,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4705},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686584,"byte_end":8686588,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8686591,"byte_end":8686596,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1901},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688383,"byte_end":8688387,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688684,"byte_end":8688692,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8688943,"byte_end":8688947,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689140,"byte_end":8689148,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689279,"byte_end":8689283,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689452,"byte_end":8689460,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689746,"byte_end":8689750,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8689990,"byte_end":8689994,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8690146,"byte_end":8690154,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4705},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8690370,"byte_end":8690374,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4697},"to":{"krate":0,"index":770}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8745467,"byte_end":8745479,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747115,"byte_end":8747127,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747213,"byte_end":8747225,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8747386,"byte_end":8747393,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8749557,"byte_end":8749562,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs","byte_start":8752231,"byte_end":8752238,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4933},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/schedule.rs","byte_start":8752741,"byte_end":8752753,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4898},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/shutdown.rs","byte_start":8753626,"byte_end":8753634,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs","byte_start":8754868,"byte_end":8754880,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs","byte_start":8755075,"byte_end":8755087,"line_start":17,"line_end":17,"column_start":23,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4920},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126573,"byte_end":126580,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134500,"byte_end":134507,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135056,"byte_end":135063,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135583,"byte_end":135590,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":137533,"byte_end":137540,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139486,"byte_end":139493,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139572,"byte_end":139579,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":140374,"byte_end":140386,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":142039,"byte_end":142044,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":143264,"byte_end":143285,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4999},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":144115,"byte_end":144120,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":145273,"byte_end":145278,"line_start":177,"line_end":177,"column_start":10,"column_end":15},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146714,"byte_end":146719,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146849,"byte_end":146854,"line_start":224,"line_end":224,"column_start":15,"column_end":20},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147912,"byte_end":147918,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150433,"byte_end":150439,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":156229,"byte_end":156235,"line_start":272,"line_end":272,"column_start":10,"column_end":16},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159799,"byte_end":159814,"line_start":347,"line_end":347,"column_start":21,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159962,"byte_end":159977,"line_start":353,"line_end":353,"column_start":23,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":160135,"byte_end":160150,"line_start":359,"line_end":359,"column_start":23,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757079,"byte_end":8757085,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757554,"byte_end":8757560,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5068},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8757876,"byte_end":8757882,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5068},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8758534,"byte_end":8758542,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5070},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/park.rs","byte_start":8758611,"byte_end":8758616,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":162439,"byte_end":162444,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":163050,"byte_end":163056,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5110},"to":{"krate":0,"index":817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/spawner.rs","byte_start":163672,"byte_end":163679,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765664,"byte_end":8765669,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765700,"byte_end":8765705,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765736,"byte_end":8765742,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8765773,"byte_end":8765779,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8766638,"byte_end":8766643,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8773177,"byte_end":8773182,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778350,"byte_end":8778355,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5157},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778451,"byte_end":8778456,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5154},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778615,"byte_end":8778620,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8778808,"byte_end":8778814,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/queue.rs","byte_start":8782319,"byte_end":8782325,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786479,"byte_end":8786489,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786526,"byte_end":8786536,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8786552,"byte_end":8786562,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/atomic_cell.rs","byte_start":8787349,"byte_end":8787359,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8788165,"byte_end":8788169,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8792042,"byte_end":8792047,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8793525,"byte_end":8793530,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5435},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/idle.rs","byte_start":8793703,"byte_end":8793708,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5435},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8799472,"byte_end":8799477,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5450},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8803047,"byte_end":8803053,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8803828,"byte_end":8803835,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8808101,"byte_end":8808105,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8812895,"byte_end":8812901,"line_start":596,"line_end":596,"column_start":6,"column_end":12},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8813341,"byte_end":8813344,"line_start":612,"line_end":612,"column_start":25,"column_end":28},"kind":{"Impl":{"id":410}},"from":{"krate":5,"index":3855},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs","byte_start":8815915,"byte_end":8815921,"line_start":690,"line_end":690,"column_start":6,"column_end":12},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8784377,"byte_end":8784387,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785542,"byte_end":8785552,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5416},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785691,"byte_end":8785701,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5416},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8785808,"byte_end":8785815,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs","byte_start":8786160,"byte_end":8786167,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113303,"byte_end":113310,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":168318,"byte_end":168324,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169092,"byte_end":169098,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169865,"byte_end":169875,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":749},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":171125,"byte_end":171131,"line_start":170,"line_end":170,"column_start":10,"column_end":16},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8823772,"byte_end":8823775,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":422}},"from":{"krate":5,"index":4181},"to":{"krate":0,"index":5532}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8824497,"byte_end":8824505,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8824595,"byte_end":8824603,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8826756,"byte_end":8826763,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8826871,"byte_end":8826878,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8832950,"byte_end":8832959,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5600},"to":{"krate":0,"index":5542}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833073,"byte_end":8833082,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5600},"to":{"krate":0,"index":5532}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833470,"byte_end":8833481,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5666},"to":{"krate":0,"index":5542}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8833767,"byte_end":8833777,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8837573,"byte_end":8837583,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5627},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8839932,"byte_end":8839938,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8840223,"byte_end":8840229,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8846443,"byte_end":8846449,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8848307,"byte_end":8848313,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5683},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883076,"byte_end":8883085,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883231,"byte_end":8883240,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6279},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8883279,"byte_end":8883288,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6279},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884239,"byte_end":8884248,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884394,"byte_end":8884403,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6290},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8884442,"byte_end":8884451,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6290},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8885374,"byte_end":8885379,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":10020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8885559,"byte_end":8885564,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":10020},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887109,"byte_end":8887123,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5840},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887142,"byte_end":8887149,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":9999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8887433,"byte_end":8887440,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":9999},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888416,"byte_end":8888422,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":446}},"from":{"krate":5,"index":4871},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888477,"byte_end":8888483,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":447}},"from":{"krate":5,"index":4871},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888872,"byte_end":8888875,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":448}},"from":{"krate":5,"index":4181},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8888921,"byte_end":8888924,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":449}},"from":{"krate":5,"index":4181},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889307,"byte_end":8889310,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":450}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889358,"byte_end":8889361,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":451}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889876,"byte_end":8889882,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":452}},"from":{"krate":2,"index":29855},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8889971,"byte_end":8889977,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":453}},"from":{"krate":2,"index":29855},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891055,"byte_end":8891060,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":454}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891108,"byte_end":8891113,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":455}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891513,"byte_end":8891521,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":456}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":5769}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8891569,"byte_end":8891577,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":457}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":5840}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892838,"byte_end":8892843,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6301},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892874,"byte_end":8892879,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6301},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8892910,"byte_end":8892915,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6301},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8893458,"byte_end":8893463,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6301},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894077,"byte_end":8894083,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9926},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894301,"byte_end":8894307,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":9926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8894426,"byte_end":8894432,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":9926},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895518,"byte_end":8895527,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":9881},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895748,"byte_end":8895757,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":9881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8895879,"byte_end":8895888,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":9881},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8896960,"byte_end":8896970,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":9853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8897166,"byte_end":8897176,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":9853},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8898075,"byte_end":8898079,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":9805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8898239,"byte_end":8898243,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":9805},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899177,"byte_end":8899181,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6308},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8899843,"byte_end":8899847,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6308},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900552,"byte_end":8900555,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":9738},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900744,"byte_end":8900747,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":9738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8900868,"byte_end":8900871,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":9738},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8901716,"byte_end":8901721,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":9689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8901975,"byte_end":8901980,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":9689},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903492,"byte_end":8903496,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6314},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903530,"byte_end":8903534,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8903675,"byte_end":8903679,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6314},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904166,"byte_end":8904170,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6322},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8904797,"byte_end":8904801,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6322},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905336,"byte_end":8905343,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6328},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905374,"byte_end":8905381,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6328},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8905412,"byte_end":8905419,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6328},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8906112,"byte_end":8906119,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6328},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8911784,"byte_end":8911793,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8918794,"byte_end":8918803,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8920342,"byte_end":8920351,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6335},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921567,"byte_end":8921571,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":9652},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921781,"byte_end":8921785,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":9652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8921918,"byte_end":8921922,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":9652},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923148,"byte_end":8923157,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":9607},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923378,"byte_end":8923387,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":9607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8923572,"byte_end":8923581,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":9607},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924930,"byte_end":8924937,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6347},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8924971,"byte_end":8924978,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8925185,"byte_end":8925192,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6347},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8925802,"byte_end":8925806,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":9570},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8926016,"byte_end":8926020,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":9570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8926153,"byte_end":8926157,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9570},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8927676,"byte_end":8927685,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":9521},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8927945,"byte_end":8927954,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":9521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8928147,"byte_end":8928156,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":9521},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":8959381,"byte_end":8959388,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":8959743,"byte_end":8959750,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9498},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8858547,"byte_end":8858553,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":6242}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8882306,"byte_end":8882308,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6277},"to":{"krate":0,"index":6242}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8978188,"byte_end":8978195,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/barrier.rs","byte_start":8981475,"byte_end":8981492,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992059,"byte_end":8992065,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6456},"to":{"krate":2,"index":1811}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992192,"byte_end":8992198,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6456},"to":{"krate":2,"index":1811}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992359,"byte_end":8992363,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6450},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8992433,"byte_end":8992437,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6450},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995211,"byte_end":8995217,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995254,"byte_end":8995260,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995298,"byte_end":8995306,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995343,"byte_end":8995351,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":8995367,"byte_end":8995373,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001009,"byte_end":9001013,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001405,"byte_end":9001411,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001591,"byte_end":9001597,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9001751,"byte_end":9001759,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9006624,"byte_end":9006632,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9009385,"byte_end":9009390,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6512},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9012804,"byte_end":9012812,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6419},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9013262,"byte_end":9013270,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9014454,"byte_end":9014458,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9015300,"byte_end":9015304,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6450},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9016034,"byte_end":9016042,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9017354,"byte_end":9017358,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6450},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9018082,"byte_end":9018086,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6450},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9018884,"byte_end":9018890,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6441},"to":{"krate":0,"index":770}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019305,"byte_end":9019311,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019455,"byte_end":9019463,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019598,"byte_end":9019607,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9019780,"byte_end":9019789,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6446},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020080,"byte_end":9020089,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7746},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020362,"byte_end":9020371,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":7746},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020398,"byte_end":9020410,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":7758},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/broadcast.rs","byte_start":9020752,"byte_end":9020764,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7758},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9025283,"byte_end":9025288,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9035270,"byte_end":9035276,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9035758,"byte_end":9035764,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036402,"byte_end":9036408,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036540,"byte_end":9036546,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9036953,"byte_end":9036961,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9038733,"byte_end":9038741,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041169,"byte_end":9041177,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041237,"byte_end":9041245,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6676},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9041433,"byte_end":9041439,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9052829,"byte_end":9052831,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6741},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053232,"byte_end":9053234,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6750},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053541,"byte_end":9053550,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7803},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9053812,"byte_end":9053824,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7810},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9055519,"byte_end":9055523,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6774},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056156,"byte_end":9056164,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056430,"byte_end":9056434,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6774},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056483,"byte_end":9056487,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6774},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9056966,"byte_end":9056968,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057666,"byte_end":9057668,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057816,"byte_end":9057818,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9057996,"byte_end":9057998,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6741},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9058398,"byte_end":9058400,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6741},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9058809,"byte_end":9058811,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9061782,"byte_end":9061784,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6750},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9062220,"byte_end":9062224,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9062688,"byte_end":9062692,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6774},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9063241,"byte_end":9063253,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7790},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9064743,"byte_end":9064754,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":6764}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9067471,"byte_end":9067473,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9073177,"byte_end":9073179,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6898},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9073456,"byte_end":9073458,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9076857,"byte_end":9076859,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6902},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077533,"byte_end":9077548,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9077689,"byte_end":9077704,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9078162,"byte_end":9078179,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9079157,"byte_end":9079174,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081646,"byte_end":9081663,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6947},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9081829,"byte_end":9081844,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082696,"byte_end":9082705,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7803},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9082865,"byte_end":9082874,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7803},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083360,"byte_end":9083372,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7810},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083405,"byte_end":9083417,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7810},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083757,"byte_end":9083769,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7810},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9083998,"byte_end":9084007,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7821},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084137,"byte_end":9084146,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7821},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084632,"byte_end":9084644,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7826},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9084950,"byte_end":9084962,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7826},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085119,"byte_end":9085130,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085229,"byte_end":9085240,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7836},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085370,"byte_end":9085381,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7836},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085885,"byte_end":9085901,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7846},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9085938,"byte_end":9085954,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7846},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091356,"byte_end":9091361,"line_start":141,"line_end":141,"column_start":25,"column_end":30},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7857},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091406,"byte_end":9091411,"line_start":142,"line_end":142,"column_start":25,"column_end":30},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7857},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091460,"byte_end":9091470,"line_start":143,"line_end":143,"column_start":29,"column_end":39},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091526,"byte_end":9091541,"line_start":144,"line_end":144,"column_start":25,"column_end":40},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091819,"byte_end":9091831,"line_start":154,"line_end":154,"column_start":23,"column_end":35},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7864},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9091974,"byte_end":9091986,"line_start":160,"line_end":160,"column_start":16,"column_end":28},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7864},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9092786,"byte_end":9092791,"line_start":186,"line_end":186,"column_start":9,"column_end":14},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097300,"byte_end":9097305,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7857},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097389,"byte_end":9097394,"line_start":344,"line_end":344,"column_start":21,"column_end":26},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7857},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097539,"byte_end":9097549,"line_start":355,"line_end":355,"column_start":22,"column_end":32},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097646,"byte_end":9097656,"line_start":361,"line_end":361,"column_start":23,"column_end":33},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097799,"byte_end":9097809,"line_start":368,"line_end":368,"column_start":26,"column_end":36},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9097961,"byte_end":9097971,"line_start":374,"line_end":374,"column_start":40,"column_end":50},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098132,"byte_end":9098142,"line_start":380,"line_end":380,"column_start":44,"column_end":54},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7016},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098312,"byte_end":9098327,"line_start":388,"line_end":388,"column_start":18,"column_end":33},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098416,"byte_end":9098431,"line_start":394,"line_end":394,"column_start":19,"column_end":34},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098566,"byte_end":9098581,"line_start":401,"line_end":401,"column_start":22,"column_end":37},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098725,"byte_end":9098740,"line_start":407,"line_end":407,"column_start":36,"column_end":51},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mutex.rs","byte_start":9098893,"byte_end":9098908,"line_start":413,"line_end":413,"column_start":40,"column_end":55},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102872,"byte_end":9102880,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7881},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9102913,"byte_end":9102921,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7881},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9103184,"byte_end":9103190,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9107198,"byte_end":9107204,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9108942,"byte_end":9108950,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9109460,"byte_end":9109468,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7881},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9114298,"byte_end":9114306,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7881},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/notify.rs","byte_start":9117264,"byte_end":9117270,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7874},"to":{"krate":0,"index":770}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119146,"byte_end":9119155,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7910},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119317,"byte_end":9119326,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7910},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119395,"byte_end":9119407,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7922},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9119706,"byte_end":9119718,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7922},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9121529,"byte_end":9121535,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127474,"byte_end":9127480,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7898},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9127619,"byte_end":9127627,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9131982,"byte_end":9131990,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7904},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9132137,"byte_end":9132145,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7904},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9132608,"byte_end":9132613,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136818,"byte_end":9136823,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136860,"byte_end":9136865,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9136890,"byte_end":9136895,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9137264,"byte_end":9137269,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9137664,"byte_end":9137669,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9139382,"byte_end":9139387,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7935},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9142865,"byte_end":9142874,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9152406,"byte_end":9152415,"line_start":348,"line_end":348,"column_start":21,"column_end":30},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7290},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9152616,"byte_end":9152622,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9153488,"byte_end":9153495,"line_start":385,"line_end":385,"column_start":17,"column_end":24},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7296},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9154124,"byte_end":9154131,"line_start":408,"line_end":408,"column_start":10,"column_end":17},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9154930,"byte_end":9154937,"line_start":438,"line_end":438,"column_start":15,"column_end":22},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7296},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156579,"byte_end":9156586,"line_start":475,"line_end":475,"column_start":22,"column_end":29},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7296},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156633,"byte_end":9156645,"line_start":479,"line_end":479,"column_start":6,"column_end":18},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156738,"byte_end":9156750,"line_start":485,"line_end":485,"column_start":23,"column_end":35},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7948},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156894,"byte_end":9156906,"line_start":491,"line_end":491,"column_start":28,"column_end":40},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9156953,"byte_end":9156968,"line_start":495,"line_end":495,"column_start":6,"column_end":21},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9157590,"byte_end":9157605,"line_start":516,"line_end":516,"column_start":23,"column_end":38},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7941},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9157903,"byte_end":9157918,"line_start":525,"line_end":525,"column_start":28,"column_end":43},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7941},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/batch_semaphore.rs","byte_start":9158011,"byte_end":9158017,"line_start":530,"line_end":530,"column_start":35,"column_end":41},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7302},"to":{"krate":0,"index":770}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163286,"byte_end":9163295,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179367,"byte_end":9179376,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7384},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179455,"byte_end":9179464,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7384},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179842,"byte_end":9179851,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7384},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179876,"byte_end":9179885,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7384},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9179923,"byte_end":9179929,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186335,"byte_end":9186341,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7953},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186414,"byte_end":9186420,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7953},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9186842,"byte_end":9186854,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187034,"byte_end":9187046,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7958},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187190,"byte_end":9187202,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7958},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187249,"byte_end":9187264,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9187794,"byte_end":9187809,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7963},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9188107,"byte_end":9188122,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7963},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9188160,"byte_end":9188166,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9193579,"byte_end":9193587,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9197250,"byte_end":9197258,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7976},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9197611,"byte_end":9197622,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9200351,"byte_end":9200360,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202332,"byte_end":9202347,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202592,"byte_end":9202612,"line_start":145,"line_end":145,"column_start":6,"column_end":26},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202866,"byte_end":9202881,"line_start":154,"line_end":154,"column_start":19,"column_end":34},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8006},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore.rs","byte_start":9202989,"byte_end":9203009,"line_start":160,"line_end":160,"column_start":15,"column_end":35},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8013},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9206877,"byte_end":9206892,"line_start":113,"line_end":113,"column_start":13,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9207148,"byte_end":9207163,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208167,"byte_end":9208173,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8023},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208218,"byte_end":9208224,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8023},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208280,"byte_end":9208295,"line_start":158,"line_end":158,"column_start":29,"column_end":44},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8030},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208355,"byte_end":9208371,"line_start":159,"line_end":159,"column_start":29,"column_end":45},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8039},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9208412,"byte_end":9208418,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211463,"byte_end":9211478,"line_start":258,"line_end":258,"column_start":24,"column_end":39},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8030},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211609,"byte_end":9211625,"line_start":266,"line_end":266,"column_start":24,"column_end":40},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8039},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211759,"byte_end":9211775,"line_start":274,"line_end":274,"column_start":27,"column_end":43},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8039},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211897,"byte_end":9211903,"line_start":280,"line_end":280,"column_start":21,"column_end":27},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8023},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/rwlock.rs","byte_start":9211987,"byte_end":9211993,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8023},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9218268,"byte_end":9218279,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224206,"byte_end":9224217,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224303,"byte_end":9224314,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224447,"byte_end":9224458,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224483,"byte_end":9224494,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7598},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9224590,"byte_end":9224595,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":692}},"from":{"krate":2,"index":8316},"to":{"krate":0,"index":7621}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9228136,"byte_end":9228145,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":8078},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9228325,"byte_end":9228334,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":8078},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9230493,"byte_end":9230501,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":8057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9231773,"byte_end":9231781,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":8057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233147,"byte_end":9233155,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":8057},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233414,"byte_end":9233422,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":8057},"to":{"krate":2,"index":1598}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233725,"byte_end":9233733,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8057},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9233847,"byte_end":9233853,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235420,"byte_end":9235426,"line_start":374,"line_end":374,"column_start":18,"column_end":24},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8064},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235665,"byte_end":9235668,"line_start":385,"line_end":385,"column_start":24,"column_end":27},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8070},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235809,"byte_end":9235815,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9235917,"byte_end":9235924,"line_start":403,"line_end":403,"column_start":6,"column_end":13},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236147,"byte_end":9236154,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8093},"to":{"krate":2,"index":1626}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236271,"byte_end":9236278,"line_start":418,"line_end":418,"column_start":23,"column_end":30},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8093},"to":{"krate":2,"index":1631}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236308,"byte_end":9236315,"line_start":420,"line_end":420,"column_start":26,"column_end":33},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8093},"to":{"krate":2,"index":6249}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/watch.rs","byte_start":9236462,"byte_end":9236469,"line_start":426,"line_end":426,"column_start":26,"column_end":33},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8093},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9254854,"byte_end":9254862,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8137},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9261959,"byte_end":9261967,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9269745,"byte_end":9269753,"line_start":444,"line_end":444,"column_start":21,"column_end":29},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9269892,"byte_end":9269900,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9270865,"byte_end":9270873,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9270954,"byte_end":9270962,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9271829,"byte_end":9271837,"line_start":510,"line_end":510,"column_start":28,"column_end":36},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":9452},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9272722,"byte_end":9272728,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9273291,"byte_end":9273294,"line_start":560,"line_end":560,"column_start":25,"column_end":28},"kind":{"Impl":{"id":717}},"from":{"krate":5,"index":3855},"to":{"krate":0,"index":4715}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9276738,"byte_end":9276746,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278522,"byte_end":9278530,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9278738,"byte_end":9278746,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8237},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9279067,"byte_end":9279082,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9375},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9279383,"byte_end":9279388,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8265},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280006,"byte_end":9280007,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8278},"to":{"krate":0,"index":8276}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280192,"byte_end":9280203,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8297},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280347,"byte_end":9280358,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8297},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9280505,"byte_end":9280516,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8297},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/clock.rs","byte_start":9284035,"byte_end":9284040,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9294413,"byte_end":9294423,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312031,"byte_end":9312041,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8794},"to":{"krate":2,"index":1935}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312069,"byte_end":9312079,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8794},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312216,"byte_end":9312226,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8794},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9312608,"byte_end":9312613,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8819},"to":{"krate":0,"index":8738}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314740,"byte_end":9314745,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8819},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314875,"byte_end":9314878,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":8813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9314965,"byte_end":9314972,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9317074,"byte_end":9317079,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":8836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9318057,"byte_end":9318062,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8836},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9331112,"byte_end":9331123,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9333101,"byte_end":9333119,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8844},"to":{"krate":2,"index":4844}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9333691,"byte_end":9333709,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8844},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9337661,"byte_end":9337666,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9343894,"byte_end":9343899,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8848},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9344107,"byte_end":9344112,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8848},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9344137,"byte_end":9344142,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8848},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9344519,"byte_end":9344525,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9345170,"byte_end":9345176,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":8872},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9345621,"byte_end":9345633,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9346458,"byte_end":9346470,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":8876},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9346754,"byte_end":9346759,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":8880},"to":{"krate":2,"index":1887}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9346850,"byte_end":9346855,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8880},"to":{"krate":0,"index":8738}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9322680,"byte_end":9322686,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9326333,"byte_end":9326339,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8884},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9328328,"byte_end":9328334,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8884},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9328811,"byte_end":9328816,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9330433,"byte_end":9330438,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351127,"byte_end":9351132,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351847,"byte_end":9351852,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":8893},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9351879,"byte_end":9351884,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":8893},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9352590,"byte_end":9352597,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":8905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356371,"byte_end":9356378,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356507,"byte_end":9356514,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":761}},"from":{"krate":1,"index":7664},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356629,"byte_end":9356636,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356801,"byte_end":9356808,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1990}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9356913,"byte_end":9356920,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1964}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357061,"byte_end":9357068,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1964}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357229,"byte_end":9357236,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":1994}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9357343,"byte_end":9357350,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":8905},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9360075,"byte_end":9360083,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":8928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9361378,"byte_end":9361386,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":8928},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364608,"byte_end":9364615,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":8940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9364744,"byte_end":9364751,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":8933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9365289,"byte_end":9365296,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":8933},"to":{"krate":2,"index":8178}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366097,"byte_end":9366104,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":8940},"to":{"krate":2,"index":6066}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366248,"byte_end":9366255,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":8940},"to":{"krate":1,"index":1633}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9366292,"byte_end":9366297,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"kind":{"Impl":{"id":775}},"from":{"krate":1,"index":2515},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9384437,"byte_end":9384445,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9385260,"byte_end":9385268,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9352},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9376201,"byte_end":9376206,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":8711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9380958,"byte_end":9380963,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":8711},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9382079,"byte_end":9382086,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":8738}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9368022,"byte_end":9368027,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":8982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9373735,"byte_end":9373739,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":8996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9386101,"byte_end":9386105,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":9190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9387579,"byte_end":9387583,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":9190},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/addr.rs","byte_start":9394802,"byte_end":9394809,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":9196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/entry.rs","byte_start":9397444,"byte_end":9397451,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1887},"to":{"krate":0,"index":9045}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/generation.rs","byte_start":9397838,"byte_end":9397848,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":9211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9398987,"byte_end":9398992,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":9068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9399334,"byte_end":9399340,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":9070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9403292,"byte_end":9403297,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":9068},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9403603,"byte_end":9403609,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":9070},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9405752,"byte_end":9405757,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":9114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9407436,"byte_end":9407441,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":9114},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/slot.rs","byte_start":9407818,"byte_end":9407822,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":9137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9408793,"byte_end":9408806,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":9158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9409634,"byte_end":9409647,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":9158},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389181,"byte_end":9389185,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":9173},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389222,"byte_end":9389226,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":9173},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9389249,"byte_end":9389253,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":9173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9390768,"byte_end":9390772,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":9173},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174394,"byte_end":174404,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174463,"byte_end":174473,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175762,"byte_end":175770,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175807,"byte_end":175815,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175869,"byte_end":175879,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":178883,"byte_end":178893,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179138,"byte_end":179148,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179548,"byte_end":179558,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":179780,"byte_end":179784,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":9239},"to":{"krate":2,"index":4844}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180231,"byte_end":180239,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180438,"byte_end":180446,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":6061}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":190518,"byte_end":190526,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":9252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192066,"byte_end":192070,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1896},"to":{"krate":0,"index":817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192073,"byte_end":192077,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":817}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192388,"byte_end":192396,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":9261},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410459,"byte_end":9410466,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":9277},"to":{"krate":2,"index":1896}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410503,"byte_end":9410510,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9277},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410548,"byte_end":9410557,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":9281},"to":{"krate":2,"index":1908}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9410743,"byte_end":9410750,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":9277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411384,"byte_end":9411393,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":9281},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411525,"byte_end":9411534,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":9281},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/try_lock.rs","byte_start":9411656,"byte_end":9411665,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":9281},"to":{"krate":2,"index":2089}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":194854,"byte_end":194862,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":9308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195112,"byte_end":195120,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":9308},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195225,"byte_end":195233,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":9308},"to":{"krate":2,"index":2078}},{"span":{"file_name":"/home/montu/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195542,"byte_end":195552,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":9317},"to":{"krate":4294967295,"index":4294967295}}]}